

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Feb 21 16:55:55 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	swtext1,local,class=CONST,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	swtext2,local,class=CONST,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  008C                     	;# 
    66  008D                     	;# 
    67  008E                     	;# 
    68  0090                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0097                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  009F                     	;# 
    80  010C                     	;# 
    81  010D                     	;# 
    82  010E                     	;# 
    83  0111                     	;# 
    84  0112                     	;# 
    85  0113                     	;# 
    86  0114                     	;# 
    87  0115                     	;# 
    88  0116                     	;# 
    89  0117                     	;# 
    90  0118                     	;# 
    91  0119                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  018E                     	;# 
    95  0197                     	;# 
    96  0199                     	;# 
    97  0199                     	;# 
    98  0199                     	;# 
    99  019A                     	;# 
   100  019A                     	;# 
   101  019A                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019C                     	;# 
   110  019D                     	;# 
   111  019D                     	;# 
   112  019D                     	;# 
   113  019E                     	;# 
   114  019E                     	;# 
   115  019E                     	;# 
   116  019F                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  020C                     	;# 
   122  020D                     	;# 
   123  020E                     	;# 
   124  0211                     	;# 
   125  0211                     	;# 
   126  0212                     	;# 
   127  0212                     	;# 
   128  0213                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0214                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0216                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0217                     	;# 
   140  0219                     	;# 
   141  021A                     	;# 
   142  021B                     	;# 
   143  021C                     	;# 
   144  021D                     	;# 
   145  021D                     	;# 
   146  021E                     	;# 
   147  021F                     	;# 
   148  028C                     	;# 
   149  028D                     	;# 
   150  028E                     	;# 
   151  0291                     	;# 
   152  0291                     	;# 
   153  0292                     	;# 
   154  0293                     	;# 
   155  0294                     	;# 
   156  0295                     	;# 
   157  0295                     	;# 
   158  0296                     	;# 
   159  0297                     	;# 
   160  0298                     	;# 
   161  029F                     	;# 
   162  030C                     	;# 
   163  030D                     	;# 
   164  030E                     	;# 
   165  0311                     	;# 
   166  0311                     	;# 
   167  0312                     	;# 
   168  0313                     	;# 
   169  0314                     	;# 
   170  0315                     	;# 
   171  0315                     	;# 
   172  0316                     	;# 
   173  0317                     	;# 
   174  0318                     	;# 
   175  038C                     	;# 
   176  038D                     	;# 
   177  038E                     	;# 
   178  0391                     	;# 
   179  0392                     	;# 
   180  0393                     	;# 
   181  0394                     	;# 
   182  0395                     	;# 
   183  0396                     	;# 
   184  0397                     	;# 
   185  0398                     	;# 
   186  0399                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  040C                     	;# 
   193  040D                     	;# 
   194  040E                     	;# 
   195  0411                     	;# 
   196  0411                     	;# 
   197  0412                     	;# 
   198  0413                     	;# 
   199  0414                     	;# 
   200  0415                     	;# 
   201  0416                     	;# 
   202  0417                     	;# 
   203  0418                     	;# 
   204  0418                     	;# 
   205  0419                     	;# 
   206  041A                     	;# 
   207  041B                     	;# 
   208  041C                     	;# 
   209  041D                     	;# 
   210  041E                     	;# 
   211  041F                     	;# 
   212  048C                     	;# 
   213  048D                     	;# 
   214  048E                     	;# 
   215  0498                     	;# 
   216  0498                     	;# 
   217  0499                     	;# 
   218  049A                     	;# 
   219  049B                     	;# 
   220  049B                     	;# 
   221  049C                     	;# 
   222  049D                     	;# 
   223  049E                     	;# 
   224  049F                     	;# 
   225  0617                     	;# 
   226  0618                     	;# 
   227  0619                     	;# 
   228  0619                     	;# 
   229  061A                     	;# 
   230  061B                     	;# 
   231  061C                     	;# 
   232  061C                     	;# 
   233  061F                     	;# 
   234  0691                     	;# 
   235  0692                     	;# 
   236  0693                     	;# 
   237  0694                     	;# 
   238  0695                     	;# 
   239  0696                     	;# 
   240  0697                     	;# 
   241  0698                     	;# 
   242  0699                     	;# 
   243  0711                     	;# 
   244  0712                     	;# 
   245  0713                     	;# 
   246  0714                     	;# 
   247  0715                     	;# 
   248  0716                     	;# 
   249  0717                     	;# 
   250  0718                     	;# 
   251  0719                     	;# 
   252  0891                     	;# 
   253  0891                     	;# 
   254  0892                     	;# 
   255  0893                     	;# 
   256  0893                     	;# 
   257  0894                     	;# 
   258  0895                     	;# 
   259  0896                     	;# 
   260  089B                     	;# 
   261  0911                     	;# 
   262  0912                     	;# 
   263  0913                     	;# 
   264  0914                     	;# 
   265  0915                     	;# 
   266  0916                     	;# 
   267  0918                     	;# 
   268  0919                     	;# 
   269  091A                     	;# 
   270  091B                     	;# 
   271  091C                     	;# 
   272  091D                     	;# 
   273  091E                     	;# 
   274  091F                     	;# 
   275  0E0F                     	;# 
   276  0E10                     	;# 
   277  0E11                     	;# 
   278  0E12                     	;# 
   279  0E13                     	;# 
   280  0E14                     	;# 
   281  0E15                     	;# 
   282  0E16                     	;# 
   283  0E17                     	;# 
   284  0E18                     	;# 
   285  0E19                     	;# 
   286  0E1A                     	;# 
   287  0E1B                     	;# 
   288  0E1C                     	;# 
   289  0E1D                     	;# 
   290  0E1E                     	;# 
   291  0E1F                     	;# 
   292  0E20                     	;# 
   293  0E21                     	;# 
   294  0E22                     	;# 
   295  0E24                     	;# 
   296  0E25                     	;# 
   297  0E28                     	;# 
   298  0E29                     	;# 
   299  0E2A                     	;# 
   300  0E2B                     	;# 
   301  0E2C                     	;# 
   302  0E2D                     	;# 
   303  0E2E                     	;# 
   304  0E2F                     	;# 
   305  0E90                     	;# 
   306  0E91                     	;# 
   307  0E92                     	;# 
   308  0E94                     	;# 
   309  0E95                     	;# 
   310  0E9C                     	;# 
   311  0E9D                     	;# 
   312  0E9E                     	;# 
   313  0E9F                     	;# 
   314  0EA0                     	;# 
   315  0EA1                     	;# 
   316  0EA2                     	;# 
   317  0EA3                     	;# 
   318  0EA4                     	;# 
   319  0EA5                     	;# 
   320  0EA6                     	;# 
   321  0EA7                     	;# 
   322  0F0F                     	;# 
   323  0F10                     	;# 
   324  0F11                     	;# 
   325  0F12                     	;# 
   326  0F13                     	;# 
   327  0F14                     	;# 
   328  0F15                     	;# 
   329  0F16                     	;# 
   330  0F17                     	;# 
   331  0F18                     	;# 
   332  0F19                     	;# 
   333  0F1A                     	;# 
   334  0F1B                     	;# 
   335  0F1C                     	;# 
   336  0F1D                     	;# 
   337  0F1E                     	;# 
   338  0F1F                     	;# 
   339  0F20                     	;# 
   340  0F21                     	;# 
   341  0F22                     	;# 
   342  0F23                     	;# 
   343  0F24                     	;# 
   344  0F25                     	;# 
   345  0F26                     	;# 
   346  0F27                     	;# 
   347  0F28                     	;# 
   348  0F29                     	;# 
   349  0F2A                     	;# 
   350  0F2B                     	;# 
   351  0F2C                     	;# 
   352  0F2D                     	;# 
   353  0F2E                     	;# 
   354  0F2F                     	;# 
   355  0F30                     	;# 
   356  0F31                     	;# 
   357  0F32                     	;# 
   358  0F33                     	;# 
   359  0F34                     	;# 
   360  0F35                     	;# 
   361  0F36                     	;# 
   362  0F37                     	;# 
   363  0FE4                     	;# 
   364  0FE5                     	;# 
   365  0FE6                     	;# 
   366  0FE7                     	;# 
   367  0FE8                     	;# 
   368  0FE9                     	;# 
   369  0FEA                     	;# 
   370  0FEB                     	;# 
   371  0FED                     	;# 
   372  0FEE                     	;# 
   373  0FEF                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  001D                     	;# 
   404  001E                     	;# 
   405  001F                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  0090                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0094                     	;# 
   414  0097                     	;# 
   415  009B                     	;# 
   416  009B                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  010C                     	;# 
   422  010D                     	;# 
   423  010E                     	;# 
   424  0111                     	;# 
   425  0112                     	;# 
   426  0113                     	;# 
   427  0114                     	;# 
   428  0115                     	;# 
   429  0116                     	;# 
   430  0117                     	;# 
   431  0118                     	;# 
   432  0119                     	;# 
   433  018C                     	;# 
   434  018D                     	;# 
   435  018E                     	;# 
   436  0197                     	;# 
   437  0199                     	;# 
   438  0199                     	;# 
   439  0199                     	;# 
   440  019A                     	;# 
   441  019A                     	;# 
   442  019A                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019B                     	;# 
   447  019B                     	;# 
   448  019C                     	;# 
   449  019C                     	;# 
   450  019C                     	;# 
   451  019D                     	;# 
   452  019D                     	;# 
   453  019D                     	;# 
   454  019E                     	;# 
   455  019E                     	;# 
   456  019E                     	;# 
   457  019F                     	;# 
   458  019F                     	;# 
   459  019F                     	;# 
   460  019F                     	;# 
   461  019F                     	;# 
   462  020C                     	;# 
   463  020D                     	;# 
   464  020E                     	;# 
   465  0211                     	;# 
   466  0211                     	;# 
   467  0212                     	;# 
   468  0212                     	;# 
   469  0213                     	;# 
   470  0213                     	;# 
   471  0214                     	;# 
   472  0214                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0216                     	;# 
   478  0216                     	;# 
   479  0217                     	;# 
   480  0217                     	;# 
   481  0219                     	;# 
   482  021A                     	;# 
   483  021B                     	;# 
   484  021C                     	;# 
   485  021D                     	;# 
   486  021D                     	;# 
   487  021E                     	;# 
   488  021F                     	;# 
   489  028C                     	;# 
   490  028D                     	;# 
   491  028E                     	;# 
   492  0291                     	;# 
   493  0291                     	;# 
   494  0292                     	;# 
   495  0293                     	;# 
   496  0294                     	;# 
   497  0295                     	;# 
   498  0295                     	;# 
   499  0296                     	;# 
   500  0297                     	;# 
   501  0298                     	;# 
   502  029F                     	;# 
   503  030C                     	;# 
   504  030D                     	;# 
   505  030E                     	;# 
   506  0311                     	;# 
   507  0311                     	;# 
   508  0312                     	;# 
   509  0313                     	;# 
   510  0314                     	;# 
   511  0315                     	;# 
   512  0315                     	;# 
   513  0316                     	;# 
   514  0317                     	;# 
   515  0318                     	;# 
   516  038C                     	;# 
   517  038D                     	;# 
   518  038E                     	;# 
   519  0391                     	;# 
   520  0392                     	;# 
   521  0393                     	;# 
   522  0394                     	;# 
   523  0395                     	;# 
   524  0396                     	;# 
   525  0397                     	;# 
   526  0398                     	;# 
   527  0399                     	;# 
   528  039A                     	;# 
   529  039C                     	;# 
   530  039D                     	;# 
   531  039E                     	;# 
   532  039F                     	;# 
   533  040C                     	;# 
   534  040D                     	;# 
   535  040E                     	;# 
   536  0411                     	;# 
   537  0411                     	;# 
   538  0412                     	;# 
   539  0413                     	;# 
   540  0414                     	;# 
   541  0415                     	;# 
   542  0416                     	;# 
   543  0417                     	;# 
   544  0418                     	;# 
   545  0418                     	;# 
   546  0419                     	;# 
   547  041A                     	;# 
   548  041B                     	;# 
   549  041C                     	;# 
   550  041D                     	;# 
   551  041E                     	;# 
   552  041F                     	;# 
   553  048C                     	;# 
   554  048D                     	;# 
   555  048E                     	;# 
   556  0498                     	;# 
   557  0498                     	;# 
   558  0499                     	;# 
   559  049A                     	;# 
   560  049B                     	;# 
   561  049B                     	;# 
   562  049C                     	;# 
   563  049D                     	;# 
   564  049E                     	;# 
   565  049F                     	;# 
   566  0617                     	;# 
   567  0618                     	;# 
   568  0619                     	;# 
   569  0619                     	;# 
   570  061A                     	;# 
   571  061B                     	;# 
   572  061C                     	;# 
   573  061C                     	;# 
   574  061F                     	;# 
   575  0691                     	;# 
   576  0692                     	;# 
   577  0693                     	;# 
   578  0694                     	;# 
   579  0695                     	;# 
   580  0696                     	;# 
   581  0697                     	;# 
   582  0698                     	;# 
   583  0699                     	;# 
   584  0711                     	;# 
   585  0712                     	;# 
   586  0713                     	;# 
   587  0714                     	;# 
   588  0715                     	;# 
   589  0716                     	;# 
   590  0717                     	;# 
   591  0718                     	;# 
   592  0719                     	;# 
   593  0891                     	;# 
   594  0891                     	;# 
   595  0892                     	;# 
   596  0893                     	;# 
   597  0893                     	;# 
   598  0894                     	;# 
   599  0895                     	;# 
   600  0896                     	;# 
   601  089B                     	;# 
   602  0911                     	;# 
   603  0912                     	;# 
   604  0913                     	;# 
   605  0914                     	;# 
   606  0915                     	;# 
   607  0916                     	;# 
   608  0918                     	;# 
   609  0919                     	;# 
   610  091A                     	;# 
   611  091B                     	;# 
   612  091C                     	;# 
   613  091D                     	;# 
   614  091E                     	;# 
   615  091F                     	;# 
   616  0E0F                     	;# 
   617  0E10                     	;# 
   618  0E11                     	;# 
   619  0E12                     	;# 
   620  0E13                     	;# 
   621  0E14                     	;# 
   622  0E15                     	;# 
   623  0E16                     	;# 
   624  0E17                     	;# 
   625  0E18                     	;# 
   626  0E19                     	;# 
   627  0E1A                     	;# 
   628  0E1B                     	;# 
   629  0E1C                     	;# 
   630  0E1D                     	;# 
   631  0E1E                     	;# 
   632  0E1F                     	;# 
   633  0E20                     	;# 
   634  0E21                     	;# 
   635  0E22                     	;# 
   636  0E24                     	;# 
   637  0E25                     	;# 
   638  0E28                     	;# 
   639  0E29                     	;# 
   640  0E2A                     	;# 
   641  0E2B                     	;# 
   642  0E2C                     	;# 
   643  0E2D                     	;# 
   644  0E2E                     	;# 
   645  0E2F                     	;# 
   646  0E90                     	;# 
   647  0E91                     	;# 
   648  0E92                     	;# 
   649  0E94                     	;# 
   650  0E95                     	;# 
   651  0E9C                     	;# 
   652  0E9D                     	;# 
   653  0E9E                     	;# 
   654  0E9F                     	;# 
   655  0EA0                     	;# 
   656  0EA1                     	;# 
   657  0EA2                     	;# 
   658  0EA3                     	;# 
   659  0EA4                     	;# 
   660  0EA5                     	;# 
   661  0EA6                     	;# 
   662  0EA7                     	;# 
   663  0F0F                     	;# 
   664  0F10                     	;# 
   665  0F11                     	;# 
   666  0F12                     	;# 
   667  0F13                     	;# 
   668  0F14                     	;# 
   669  0F15                     	;# 
   670  0F16                     	;# 
   671  0F17                     	;# 
   672  0F18                     	;# 
   673  0F19                     	;# 
   674  0F1A                     	;# 
   675  0F1B                     	;# 
   676  0F1C                     	;# 
   677  0F1D                     	;# 
   678  0F1E                     	;# 
   679  0F1F                     	;# 
   680  0F20                     	;# 
   681  0F21                     	;# 
   682  0F22                     	;# 
   683  0F23                     	;# 
   684  0F24                     	;# 
   685  0F25                     	;# 
   686  0F26                     	;# 
   687  0F27                     	;# 
   688  0F28                     	;# 
   689  0F29                     	;# 
   690  0F2A                     	;# 
   691  0F2B                     	;# 
   692  0F2C                     	;# 
   693  0F2D                     	;# 
   694  0F2E                     	;# 
   695  0F2F                     	;# 
   696  0F30                     	;# 
   697  0F31                     	;# 
   698  0F32                     	;# 
   699  0F33                     	;# 
   700  0F34                     	;# 
   701  0F35                     	;# 
   702  0F36                     	;# 
   703  0F37                     	;# 
   704  0FE4                     	;# 
   705  0FE5                     	;# 
   706  0FE6                     	;# 
   707  0FE7                     	;# 
   708  0FE8                     	;# 
   709  0FE9                     	;# 
   710  0FEA                     	;# 
   711  0FEB                     	;# 
   712  0FED                     	;# 
   713  0FEE                     	;# 
   714  0FEF                     	;# 
   715  0000                     	;# 
   716  0001                     	;# 
   717  0002                     	;# 
   718  0003                     	;# 
   719  0004                     	;# 
   720  0005                     	;# 
   721  0006                     	;# 
   722  0007                     	;# 
   723  0008                     	;# 
   724  0009                     	;# 
   725  000A                     	;# 
   726  000B                     	;# 
   727  000C                     	;# 
   728  000D                     	;# 
   729  000E                     	;# 
   730  0010                     	;# 
   731  0011                     	;# 
   732  0012                     	;# 
   733  0013                     	;# 
   734  0014                     	;# 
   735  0015                     	;# 
   736  0016                     	;# 
   737  0017                     	;# 
   738  0018                     	;# 
   739  0019                     	;# 
   740  0019                     	;# 
   741  001A                     	;# 
   742  001B                     	;# 
   743  001C                     	;# 
   744  001D                     	;# 
   745  001E                     	;# 
   746  001F                     	;# 
   747  008C                     	;# 
   748  008D                     	;# 
   749  008E                     	;# 
   750  0090                     	;# 
   751  0091                     	;# 
   752  0092                     	;# 
   753  0093                     	;# 
   754  0094                     	;# 
   755  0097                     	;# 
   756  009B                     	;# 
   757  009B                     	;# 
   758  009C                     	;# 
   759  009D                     	;# 
   760  009E                     	;# 
   761  009F                     	;# 
   762  010C                     	;# 
   763  010D                     	;# 
   764  010E                     	;# 
   765  0111                     	;# 
   766  0112                     	;# 
   767  0113                     	;# 
   768  0114                     	;# 
   769  0115                     	;# 
   770  0116                     	;# 
   771  0117                     	;# 
   772  0118                     	;# 
   773  0119                     	;# 
   774  018C                     	;# 
   775  018D                     	;# 
   776  018E                     	;# 
   777  0197                     	;# 
   778  0199                     	;# 
   779  0199                     	;# 
   780  0199                     	;# 
   781  019A                     	;# 
   782  019A                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019C                     	;# 
   790  019C                     	;# 
   791  019C                     	;# 
   792  019D                     	;# 
   793  019D                     	;# 
   794  019D                     	;# 
   795  019E                     	;# 
   796  019E                     	;# 
   797  019E                     	;# 
   798  019F                     	;# 
   799  019F                     	;# 
   800  019F                     	;# 
   801  019F                     	;# 
   802  019F                     	;# 
   803  020C                     	;# 
   804  020D                     	;# 
   805  020E                     	;# 
   806  0211                     	;# 
   807  0211                     	;# 
   808  0212                     	;# 
   809  0212                     	;# 
   810  0213                     	;# 
   811  0213                     	;# 
   812  0214                     	;# 
   813  0214                     	;# 
   814  0215                     	;# 
   815  0215                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0216                     	;# 
   819  0216                     	;# 
   820  0217                     	;# 
   821  0217                     	;# 
   822  0219                     	;# 
   823  021A                     	;# 
   824  021B                     	;# 
   825  021C                     	;# 
   826  021D                     	;# 
   827  021D                     	;# 
   828  021E                     	;# 
   829  021F                     	;# 
   830  028C                     	;# 
   831  028D                     	;# 
   832  028E                     	;# 
   833  0291                     	;# 
   834  0291                     	;# 
   835  0292                     	;# 
   836  0293                     	;# 
   837  0294                     	;# 
   838  0295                     	;# 
   839  0295                     	;# 
   840  0296                     	;# 
   841  0297                     	;# 
   842  0298                     	;# 
   843  029F                     	;# 
   844  030C                     	;# 
   845  030D                     	;# 
   846  030E                     	;# 
   847  0311                     	;# 
   848  0311                     	;# 
   849  0312                     	;# 
   850  0313                     	;# 
   851  0314                     	;# 
   852  0315                     	;# 
   853  0315                     	;# 
   854  0316                     	;# 
   855  0317                     	;# 
   856  0318                     	;# 
   857  038C                     	;# 
   858  038D                     	;# 
   859  038E                     	;# 
   860  0391                     	;# 
   861  0392                     	;# 
   862  0393                     	;# 
   863  0394                     	;# 
   864  0395                     	;# 
   865  0396                     	;# 
   866  0397                     	;# 
   867  0398                     	;# 
   868  0399                     	;# 
   869  039A                     	;# 
   870  039C                     	;# 
   871  039D                     	;# 
   872  039E                     	;# 
   873  039F                     	;# 
   874  040C                     	;# 
   875  040D                     	;# 
   876  040E                     	;# 
   877  0411                     	;# 
   878  0411                     	;# 
   879  0412                     	;# 
   880  0413                     	;# 
   881  0414                     	;# 
   882  0415                     	;# 
   883  0416                     	;# 
   884  0417                     	;# 
   885  0418                     	;# 
   886  0418                     	;# 
   887  0419                     	;# 
   888  041A                     	;# 
   889  041B                     	;# 
   890  041C                     	;# 
   891  041D                     	;# 
   892  041E                     	;# 
   893  041F                     	;# 
   894  048C                     	;# 
   895  048D                     	;# 
   896  048E                     	;# 
   897  0498                     	;# 
   898  0498                     	;# 
   899  0499                     	;# 
   900  049A                     	;# 
   901  049B                     	;# 
   902  049B                     	;# 
   903  049C                     	;# 
   904  049D                     	;# 
   905  049E                     	;# 
   906  049F                     	;# 
   907  0617                     	;# 
   908  0618                     	;# 
   909  0619                     	;# 
   910  0619                     	;# 
   911  061A                     	;# 
   912  061B                     	;# 
   913  061C                     	;# 
   914  061C                     	;# 
   915  061F                     	;# 
   916  0691                     	;# 
   917  0692                     	;# 
   918  0693                     	;# 
   919  0694                     	;# 
   920  0695                     	;# 
   921  0696                     	;# 
   922  0697                     	;# 
   923  0698                     	;# 
   924  0699                     	;# 
   925  0711                     	;# 
   926  0712                     	;# 
   927  0713                     	;# 
   928  0714                     	;# 
   929  0715                     	;# 
   930  0716                     	;# 
   931  0717                     	;# 
   932  0718                     	;# 
   933  0719                     	;# 
   934  0891                     	;# 
   935  0891                     	;# 
   936  0892                     	;# 
   937  0893                     	;# 
   938  0893                     	;# 
   939  0894                     	;# 
   940  0895                     	;# 
   941  0896                     	;# 
   942  089B                     	;# 
   943  0911                     	;# 
   944  0912                     	;# 
   945  0913                     	;# 
   946  0914                     	;# 
   947  0915                     	;# 
   948  0916                     	;# 
   949  0918                     	;# 
   950  0919                     	;# 
   951  091A                     	;# 
   952  091B                     	;# 
   953  091C                     	;# 
   954  091D                     	;# 
   955  091E                     	;# 
   956  091F                     	;# 
   957  0E0F                     	;# 
   958  0E10                     	;# 
   959  0E11                     	;# 
   960  0E12                     	;# 
   961  0E13                     	;# 
   962  0E14                     	;# 
   963  0E15                     	;# 
   964  0E16                     	;# 
   965  0E17                     	;# 
   966  0E18                     	;# 
   967  0E19                     	;# 
   968  0E1A                     	;# 
   969  0E1B                     	;# 
   970  0E1C                     	;# 
   971  0E1D                     	;# 
   972  0E1E                     	;# 
   973  0E1F                     	;# 
   974  0E20                     	;# 
   975  0E21                     	;# 
   976  0E22                     	;# 
   977  0E24                     	;# 
   978  0E25                     	;# 
   979  0E28                     	;# 
   980  0E29                     	;# 
   981  0E2A                     	;# 
   982  0E2B                     	;# 
   983  0E2C                     	;# 
   984  0E2D                     	;# 
   985  0E2E                     	;# 
   986  0E2F                     	;# 
   987  0E90                     	;# 
   988  0E91                     	;# 
   989  0E92                     	;# 
   990  0E94                     	;# 
   991  0E95                     	;# 
   992  0E9C                     	;# 
   993  0E9D                     	;# 
   994  0E9E                     	;# 
   995  0E9F                     	;# 
   996  0EA0                     	;# 
   997  0EA1                     	;# 
   998  0EA2                     	;# 
   999  0EA3                     	;# 
  1000  0EA4                     	;# 
  1001  0EA5                     	;# 
  1002  0EA6                     	;# 
  1003  0EA7                     	;# 
  1004  0F0F                     	;# 
  1005  0F10                     	;# 
  1006  0F11                     	;# 
  1007  0F12                     	;# 
  1008  0F13                     	;# 
  1009  0F14                     	;# 
  1010  0F15                     	;# 
  1011  0F16                     	;# 
  1012  0F17                     	;# 
  1013  0F18                     	;# 
  1014  0F19                     	;# 
  1015  0F1A                     	;# 
  1016  0F1B                     	;# 
  1017  0F1C                     	;# 
  1018  0F1D                     	;# 
  1019  0F1E                     	;# 
  1020  0F1F                     	;# 
  1021  0F20                     	;# 
  1022  0F21                     	;# 
  1023  0F22                     	;# 
  1024  0F23                     	;# 
  1025  0F24                     	;# 
  1026  0F25                     	;# 
  1027  0F26                     	;# 
  1028  0F27                     	;# 
  1029  0F28                     	;# 
  1030  0F29                     	;# 
  1031  0F2A                     	;# 
  1032  0F2B                     	;# 
  1033  0F2C                     	;# 
  1034  0F2D                     	;# 
  1035  0F2E                     	;# 
  1036  0F2F                     	;# 
  1037  0F30                     	;# 
  1038  0F31                     	;# 
  1039  0F32                     	;# 
  1040  0F33                     	;# 
  1041  0F34                     	;# 
  1042  0F35                     	;# 
  1043  0F36                     	;# 
  1044  0F37                     	;# 
  1045  0FE4                     	;# 
  1046  0FE5                     	;# 
  1047  0FE6                     	;# 
  1048  0FE7                     	;# 
  1049  0FE8                     	;# 
  1050  0FE9                     	;# 
  1051  0FEA                     	;# 
  1052  0FEB                     	;# 
  1053  0FED                     	;# 
  1054  0FEE                     	;# 
  1055  0FEF                     	;# 
  1056  0000                     	;# 
  1057  0001                     	;# 
  1058  0002                     	;# 
  1059  0003                     	;# 
  1060  0004                     	;# 
  1061  0005                     	;# 
  1062  0006                     	;# 
  1063  0007                     	;# 
  1064  0008                     	;# 
  1065  0009                     	;# 
  1066  000A                     	;# 
  1067  000B                     	;# 
  1068  000C                     	;# 
  1069  000D                     	;# 
  1070  000E                     	;# 
  1071  0010                     	;# 
  1072  0011                     	;# 
  1073  0012                     	;# 
  1074  0013                     	;# 
  1075  0014                     	;# 
  1076  0015                     	;# 
  1077  0016                     	;# 
  1078  0017                     	;# 
  1079  0018                     	;# 
  1080  0019                     	;# 
  1081  0019                     	;# 
  1082  001A                     	;# 
  1083  001B                     	;# 
  1084  001C                     	;# 
  1085  001D                     	;# 
  1086  001E                     	;# 
  1087  001F                     	;# 
  1088  008C                     	;# 
  1089  008D                     	;# 
  1090  008E                     	;# 
  1091  0090                     	;# 
  1092  0091                     	;# 
  1093  0092                     	;# 
  1094  0093                     	;# 
  1095  0094                     	;# 
  1096  0097                     	;# 
  1097  009B                     	;# 
  1098  009B                     	;# 
  1099  009C                     	;# 
  1100  009D                     	;# 
  1101  009E                     	;# 
  1102  009F                     	;# 
  1103  010C                     	;# 
  1104  010D                     	;# 
  1105  010E                     	;# 
  1106  0111                     	;# 
  1107  0112                     	;# 
  1108  0113                     	;# 
  1109  0114                     	;# 
  1110  0115                     	;# 
  1111  0116                     	;# 
  1112  0117                     	;# 
  1113  0118                     	;# 
  1114  0119                     	;# 
  1115  018C                     	;# 
  1116  018D                     	;# 
  1117  018E                     	;# 
  1118  0197                     	;# 
  1119  0199                     	;# 
  1120  0199                     	;# 
  1121  0199                     	;# 
  1122  019A                     	;# 
  1123  019A                     	;# 
  1124  019A                     	;# 
  1125  019B                     	;# 
  1126  019B                     	;# 
  1127  019B                     	;# 
  1128  019B                     	;# 
  1129  019B                     	;# 
  1130  019C                     	;# 
  1131  019C                     	;# 
  1132  019C                     	;# 
  1133  019D                     	;# 
  1134  019D                     	;# 
  1135  019D                     	;# 
  1136  019E                     	;# 
  1137  019E                     	;# 
  1138  019E                     	;# 
  1139  019F                     	;# 
  1140  019F                     	;# 
  1141  019F                     	;# 
  1142  019F                     	;# 
  1143  019F                     	;# 
  1144  020C                     	;# 
  1145  020D                     	;# 
  1146  020E                     	;# 
  1147  0211                     	;# 
  1148  0211                     	;# 
  1149  0212                     	;# 
  1150  0212                     	;# 
  1151  0213                     	;# 
  1152  0213                     	;# 
  1153  0214                     	;# 
  1154  0214                     	;# 
  1155  0215                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0215                     	;# 
  1159  0216                     	;# 
  1160  0216                     	;# 
  1161  0217                     	;# 
  1162  0217                     	;# 
  1163  0219                     	;# 
  1164  021A                     	;# 
  1165  021B                     	;# 
  1166  021C                     	;# 
  1167  021D                     	;# 
  1168  021D                     	;# 
  1169  021E                     	;# 
  1170  021F                     	;# 
  1171  028C                     	;# 
  1172  028D                     	;# 
  1173  028E                     	;# 
  1174  0291                     	;# 
  1175  0291                     	;# 
  1176  0292                     	;# 
  1177  0293                     	;# 
  1178  0294                     	;# 
  1179  0295                     	;# 
  1180  0295                     	;# 
  1181  0296                     	;# 
  1182  0297                     	;# 
  1183  0298                     	;# 
  1184  029F                     	;# 
  1185  030C                     	;# 
  1186  030D                     	;# 
  1187  030E                     	;# 
  1188  0311                     	;# 
  1189  0311                     	;# 
  1190  0312                     	;# 
  1191  0313                     	;# 
  1192  0314                     	;# 
  1193  0315                     	;# 
  1194  0315                     	;# 
  1195  0316                     	;# 
  1196  0317                     	;# 
  1197  0318                     	;# 
  1198  038C                     	;# 
  1199  038D                     	;# 
  1200  038E                     	;# 
  1201  0391                     	;# 
  1202  0392                     	;# 
  1203  0393                     	;# 
  1204  0394                     	;# 
  1205  0395                     	;# 
  1206  0396                     	;# 
  1207  0397                     	;# 
  1208  0398                     	;# 
  1209  0399                     	;# 
  1210  039A                     	;# 
  1211  039C                     	;# 
  1212  039D                     	;# 
  1213  039E                     	;# 
  1214  039F                     	;# 
  1215  040C                     	;# 
  1216  040D                     	;# 
  1217  040E                     	;# 
  1218  0411                     	;# 
  1219  0411                     	;# 
  1220  0412                     	;# 
  1221  0413                     	;# 
  1222  0414                     	;# 
  1223  0415                     	;# 
  1224  0416                     	;# 
  1225  0417                     	;# 
  1226  0418                     	;# 
  1227  0418                     	;# 
  1228  0419                     	;# 
  1229  041A                     	;# 
  1230  041B                     	;# 
  1231  041C                     	;# 
  1232  041D                     	;# 
  1233  041E                     	;# 
  1234  041F                     	;# 
  1235  048C                     	;# 
  1236  048D                     	;# 
  1237  048E                     	;# 
  1238  0498                     	;# 
  1239  0498                     	;# 
  1240  0499                     	;# 
  1241  049A                     	;# 
  1242  049B                     	;# 
  1243  049B                     	;# 
  1244  049C                     	;# 
  1245  049D                     	;# 
  1246  049E                     	;# 
  1247  049F                     	;# 
  1248  0617                     	;# 
  1249  0618                     	;# 
  1250  0619                     	;# 
  1251  0619                     	;# 
  1252  061A                     	;# 
  1253  061B                     	;# 
  1254  061C                     	;# 
  1255  061C                     	;# 
  1256  061F                     	;# 
  1257  0691                     	;# 
  1258  0692                     	;# 
  1259  0693                     	;# 
  1260  0694                     	;# 
  1261  0695                     	;# 
  1262  0696                     	;# 
  1263  0697                     	;# 
  1264  0698                     	;# 
  1265  0699                     	;# 
  1266  0711                     	;# 
  1267  0712                     	;# 
  1268  0713                     	;# 
  1269  0714                     	;# 
  1270  0715                     	;# 
  1271  0716                     	;# 
  1272  0717                     	;# 
  1273  0718                     	;# 
  1274  0719                     	;# 
  1275  0891                     	;# 
  1276  0891                     	;# 
  1277  0892                     	;# 
  1278  0893                     	;# 
  1279  0893                     	;# 
  1280  0894                     	;# 
  1281  0895                     	;# 
  1282  0896                     	;# 
  1283  089B                     	;# 
  1284  0911                     	;# 
  1285  0912                     	;# 
  1286  0913                     	;# 
  1287  0914                     	;# 
  1288  0915                     	;# 
  1289  0916                     	;# 
  1290  0918                     	;# 
  1291  0919                     	;# 
  1292  091A                     	;# 
  1293  091B                     	;# 
  1294  091C                     	;# 
  1295  091D                     	;# 
  1296  091E                     	;# 
  1297  091F                     	;# 
  1298  0E0F                     	;# 
  1299  0E10                     	;# 
  1300  0E11                     	;# 
  1301  0E12                     	;# 
  1302  0E13                     	;# 
  1303  0E14                     	;# 
  1304  0E15                     	;# 
  1305  0E16                     	;# 
  1306  0E17                     	;# 
  1307  0E18                     	;# 
  1308  0E19                     	;# 
  1309  0E1A                     	;# 
  1310  0E1B                     	;# 
  1311  0E1C                     	;# 
  1312  0E1D                     	;# 
  1313  0E1E                     	;# 
  1314  0E1F                     	;# 
  1315  0E20                     	;# 
  1316  0E21                     	;# 
  1317  0E22                     	;# 
  1318  0E24                     	;# 
  1319  0E25                     	;# 
  1320  0E28                     	;# 
  1321  0E29                     	;# 
  1322  0E2A                     	;# 
  1323  0E2B                     	;# 
  1324  0E2C                     	;# 
  1325  0E2D                     	;# 
  1326  0E2E                     	;# 
  1327  0E2F                     	;# 
  1328  0E90                     	;# 
  1329  0E91                     	;# 
  1330  0E92                     	;# 
  1331  0E94                     	;# 
  1332  0E95                     	;# 
  1333  0E9C                     	;# 
  1334  0E9D                     	;# 
  1335  0E9E                     	;# 
  1336  0E9F                     	;# 
  1337  0EA0                     	;# 
  1338  0EA1                     	;# 
  1339  0EA2                     	;# 
  1340  0EA3                     	;# 
  1341  0EA4                     	;# 
  1342  0EA5                     	;# 
  1343  0EA6                     	;# 
  1344  0EA7                     	;# 
  1345  0F0F                     	;# 
  1346  0F10                     	;# 
  1347  0F11                     	;# 
  1348  0F12                     	;# 
  1349  0F13                     	;# 
  1350  0F14                     	;# 
  1351  0F15                     	;# 
  1352  0F16                     	;# 
  1353  0F17                     	;# 
  1354  0F18                     	;# 
  1355  0F19                     	;# 
  1356  0F1A                     	;# 
  1357  0F1B                     	;# 
  1358  0F1C                     	;# 
  1359  0F1D                     	;# 
  1360  0F1E                     	;# 
  1361  0F1F                     	;# 
  1362  0F20                     	;# 
  1363  0F21                     	;# 
  1364  0F22                     	;# 
  1365  0F23                     	;# 
  1366  0F24                     	;# 
  1367  0F25                     	;# 
  1368  0F26                     	;# 
  1369  0F27                     	;# 
  1370  0F28                     	;# 
  1371  0F29                     	;# 
  1372  0F2A                     	;# 
  1373  0F2B                     	;# 
  1374  0F2C                     	;# 
  1375  0F2D                     	;# 
  1376  0F2E                     	;# 
  1377  0F2F                     	;# 
  1378  0F30                     	;# 
  1379  0F31                     	;# 
  1380  0F32                     	;# 
  1381  0F33                     	;# 
  1382  0F34                     	;# 
  1383  0F35                     	;# 
  1384  0F36                     	;# 
  1385  0F37                     	;# 
  1386  0FE4                     	;# 
  1387  0FE5                     	;# 
  1388  0FE6                     	;# 
  1389  0FE7                     	;# 
  1390  0FE8                     	;# 
  1391  0FE9                     	;# 
  1392  0FEA                     	;# 
  1393  0FEB                     	;# 
  1394  0FED                     	;# 
  1395  0FEE                     	;# 
  1396  0FEF                     	;# 
  1397  0000                     	;# 
  1398  0001                     	;# 
  1399  0002                     	;# 
  1400  0003                     	;# 
  1401  0004                     	;# 
  1402  0005                     	;# 
  1403  0006                     	;# 
  1404  0007                     	;# 
  1405  0008                     	;# 
  1406  0009                     	;# 
  1407  000A                     	;# 
  1408  000B                     	;# 
  1409  000C                     	;# 
  1410  000D                     	;# 
  1411  000E                     	;# 
  1412  0010                     	;# 
  1413  0011                     	;# 
  1414  0012                     	;# 
  1415  0013                     	;# 
  1416  0014                     	;# 
  1417  0015                     	;# 
  1418  0016                     	;# 
  1419  0017                     	;# 
  1420  0018                     	;# 
  1421  0019                     	;# 
  1422  0019                     	;# 
  1423  001A                     	;# 
  1424  001B                     	;# 
  1425  001C                     	;# 
  1426  001D                     	;# 
  1427  001E                     	;# 
  1428  001F                     	;# 
  1429  008C                     	;# 
  1430  008D                     	;# 
  1431  008E                     	;# 
  1432  0090                     	;# 
  1433  0091                     	;# 
  1434  0092                     	;# 
  1435  0093                     	;# 
  1436  0094                     	;# 
  1437  0097                     	;# 
  1438  009B                     	;# 
  1439  009B                     	;# 
  1440  009C                     	;# 
  1441  009D                     	;# 
  1442  009E                     	;# 
  1443  009F                     	;# 
  1444  010C                     	;# 
  1445  010D                     	;# 
  1446  010E                     	;# 
  1447  0111                     	;# 
  1448  0112                     	;# 
  1449  0113                     	;# 
  1450  0114                     	;# 
  1451  0115                     	;# 
  1452  0116                     	;# 
  1453  0117                     	;# 
  1454  0118                     	;# 
  1455  0119                     	;# 
  1456  018C                     	;# 
  1457  018D                     	;# 
  1458  018E                     	;# 
  1459  0197                     	;# 
  1460  0199                     	;# 
  1461  0199                     	;# 
  1462  0199                     	;# 
  1463  019A                     	;# 
  1464  019A                     	;# 
  1465  019A                     	;# 
  1466  019B                     	;# 
  1467  019B                     	;# 
  1468  019B                     	;# 
  1469  019B                     	;# 
  1470  019B                     	;# 
  1471  019C                     	;# 
  1472  019C                     	;# 
  1473  019C                     	;# 
  1474  019D                     	;# 
  1475  019D                     	;# 
  1476  019D                     	;# 
  1477  019E                     	;# 
  1478  019E                     	;# 
  1479  019E                     	;# 
  1480  019F                     	;# 
  1481  019F                     	;# 
  1482  019F                     	;# 
  1483  019F                     	;# 
  1484  019F                     	;# 
  1485  020C                     	;# 
  1486  020D                     	;# 
  1487  020E                     	;# 
  1488  0211                     	;# 
  1489  0211                     	;# 
  1490  0212                     	;# 
  1491  0212                     	;# 
  1492  0213                     	;# 
  1493  0213                     	;# 
  1494  0214                     	;# 
  1495  0214                     	;# 
  1496  0215                     	;# 
  1497  0215                     	;# 
  1498  0215                     	;# 
  1499  0215                     	;# 
  1500  0216                     	;# 
  1501  0216                     	;# 
  1502  0217                     	;# 
  1503  0217                     	;# 
  1504  0219                     	;# 
  1505  021A                     	;# 
  1506  021B                     	;# 
  1507  021C                     	;# 
  1508  021D                     	;# 
  1509  021D                     	;# 
  1510  021E                     	;# 
  1511  021F                     	;# 
  1512  028C                     	;# 
  1513  028D                     	;# 
  1514  028E                     	;# 
  1515  0291                     	;# 
  1516  0291                     	;# 
  1517  0292                     	;# 
  1518  0293                     	;# 
  1519  0294                     	;# 
  1520  0295                     	;# 
  1521  0295                     	;# 
  1522  0296                     	;# 
  1523  0297                     	;# 
  1524  0298                     	;# 
  1525  029F                     	;# 
  1526  030C                     	;# 
  1527  030D                     	;# 
  1528  030E                     	;# 
  1529  0311                     	;# 
  1530  0311                     	;# 
  1531  0312                     	;# 
  1532  0313                     	;# 
  1533  0314                     	;# 
  1534  0315                     	;# 
  1535  0315                     	;# 
  1536  0316                     	;# 
  1537  0317                     	;# 
  1538  0318                     	;# 
  1539  038C                     	;# 
  1540  038D                     	;# 
  1541  038E                     	;# 
  1542  0391                     	;# 
  1543  0392                     	;# 
  1544  0393                     	;# 
  1545  0394                     	;# 
  1546  0395                     	;# 
  1547  0396                     	;# 
  1548  0397                     	;# 
  1549  0398                     	;# 
  1550  0399                     	;# 
  1551  039A                     	;# 
  1552  039C                     	;# 
  1553  039D                     	;# 
  1554  039E                     	;# 
  1555  039F                     	;# 
  1556  040C                     	;# 
  1557  040D                     	;# 
  1558  040E                     	;# 
  1559  0411                     	;# 
  1560  0411                     	;# 
  1561  0412                     	;# 
  1562  0413                     	;# 
  1563  0414                     	;# 
  1564  0415                     	;# 
  1565  0416                     	;# 
  1566  0417                     	;# 
  1567  0418                     	;# 
  1568  0418                     	;# 
  1569  0419                     	;# 
  1570  041A                     	;# 
  1571  041B                     	;# 
  1572  041C                     	;# 
  1573  041D                     	;# 
  1574  041E                     	;# 
  1575  041F                     	;# 
  1576  048C                     	;# 
  1577  048D                     	;# 
  1578  048E                     	;# 
  1579  0498                     	;# 
  1580  0498                     	;# 
  1581  0499                     	;# 
  1582  049A                     	;# 
  1583  049B                     	;# 
  1584  049B                     	;# 
  1585  049C                     	;# 
  1586  049D                     	;# 
  1587  049E                     	;# 
  1588  049F                     	;# 
  1589  0617                     	;# 
  1590  0618                     	;# 
  1591  0619                     	;# 
  1592  0619                     	;# 
  1593  061A                     	;# 
  1594  061B                     	;# 
  1595  061C                     	;# 
  1596  061C                     	;# 
  1597  061F                     	;# 
  1598  0691                     	;# 
  1599  0692                     	;# 
  1600  0693                     	;# 
  1601  0694                     	;# 
  1602  0695                     	;# 
  1603  0696                     	;# 
  1604  0697                     	;# 
  1605  0698                     	;# 
  1606  0699                     	;# 
  1607  0711                     	;# 
  1608  0712                     	;# 
  1609  0713                     	;# 
  1610  0714                     	;# 
  1611  0715                     	;# 
  1612  0716                     	;# 
  1613  0717                     	;# 
  1614  0718                     	;# 
  1615  0719                     	;# 
  1616  0891                     	;# 
  1617  0891                     	;# 
  1618  0892                     	;# 
  1619  0893                     	;# 
  1620  0893                     	;# 
  1621  0894                     	;# 
  1622  0895                     	;# 
  1623  0896                     	;# 
  1624  089B                     	;# 
  1625  0911                     	;# 
  1626  0912                     	;# 
  1627  0913                     	;# 
  1628  0914                     	;# 
  1629  0915                     	;# 
  1630  0916                     	;# 
  1631  0918                     	;# 
  1632  0919                     	;# 
  1633  091A                     	;# 
  1634  091B                     	;# 
  1635  091C                     	;# 
  1636  091D                     	;# 
  1637  091E                     	;# 
  1638  091F                     	;# 
  1639  0E0F                     	;# 
  1640  0E10                     	;# 
  1641  0E11                     	;# 
  1642  0E12                     	;# 
  1643  0E13                     	;# 
  1644  0E14                     	;# 
  1645  0E15                     	;# 
  1646  0E16                     	;# 
  1647  0E17                     	;# 
  1648  0E18                     	;# 
  1649  0E19                     	;# 
  1650  0E1A                     	;# 
  1651  0E1B                     	;# 
  1652  0E1C                     	;# 
  1653  0E1D                     	;# 
  1654  0E1E                     	;# 
  1655  0E1F                     	;# 
  1656  0E20                     	;# 
  1657  0E21                     	;# 
  1658  0E22                     	;# 
  1659  0E24                     	;# 
  1660  0E25                     	;# 
  1661  0E28                     	;# 
  1662  0E29                     	;# 
  1663  0E2A                     	;# 
  1664  0E2B                     	;# 
  1665  0E2C                     	;# 
  1666  0E2D                     	;# 
  1667  0E2E                     	;# 
  1668  0E2F                     	;# 
  1669  0E90                     	;# 
  1670  0E91                     	;# 
  1671  0E92                     	;# 
  1672  0E94                     	;# 
  1673  0E95                     	;# 
  1674  0E9C                     	;# 
  1675  0E9D                     	;# 
  1676  0E9E                     	;# 
  1677  0E9F                     	;# 
  1678  0EA0                     	;# 
  1679  0EA1                     	;# 
  1680  0EA2                     	;# 
  1681  0EA3                     	;# 
  1682  0EA4                     	;# 
  1683  0EA5                     	;# 
  1684  0EA6                     	;# 
  1685  0EA7                     	;# 
  1686  0F0F                     	;# 
  1687  0F10                     	;# 
  1688  0F11                     	;# 
  1689  0F12                     	;# 
  1690  0F13                     	;# 
  1691  0F14                     	;# 
  1692  0F15                     	;# 
  1693  0F16                     	;# 
  1694  0F17                     	;# 
  1695  0F18                     	;# 
  1696  0F19                     	;# 
  1697  0F1A                     	;# 
  1698  0F1B                     	;# 
  1699  0F1C                     	;# 
  1700  0F1D                     	;# 
  1701  0F1E                     	;# 
  1702  0F1F                     	;# 
  1703  0F20                     	;# 
  1704  0F21                     	;# 
  1705  0F22                     	;# 
  1706  0F23                     	;# 
  1707  0F24                     	;# 
  1708  0F25                     	;# 
  1709  0F26                     	;# 
  1710  0F27                     	;# 
  1711  0F28                     	;# 
  1712  0F29                     	;# 
  1713  0F2A                     	;# 
  1714  0F2B                     	;# 
  1715  0F2C                     	;# 
  1716  0F2D                     	;# 
  1717  0F2E                     	;# 
  1718  0F2F                     	;# 
  1719  0F30                     	;# 
  1720  0F31                     	;# 
  1721  0F32                     	;# 
  1722  0F33                     	;# 
  1723  0F34                     	;# 
  1724  0F35                     	;# 
  1725  0F36                     	;# 
  1726  0F37                     	;# 
  1727  0FE4                     	;# 
  1728  0FE5                     	;# 
  1729  0FE6                     	;# 
  1730  0FE7                     	;# 
  1731  0FE8                     	;# 
  1732  0FE9                     	;# 
  1733  0FEA                     	;# 
  1734  0FEB                     	;# 
  1735  0FED                     	;# 
  1736  0FEE                     	;# 
  1737  0FEF                     	;# 
  1738  0000                     	;# 
  1739  0001                     	;# 
  1740  0002                     	;# 
  1741  0003                     	;# 
  1742  0004                     	;# 
  1743  0005                     	;# 
  1744  0006                     	;# 
  1745  0007                     	;# 
  1746  0008                     	;# 
  1747  0009                     	;# 
  1748  000A                     	;# 
  1749  000B                     	;# 
  1750  000C                     	;# 
  1751  000D                     	;# 
  1752  000E                     	;# 
  1753  0010                     	;# 
  1754  0011                     	;# 
  1755  0012                     	;# 
  1756  0013                     	;# 
  1757  0014                     	;# 
  1758  0015                     	;# 
  1759  0016                     	;# 
  1760  0017                     	;# 
  1761  0018                     	;# 
  1762  0019                     	;# 
  1763  0019                     	;# 
  1764  001A                     	;# 
  1765  001B                     	;# 
  1766  001C                     	;# 
  1767  001D                     	;# 
  1768  001E                     	;# 
  1769  001F                     	;# 
  1770  008C                     	;# 
  1771  008D                     	;# 
  1772  008E                     	;# 
  1773  0090                     	;# 
  1774  0091                     	;# 
  1775  0092                     	;# 
  1776  0093                     	;# 
  1777  0094                     	;# 
  1778  0097                     	;# 
  1779  009B                     	;# 
  1780  009B                     	;# 
  1781  009C                     	;# 
  1782  009D                     	;# 
  1783  009E                     	;# 
  1784  009F                     	;# 
  1785  010C                     	;# 
  1786  010D                     	;# 
  1787  010E                     	;# 
  1788  0111                     	;# 
  1789  0112                     	;# 
  1790  0113                     	;# 
  1791  0114                     	;# 
  1792  0115                     	;# 
  1793  0116                     	;# 
  1794  0117                     	;# 
  1795  0118                     	;# 
  1796  0119                     	;# 
  1797  018C                     	;# 
  1798  018D                     	;# 
  1799  018E                     	;# 
  1800  0197                     	;# 
  1801  0199                     	;# 
  1802  0199                     	;# 
  1803  0199                     	;# 
  1804  019A                     	;# 
  1805  019A                     	;# 
  1806  019A                     	;# 
  1807  019B                     	;# 
  1808  019B                     	;# 
  1809  019B                     	;# 
  1810  019B                     	;# 
  1811  019B                     	;# 
  1812  019C                     	;# 
  1813  019C                     	;# 
  1814  019C                     	;# 
  1815  019D                     	;# 
  1816  019D                     	;# 
  1817  019D                     	;# 
  1818  019E                     	;# 
  1819  019E                     	;# 
  1820  019E                     	;# 
  1821  019F                     	;# 
  1822  019F                     	;# 
  1823  019F                     	;# 
  1824  019F                     	;# 
  1825  019F                     	;# 
  1826  020C                     	;# 
  1827  020D                     	;# 
  1828  020E                     	;# 
  1829  0211                     	;# 
  1830  0211                     	;# 
  1831  0212                     	;# 
  1832  0212                     	;# 
  1833  0213                     	;# 
  1834  0213                     	;# 
  1835  0214                     	;# 
  1836  0214                     	;# 
  1837  0215                     	;# 
  1838  0215                     	;# 
  1839  0215                     	;# 
  1840  0215                     	;# 
  1841  0216                     	;# 
  1842  0216                     	;# 
  1843  0217                     	;# 
  1844  0217                     	;# 
  1845  0219                     	;# 
  1846  021A                     	;# 
  1847  021B                     	;# 
  1848  021C                     	;# 
  1849  021D                     	;# 
  1850  021D                     	;# 
  1851  021E                     	;# 
  1852  021F                     	;# 
  1853  028C                     	;# 
  1854  028D                     	;# 
  1855  028E                     	;# 
  1856  0291                     	;# 
  1857  0291                     	;# 
  1858  0292                     	;# 
  1859  0293                     	;# 
  1860  0294                     	;# 
  1861  0295                     	;# 
  1862  0295                     	;# 
  1863  0296                     	;# 
  1864  0297                     	;# 
  1865  0298                     	;# 
  1866  029F                     	;# 
  1867  030C                     	;# 
  1868  030D                     	;# 
  1869  030E                     	;# 
  1870  0311                     	;# 
  1871  0311                     	;# 
  1872  0312                     	;# 
  1873  0313                     	;# 
  1874  0314                     	;# 
  1875  0315                     	;# 
  1876  0315                     	;# 
  1877  0316                     	;# 
  1878  0317                     	;# 
  1879  0318                     	;# 
  1880  038C                     	;# 
  1881  038D                     	;# 
  1882  038E                     	;# 
  1883  0391                     	;# 
  1884  0392                     	;# 
  1885  0393                     	;# 
  1886  0394                     	;# 
  1887  0395                     	;# 
  1888  0396                     	;# 
  1889  0397                     	;# 
  1890  0398                     	;# 
  1891  0399                     	;# 
  1892  039A                     	;# 
  1893  039C                     	;# 
  1894  039D                     	;# 
  1895  039E                     	;# 
  1896  039F                     	;# 
  1897  040C                     	;# 
  1898  040D                     	;# 
  1899  040E                     	;# 
  1900  0411                     	;# 
  1901  0411                     	;# 
  1902  0412                     	;# 
  1903  0413                     	;# 
  1904  0414                     	;# 
  1905  0415                     	;# 
  1906  0416                     	;# 
  1907  0417                     	;# 
  1908  0418                     	;# 
  1909  0418                     	;# 
  1910  0419                     	;# 
  1911  041A                     	;# 
  1912  041B                     	;# 
  1913  041C                     	;# 
  1914  041D                     	;# 
  1915  041E                     	;# 
  1916  041F                     	;# 
  1917  048C                     	;# 
  1918  048D                     	;# 
  1919  048E                     	;# 
  1920  0498                     	;# 
  1921  0498                     	;# 
  1922  0499                     	;# 
  1923  049A                     	;# 
  1924  049B                     	;# 
  1925  049B                     	;# 
  1926  049C                     	;# 
  1927  049D                     	;# 
  1928  049E                     	;# 
  1929  049F                     	;# 
  1930  0617                     	;# 
  1931  0618                     	;# 
  1932  0619                     	;# 
  1933  0619                     	;# 
  1934  061A                     	;# 
  1935  061B                     	;# 
  1936  061C                     	;# 
  1937  061C                     	;# 
  1938  061F                     	;# 
  1939  0691                     	;# 
  1940  0692                     	;# 
  1941  0693                     	;# 
  1942  0694                     	;# 
  1943  0695                     	;# 
  1944  0696                     	;# 
  1945  0697                     	;# 
  1946  0698                     	;# 
  1947  0699                     	;# 
  1948  0711                     	;# 
  1949  0712                     	;# 
  1950  0713                     	;# 
  1951  0714                     	;# 
  1952  0715                     	;# 
  1953  0716                     	;# 
  1954  0717                     	;# 
  1955  0718                     	;# 
  1956  0719                     	;# 
  1957  0891                     	;# 
  1958  0891                     	;# 
  1959  0892                     	;# 
  1960  0893                     	;# 
  1961  0893                     	;# 
  1962  0894                     	;# 
  1963  0895                     	;# 
  1964  0896                     	;# 
  1965  089B                     	;# 
  1966  0911                     	;# 
  1967  0912                     	;# 
  1968  0913                     	;# 
  1969  0914                     	;# 
  1970  0915                     	;# 
  1971  0916                     	;# 
  1972  0918                     	;# 
  1973  0919                     	;# 
  1974  091A                     	;# 
  1975  091B                     	;# 
  1976  091C                     	;# 
  1977  091D                     	;# 
  1978  091E                     	;# 
  1979  091F                     	;# 
  1980  0E0F                     	;# 
  1981  0E10                     	;# 
  1982  0E11                     	;# 
  1983  0E12                     	;# 
  1984  0E13                     	;# 
  1985  0E14                     	;# 
  1986  0E15                     	;# 
  1987  0E16                     	;# 
  1988  0E17                     	;# 
  1989  0E18                     	;# 
  1990  0E19                     	;# 
  1991  0E1A                     	;# 
  1992  0E1B                     	;# 
  1993  0E1C                     	;# 
  1994  0E1D                     	;# 
  1995  0E1E                     	;# 
  1996  0E1F                     	;# 
  1997  0E20                     	;# 
  1998  0E21                     	;# 
  1999  0E22                     	;# 
  2000  0E24                     	;# 
  2001  0E25                     	;# 
  2002  0E28                     	;# 
  2003  0E29                     	;# 
  2004  0E2A                     	;# 
  2005  0E2B                     	;# 
  2006  0E2C                     	;# 
  2007  0E2D                     	;# 
  2008  0E2E                     	;# 
  2009  0E2F                     	;# 
  2010  0E90                     	;# 
  2011  0E91                     	;# 
  2012  0E92                     	;# 
  2013  0E94                     	;# 
  2014  0E95                     	;# 
  2015  0E9C                     	;# 
  2016  0E9D                     	;# 
  2017  0E9E                     	;# 
  2018  0E9F                     	;# 
  2019  0EA0                     	;# 
  2020  0EA1                     	;# 
  2021  0EA2                     	;# 
  2022  0EA3                     	;# 
  2023  0EA4                     	;# 
  2024  0EA5                     	;# 
  2025  0EA6                     	;# 
  2026  0EA7                     	;# 
  2027  0F0F                     	;# 
  2028  0F10                     	;# 
  2029  0F11                     	;# 
  2030  0F12                     	;# 
  2031  0F13                     	;# 
  2032  0F14                     	;# 
  2033  0F15                     	;# 
  2034  0F16                     	;# 
  2035  0F17                     	;# 
  2036  0F18                     	;# 
  2037  0F19                     	;# 
  2038  0F1A                     	;# 
  2039  0F1B                     	;# 
  2040  0F1C                     	;# 
  2041  0F1D                     	;# 
  2042  0F1E                     	;# 
  2043  0F1F                     	;# 
  2044  0F20                     	;# 
  2045  0F21                     	;# 
  2046  0F22                     	;# 
  2047  0F23                     	;# 
  2048  0F24                     	;# 
  2049  0F25                     	;# 
  2050  0F26                     	;# 
  2051  0F27                     	;# 
  2052  0F28                     	;# 
  2053  0F29                     	;# 
  2054  0F2A                     	;# 
  2055  0F2B                     	;# 
  2056  0F2C                     	;# 
  2057  0F2D                     	;# 
  2058  0F2E                     	;# 
  2059  0F2F                     	;# 
  2060  0F30                     	;# 
  2061  0F31                     	;# 
  2062  0F32                     	;# 
  2063  0F33                     	;# 
  2064  0F34                     	;# 
  2065  0F35                     	;# 
  2066  0F36                     	;# 
  2067  0F37                     	;# 
  2068  0FE4                     	;# 
  2069  0FE5                     	;# 
  2070  0FE6                     	;# 
  2071  0FE7                     	;# 
  2072  0FE8                     	;# 
  2073  0FE9                     	;# 
  2074  0FEA                     	;# 
  2075  0FEB                     	;# 
  2076  0FED                     	;# 
  2077  0FEE                     	;# 
  2078  0FEF                     	;# 
  2079                           
  2080                           	psect	stringtext
  2081  0014                     __pstringtext:	
  2082  0014                     _dpowers:	
  2083  0014  3401               	retlw	1
  2084  0015  3400               	retlw	0
  2085  0016  340A               	retlw	10
  2086  0017  3400               	retlw	0
  2087  0018  3464               	retlw	100
  2088  0019  3400               	retlw	0
  2089  001A  34E8               	retlw	232
  2090  001B  3403               	retlw	3
  2091  001C  3410               	retlw	16
  2092  001D  3427               	retlw	39
  2093  001E                     __end_of_dpowers:	
  2094  000C                     _PORTA	set	12
  2095  000D                     _PORTB	set	13
  2096  000E                     _PORTC	set	14
  2097  006E                     _RB6	set	110
  2098  008C                     _TXIF	set	140
  2099  019A                     _TXREG	set	410
  2100  0CEF                     _SPEN	set	3311
  2101  0CF4                     _SYNC	set	3316
  2102  0CF5                     _TXEN	set	3317
  2103  001E                     STR_21:	
  2104  001E  3441               	retlw	65	;'A'
  2105  001F  3473               	retlw	115	;'s'
  2106  0020  3473               	retlw	115	;'s'
  2107  0021  3465               	retlw	101	;'e'
  2108  0022  3472               	retlw	114	;'r'
  2109  0023  3474               	retlw	116	;'t'
  2110  0024  3469               	retlw	105	;'i'
  2111  0025  346F               	retlw	111	;'o'
  2112  0026  346E               	retlw	110	;'n'
  2113  0027  3420               	retlw	32	;' '
  2114  0028  3466               	retlw	102	;'f'
  2115  0029  3461               	retlw	97	;'a'
  2116  002A  3469               	retlw	105	;'i'
  2117  002B  346C               	retlw	108	;'l'
  2118  002C  3465               	retlw	101	;'e'
  2119  002D  3464               	retlw	100	;'d'
  2120  002E  343A               	retlw	58	;':'
  2121  002F  3420               	retlw	32	;' '
  2122  0030  3425               	retlw	37	;'%'
  2123  0031  3473               	retlw	115	;'s'
  2124  0032  3420               	retlw	32	;' '
  2125  0033  346C               	retlw	108	;'l'
  2126  0034  3469               	retlw	105	;'i'
  2127  0035  346E               	retlw	110	;'n'
  2128  0036  3465               	retlw	101	;'e'
  2129  0037  3420               	retlw	32	;' '
  2130  0038  3425               	retlw	37	;'%'
  2131  0039  3464               	retlw	100	;'d'
  2132  003A  343A               	retlw	58	;':'
  2133  003B  3420               	retlw	32	;' '
  2134  003C  3422               	retlw	34	;'"'
  2135  003D  3425               	retlw	37	;'%'
  2136  003E  3473               	retlw	115	;'s'
  2137  003F  3422               	retlw	34	;'"'
  2138  0040  340A               	retlw	10
  2139  0041  3400               	retlw	0
  2140  0042                     STR_18:	
  2141  0042  3474               	retlw	116	;'t'
  2142  0043  3465               	retlw	101	;'e'
  2143  0044  3473               	retlw	115	;'s'
  2144  0045  3474               	retlw	116	;'t'
  2145  0046  3420               	retlw	32	;' '
  2146  0047  346F               	retlw	111	;'o'
  2147  0048  3466               	retlw	102	;'f'
  2148  0049  3420               	retlw	32	;' '
  2149  004A  3466               	retlw	102	;'f'
  2150  004B  346C               	retlw	108	;'l'
  2151  004C  3461               	retlw	97	;'a'
  2152  004D  3467               	retlw	103	;'g'
  2153  004E  345F               	retlw	95	;'_'
  2154  004F  3461               	retlw	97	;'a'
  2155  0050  3472               	retlw	114	;'r'
  2156  0051  3472               	retlw	114	;'r'
  2157  0052  3461               	retlw	97	;'a'
  2158  0053  3479               	retlw	121	;'y'
  2159  0054  345F               	retlw	95	;'_'
  2160  0055  3467               	retlw	103	;'g'
  2161  0056  3465               	retlw	101	;'e'
  2162  0057  3474               	retlw	116	;'t'
  2163  0058  345F               	retlw	95	;'_'
  2164  0059  3466               	retlw	102	;'f'
  2165  005A  346C               	retlw	108	;'l'
  2166  005B  3461               	retlw	97	;'a'
  2167  005C  3467               	retlw	103	;'g'
  2168  005D  345F               	retlw	95	;'_'
  2169  005E  3473               	retlw	115	;'s'
  2170  005F  3474               	retlw	116	;'t'
  2171  0060  3461               	retlw	97	;'a'
  2172  0061  3474               	retlw	116	;'t'
  2173  0062  3465               	retlw	101	;'e'
  2174  0063  340A               	retlw	10
  2175  0064  3400               	retlw	0
  2176  0065                     STR_14:	
  2177  0065  3474               	retlw	116	;'t'
  2178  0066  3465               	retlw	101	;'e'
  2179  0067  3473               	retlw	115	;'s'
  2180  0068  3474               	retlw	116	;'t'
  2181  0069  3420               	retlw	32	;' '
  2182  006A  346F               	retlw	111	;'o'
  2183  006B  3466               	retlw	102	;'f'
  2184  006C  3420               	retlw	32	;' '
  2185  006D  3466               	retlw	102	;'f'
  2186  006E  346C               	retlw	108	;'l'
  2187  006F  3461               	retlw	97	;'a'
  2188  0070  3467               	retlw	103	;'g'
  2189  0071  345F               	retlw	95	;'_'
  2190  0072  3461               	retlw	97	;'a'
  2191  0073  3472               	retlw	114	;'r'
  2192  0074  3472               	retlw	114	;'r'
  2193  0075  3461               	retlw	97	;'a'
  2194  0076  3479               	retlw	121	;'y'
  2195  0077  345F               	retlw	95	;'_'
  2196  0078  3473               	retlw	115	;'s'
  2197  0079  3465               	retlw	101	;'e'
  2198  007A  3474               	retlw	116	;'t'
  2199  007B  345F               	retlw	95	;'_'
  2200  007C  346E               	retlw	110	;'n'
  2201  007D  3475               	retlw	117	;'u'
  2202  007E  346D               	retlw	109	;'m'
  2203  007F  3462               	retlw	98	;'b'
  2204  0080  3465               	retlw	101	;'e'
  2205  0081  3472               	retlw	114	;'r'
  2206  0082  3473               	retlw	115	;'s'
  2207  0083  340A               	retlw	10
  2208  0084  3400               	retlw	0
  2209  0085                     STR_10:	
  2210  0085  3474               	retlw	116	;'t'
  2211  0086  3465               	retlw	101	;'e'
  2212  0087  3473               	retlw	115	;'s'
  2213  0088  3474               	retlw	116	;'t'
  2214  0089  3420               	retlw	32	;' '
  2215  008A  346F               	retlw	111	;'o'
  2216  008B  3466               	retlw	102	;'f'
  2217  008C  3420               	retlw	32	;' '
  2218  008D  3466               	retlw	102	;'f'
  2219  008E  346C               	retlw	108	;'l'
  2220  008F  3461               	retlw	97	;'a'
  2221  0090  3467               	retlw	103	;'g'
  2222  0091  345F               	retlw	95	;'_'
  2223  0092  3461               	retlw	97	;'a'
  2224  0093  3472               	retlw	114	;'r'
  2225  0094  3472               	retlw	114	;'r'
  2226  0095  3461               	retlw	97	;'a'
  2227  0096  3479               	retlw	121	;'y'
  2228  0097  345F               	retlw	95	;'_'
  2229  0098  3469               	retlw	105	;'i'
  2230  0099  346E               	retlw	110	;'n'
  2231  009A  3469               	retlw	105	;'i'
  2232  009B  3474               	retlw	116	;'t'
  2233  009C  3469               	retlw	105	;'i'
  2234  009D  3461               	retlw	97	;'a'
  2235  009E  346C               	retlw	108	;'l'
  2236  009F  3469               	retlw	105	;'i'
  2237  00A0  347A               	retlw	122	;'z'
  2238  00A1  3465               	retlw	101	;'e'
  2239  00A2  340A               	retlw	10
  2240  00A3  3400               	retlw	0
  2241  00A4                     STR_19:	
  2242  00A4  3466               	retlw	102	;'f'
  2243  00A5  346C               	retlw	108	;'l'
  2244  00A6  3461               	retlw	97	;'a'
  2245  00A7  3467               	retlw	103	;'g'
  2246  00A8  345F               	retlw	95	;'_'
  2247  00A9  3461               	retlw	97	;'a'
  2248  00AA  3472               	retlw	114	;'r'
  2249  00AB  3472               	retlw	114	;'r'
  2250  00AC  3461               	retlw	97	;'a'
  2251  00AD  3479               	retlw	121	;'y'
  2252  00AE  345F               	retlw	95	;'_'
  2253  00AF  3467               	retlw	103	;'g'
  2254  00B0  3465               	retlw	101	;'e'
  2255  00B1  3474               	retlw	116	;'t'
  2256  00B2  345F               	retlw	95	;'_'
  2257  00B3  3466               	retlw	102	;'f'
  2258  00B4  346C               	retlw	108	;'l'
  2259  00B5  3461               	retlw	97	;'a'
  2260  00B6  3467               	retlw	103	;'g'
  2261  00B7  345F               	retlw	95	;'_'
  2262  00B8  3473               	retlw	115	;'s'
  2263  00B9  3474               	retlw	116	;'t'
  2264  00BA  3461               	retlw	97	;'a'
  2265  00BB  3474               	retlw	116	;'t'
  2266  00BC  3465               	retlw	101	;'e'
  2267  00BD  3420               	retlw	32	;' '
  2268  00BE  344B               	retlw	75	;'K'
  2269  00BF  344F               	retlw	79	;'O'
  2270  00C0  340A               	retlw	10
  2271  00C1  3400               	retlw	0
  2272  00C2                     STR_16:	
  2273  00C2  3474               	retlw	116	;'t'
  2274  00C3  3465               	retlw	101	;'e'
  2275  00C4  3473               	retlw	115	;'s'
  2276  00C5  3474               	retlw	116	;'t'
  2277  00C6  3420               	retlw	32	;' '
  2278  00C7  346F               	retlw	111	;'o'
  2279  00C8  3466               	retlw	102	;'f'
  2280  00C9  3420               	retlw	32	;' '
  2281  00CA  3466               	retlw	102	;'f'
  2282  00CB  346C               	retlw	108	;'l'
  2283  00CC  3461               	retlw	97	;'a'
  2284  00CD  3467               	retlw	103	;'g'
  2285  00CE  345F               	retlw	95	;'_'
  2286  00CF  3461               	retlw	97	;'a'
  2287  00D0  3472               	retlw	114	;'r'
  2288  00D1  3472               	retlw	114	;'r'
  2289  00D2  3461               	retlw	97	;'a'
  2290  00D3  3479               	retlw	121	;'y'
  2291  00D4  345F               	retlw	95	;'_'
  2292  00D5  3473               	retlw	115	;'s'
  2293  00D6  3465               	retlw	101	;'e'
  2294  00D7  3474               	retlw	116	;'t'
  2295  00D8  345F               	retlw	95	;'_'
  2296  00D9  3466               	retlw	102	;'f'
  2297  00DA  346C               	retlw	108	;'l'
  2298  00DB  3461               	retlw	97	;'a'
  2299  00DC  3467               	retlw	103	;'g'
  2300  00DD  340A               	retlw	10
  2301  00DE  3400               	retlw	0
  2302  00DF                     STR_15:	
  2303  00DF  3466               	retlw	102	;'f'
  2304  00E0  346C               	retlw	108	;'l'
  2305  00E1  3461               	retlw	97	;'a'
  2306  00E2  3467               	retlw	103	;'g'
  2307  00E3  345F               	retlw	95	;'_'
  2308  00E4  3461               	retlw	97	;'a'
  2309  00E5  3472               	retlw	114	;'r'
  2310  00E6  3472               	retlw	114	;'r'
  2311  00E7  3461               	retlw	97	;'a'
  2312  00E8  3479               	retlw	121	;'y'
  2313  00E9  345F               	retlw	95	;'_'
  2314  00EA  3473               	retlw	115	;'s'
  2315  00EB  3465               	retlw	101	;'e'
  2316  00EC  3474               	retlw	116	;'t'
  2317  00ED  345F               	retlw	95	;'_'
  2318  00EE  346E               	retlw	110	;'n'
  2319  00EF  3475               	retlw	117	;'u'
  2320  00F0  346D               	retlw	109	;'m'
  2321  00F1  3462               	retlw	98	;'b'
  2322  00F2  3465               	retlw	101	;'e'
  2323  00F3  3472               	retlw	114	;'r'
  2324  00F4  3473               	retlw	115	;'s'
  2325  00F5  3420               	retlw	32	;' '
  2326  00F6  344B               	retlw	75	;'K'
  2327  00F7  344F               	retlw	79	;'O'
  2328  00F8  340A               	retlw	10
  2329  00F9  3400               	retlw	0
  2330  00FA                     STR_11:	
  2331  00FA  3466               	retlw	102	;'f'
  2332  00FB  346C               	retlw	108	;'l'
  2333  00FC  3461               	retlw	97	;'a'
  2334  00FD  3467               	retlw	103	;'g'
  2335  00FE  345F               	retlw	95	;'_'
  2336  00FF  3461               	retlw	97	;'a'
  2337  0100  3472               	retlw	114	;'r'
  2338  0101  3472               	retlw	114	;'r'
  2339  0102  3461               	retlw	97	;'a'
  2340  0103  3479               	retlw	121	;'y'
  2341  0104  345F               	retlw	95	;'_'
  2342  0105  3469               	retlw	105	;'i'
  2343  0106  346E               	retlw	110	;'n'
  2344  0107  3469               	retlw	105	;'i'
  2345  0108  3474               	retlw	116	;'t'
  2346  0109  3469               	retlw	105	;'i'
  2347  010A  3461               	retlw	97	;'a'
  2348  010B  346C               	retlw	108	;'l'
  2349  010C  3469               	retlw	105	;'i'
  2350  010D  347A               	retlw	122	;'z'
  2351  010E  3465               	retlw	101	;'e'
  2352  010F  3420               	retlw	32	;' '
  2353  0110  344B               	retlw	75	;'K'
  2354  0111  344F               	retlw	79	;'O'
  2355  0112  340A               	retlw	10
  2356  0113  3400               	retlw	0
  2357  0114                     STR_12:	
  2358  0114  3474               	retlw	116	;'t'
  2359  0115  3465               	retlw	101	;'e'
  2360  0116  3473               	retlw	115	;'s'
  2361  0117  3474               	retlw	116	;'t'
  2362  0118  3420               	retlw	32	;' '
  2363  0119  346F               	retlw	111	;'o'
  2364  011A  3466               	retlw	102	;'f'
  2365  011B  3420               	retlw	32	;' '
  2366  011C  3466               	retlw	102	;'f'
  2367  011D  346C               	retlw	108	;'l'
  2368  011E  3461               	retlw	97	;'a'
  2369  011F  3467               	retlw	103	;'g'
  2370  0120  345F               	retlw	95	;'_'
  2371  0121  3461               	retlw	97	;'a'
  2372  0122  3472               	retlw	114	;'r'
  2373  0123  3472               	retlw	114	;'r'
  2374  0124  3461               	retlw	97	;'a'
  2375  0125  3479               	retlw	121	;'y'
  2376  0126  345F               	retlw	95	;'_'
  2377  0127  3476               	retlw	118	;'v'
  2378  0128  3461               	retlw	97	;'a'
  2379  0129  346C               	retlw	108	;'l'
  2380  012A  3469               	retlw	105	;'i'
  2381  012B  3464               	retlw	100	;'d'
  2382  012C  340A               	retlw	10
  2383  012D  3400               	retlw	0
  2384  012E                     STR_5:	
  2385  012E  3474               	retlw	116	;'t'
  2386  012F  3465               	retlw	101	;'e'
  2387  0130  3473               	retlw	115	;'s'
  2388  0131  3474               	retlw	116	;'t'
  2389  0132  3420               	retlw	32	;' '
  2390  0133  346F               	retlw	111	;'o'
  2391  0134  3466               	retlw	102	;'f'
  2392  0135  3420               	retlw	32	;' '
  2393  0136  3474               	retlw	116	;'t'
  2394  0137  3469               	retlw	105	;'i'
  2395  0138  346D               	retlw	109	;'m'
  2396  0139  3465               	retlw	101	;'e'
  2397  013A  345F               	retlw	95	;'_'
  2398  013B  3474               	retlw	116	;'t'
  2399  013C  3479               	retlw	121	;'y'
  2400  013D  3470               	retlw	112	;'p'
  2401  013E  3465               	retlw	101	;'e'
  2402  013F  345F               	retlw	95	;'_'
  2403  0140  3476               	retlw	118	;'v'
  2404  0141  3461               	retlw	97	;'a'
  2405  0142  346C               	retlw	108	;'l'
  2406  0143  3469               	retlw	105	;'i'
  2407  0144  3464               	retlw	100	;'d'
  2408  0145  340A               	retlw	10
  2409  0146  3400               	retlw	0
  2410  0147                     STR_17:	
  2411  0147  3466               	retlw	102	;'f'
  2412  0148  346C               	retlw	108	;'l'
  2413  0149  3461               	retlw	97	;'a'
  2414  014A  3467               	retlw	103	;'g'
  2415  014B  345F               	retlw	95	;'_'
  2416  014C  3461               	retlw	97	;'a'
  2417  014D  3472               	retlw	114	;'r'
  2418  014E  3472               	retlw	114	;'r'
  2419  014F  3461               	retlw	97	;'a'
  2420  0150  3479               	retlw	121	;'y'
  2421  0151  345F               	retlw	95	;'_'
  2422  0152  3473               	retlw	115	;'s'
  2423  0153  3465               	retlw	101	;'e'
  2424  0154  3474               	retlw	116	;'t'
  2425  0155  345F               	retlw	95	;'_'
  2426  0156  3466               	retlw	102	;'f'
  2427  0157  346C               	retlw	108	;'l'
  2428  0158  3461               	retlw	97	;'a'
  2429  0159  3467               	retlw	103	;'g'
  2430  015A  3420               	retlw	32	;' '
  2431  015B  344B               	retlw	75	;'K'
  2432  015C  344F               	retlw	79	;'O'
  2433  015D  340A               	retlw	10
  2434  015E  3400               	retlw	0
  2435  015F                     STR_13:	
  2436  015F  3466               	retlw	102	;'f'
  2437  0160  346C               	retlw	108	;'l'
  2438  0161  3461               	retlw	97	;'a'
  2439  0162  3467               	retlw	103	;'g'
  2440  0163  345F               	retlw	95	;'_'
  2441  0164  3461               	retlw	97	;'a'
  2442  0165  3472               	retlw	114	;'r'
  2443  0166  3472               	retlw	114	;'r'
  2444  0167  3461               	retlw	97	;'a'
  2445  0168  3479               	retlw	121	;'y'
  2446  0169  345F               	retlw	95	;'_'
  2447  016A  3476               	retlw	118	;'v'
  2448  016B  3461               	retlw	97	;'a'
  2449  016C  346C               	retlw	108	;'l'
  2450  016D  3469               	retlw	105	;'i'
  2451  016E  3464               	retlw	100	;'d'
  2452  016F  3420               	retlw	32	;' '
  2453  0170  344B               	retlw	75	;'K'
  2454  0171  344F               	retlw	79	;'O'
  2455  0172  340A               	retlw	10
  2456  0173  3400               	retlw	0
  2457  0174                     STR_3:	
  2458  0174  3473               	retlw	115	;'s'
  2459  0175  346F               	retlw	111	;'o'
  2460  0176  3466               	retlw	102	;'f'
  2461  0177  3474               	retlw	116	;'t'
  2462  0178  3477               	retlw	119	;'w'
  2463  0179  3461               	retlw	97	;'a'
  2464  017A  3472               	retlw	114	;'r'
  2465  017B  3465               	retlw	101	;'e'
  2466  017C  345F               	retlw	95	;'_'
  2467  017D  3474               	retlw	116	;'t'
  2468  017E  3469               	retlw	105	;'i'
  2469  017F  346D               	retlw	109	;'m'
  2470  0180  3465               	retlw	101	;'e'
  2471  0181  3472               	retlw	114	;'r'
  2472  0182  342E               	retlw	46	;'.'
  2473  0183  3463               	retlw	99	;'c'
  2474  0184  3400               	retlw	0
  2475  0185                     STR_2:	
  2476  0185  3466               	retlw	102	;'f'
  2477  0186  346C               	retlw	108	;'l'
  2478  0187  3461               	retlw	97	;'a'
  2479  0188  3467               	retlw	103	;'g'
  2480  0189  345F               	retlw	95	;'_'
  2481  018A  3461               	retlw	97	;'a'
  2482  018B  3472               	retlw	114	;'r'
  2483  018C  3472               	retlw	114	;'r'
  2484  018D  3461               	retlw	97	;'a'
  2485  018E  3479               	retlw	121	;'y'
  2486  018F  3421               	retlw	33	;'!'
  2487  0190  343D               	retlw	61	;'='
  2488  0191  3428               	retlw	40	;'('
  2489  0192  3430               	retlw	48	;'0'
  2490  0193  3429               	retlw	41	;')'
  2491  0194  3400               	retlw	0
  2492  0195                     STR_1:	
  2493  0195  3466               	retlw	102	;'f'
  2494  0196  346C               	retlw	108	;'l'
  2495  0197  3461               	retlw	97	;'a'
  2496  0198  3467               	retlw	103	;'g'
  2497  0199  345F               	retlw	95	;'_'
  2498  019A  3461               	retlw	97	;'a'
  2499  019B  3472               	retlw	114	;'r'
  2500  019C  3472               	retlw	114	;'r'
  2501  019D  3461               	retlw	97	;'a'
  2502  019E  3479               	retlw	121	;'y'
  2503  019F  342E               	retlw	46	;'.'
  2504  01A0  3463               	retlw	99	;'c'
  2505  01A1  3400               	retlw	0
  2506  01A2                     STR_6:	
  2507  01A2  3473               	retlw	115	;'s'
  2508  01A3  3465               	retlw	101	;'e'
  2509  01A4  3463               	retlw	99	;'c'
  2510  01A5  346F               	retlw	111	;'o'
  2511  01A6  346E               	retlw	110	;'n'
  2512  01A7  3464               	retlw	100	;'d'
  2513  01A8  3420               	retlw	32	;' '
  2514  01A9  344B               	retlw	75	;'K'
  2515  01AA  344F               	retlw	79	;'O'
  2516  01AB  340A               	retlw	10
  2517  01AC  3400               	retlw	0
  2518  01AD                     STR_7:	
  2519  01AD  346D               	retlw	109	;'m'
  2520  01AE  3469               	retlw	105	;'i'
  2521  01AF  346E               	retlw	110	;'n'
  2522  01B0  3475               	retlw	117	;'u'
  2523  01B1  3474               	retlw	116	;'t'
  2524  01B2  3465               	retlw	101	;'e'
  2525  01B3  3420               	retlw	32	;' '
  2526  01B4  344B               	retlw	75	;'K'
  2527  01B5  344F               	retlw	79	;'O'
  2528  01B6  340A               	retlw	10
  2529  01B7  3400               	retlw	0
  2530  01B8                     STR_4:	
  2531  01B8  3474               	retlw	116	;'t'
  2532  01B9  3469               	retlw	105	;'i'
  2533  01BA  346D               	retlw	109	;'m'
  2534  01BB  3465               	retlw	101	;'e'
  2535  01BC  3472               	retlw	114	;'r'
  2536  01BD  3421               	retlw	33	;'!'
  2537  01BE  343D               	retlw	61	;'='
  2538  01BF  3428               	retlw	40	;'('
  2539  01C0  3430               	retlw	48	;'0'
  2540  01C1  3429               	retlw	41	;')'
  2541  01C2  3400               	retlw	0
  2542  01C3                     STR_8:	
  2543  01C3  3468               	retlw	104	;'h'
  2544  01C4  346F               	retlw	111	;'o'
  2545  01C5  3475               	retlw	117	;'u'
  2546  01C6  3472               	retlw	114	;'r'
  2547  01C7  3420               	retlw	32	;' '
  2548  01C8  344B               	retlw	75	;'K'
  2549  01C9  344F               	retlw	79	;'O'
  2550  01CA  340A               	retlw	10
  2551  01CB  3400               	retlw	0
  2552  01CC                     STR_20:	
  2553  01CC  3428               	retlw	40	;'('
  2554  01CD  346E               	retlw	110	;'n'
  2555  01CE  3475               	retlw	117	;'u'
  2556  01CF  346C               	retlw	108	;'l'
  2557  01D0  346C               	retlw	108	;'l'
  2558  01D1  3429               	retlw	41	;')'
  2559  01D2  3400               	retlw	0
  2560  01D3                     STR_9:	
  2561  01D3  3425               	retlw	37	;'%'
  2562  01D4  3464               	retlw	100	;'d'
  2563  01D5  3420               	retlw	32	;' '
  2564  01D6  344B               	retlw	75	;'K'
  2565  01D7  344F               	retlw	79	;'O'
  2566  01D8  340A               	retlw	10
  2567  01D9  3400               	retlw	0
  2568                           
  2569                           ; #config settings
  2570  0000                     
  2571                           	psect	cinit
  2572  000F                     start_initialization:	
  2573  000F                     __initialization:	
  2574                           
  2575                           ; Clear objects allocated to COMMON
  2576  000F  01FC               	clrf	__pbssCOMMON& (0+127)
  2577  0010                     end_of_initialization:	
  2578                           ;End of C runtime variable initialization code
  2579                           
  2580  0010                     __end_of__initialization:	
  2581  0010  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2582  0011  0020               	movlb	0
  2583  0012  3185  2D83         	ljmp	_main	;jump to C main() function
  2584                           
  2585                           	psect	bssCOMMON
  2586  007C                     __pbssCOMMON:	
  2587  007C                     _interrupt_variable:	
  2588  007C                     	ds	1
  2589                           
  2590                           	psect	cstackCOMMON
  2591  0070                     __pcstackCOMMON:	
  2592  0070                     ?_test_function:	
  2593  0070                     ?_byte_union_get_byte:	
  2594                           ; 1 bytes @ 0x0
  2595                           
  2596  0070                     ?_byte_union_initialize:	
  2597                           ; 1 bytes @ 0x0
  2598                           
  2599  0070                     ?_flag_array_initialise:	
  2600                           ; 1 bytes @ 0x0
  2601                           
  2602  0070                     ?_input_interrupt_function:	
  2603                           ; 1 bytes @ 0x0
  2604                           
  2605  0070                     ??_input_interrupt_function:	
  2606                           ; 1 bytes @ 0x0
  2607                           
  2608  0070                     ?_test_of_time_type:	
  2609                           ; 1 bytes @ 0x0
  2610                           
  2611  0070                     ?_test_of_flag_array:	
  2612                           ; 1 bytes @ 0x0
  2613                           
  2614  0070                     ?_putch:	
  2615                           ; 1 bytes @ 0x0
  2616                           
  2617  0070                     ?_main:	
  2618                           ; 1 bytes @ 0x0
  2619                           
  2620                           
  2621                           ; 2 bytes @ 0x0
  2622  0070                     	ds	1
  2623  0071                     ?_byte_union_get_bit_value:	
  2624  0071                     ??_byte_union_get_byte:	
  2625                           ; 1 bytes @ 0x1
  2626                           
  2627  0071                     ?_byte_union_set_bit:	
  2628                           ; 1 bytes @ 0x1
  2629                           
  2630  0071                     ?_flag_array_set_numbers:	
  2631                           ; 1 bytes @ 0x1
  2632                           
  2633  0071                     ??_putch:	
  2634                           ; 1 bytes @ 0x1
  2635                           
  2636  0071                     ?_time_type_valid:	
  2637                           ; 1 bytes @ 0x1
  2638                           
  2639  0071                     ?___lwdiv:	
  2640                           ; 2 bytes @ 0x1
  2641                           
  2642  0071                     byte_union_get_bit_value@bit_nbr:	
  2643                           ; 2 bytes @ 0x1
  2644                           
  2645  0071                     byte_union_set_bit@state:	
  2646                           ; 1 bytes @ 0x1
  2647                           
  2648  0071                     flag_array_set_numbers@nbr:	
  2649                           ; 1 bytes @ 0x1
  2650                           
  2651  0071                     putch@data:	
  2652                           ; 1 bytes @ 0x1
  2653                           
  2654  0071                     ___lwdiv@divisor:	
  2655                           ; 1 bytes @ 0x1
  2656                           
  2657                           
  2658                           ; 2 bytes @ 0x1
  2659  0071                     	ds	1
  2660  0072                     ??_byte_union_get_bit_value:	
  2661  0072                     ??_flag_array_set_numbers:	
  2662                           ; 1 bytes @ 0x2
  2663                           
  2664  0072                     byte_union_get_bit_value@val:	
  2665                           ; 1 bytes @ 0x2
  2666                           
  2667  0072                     byte_union_get_byte@ptb:	
  2668                           ; 1 bytes @ 0x2
  2669                           
  2670  0072                     byte_union_set_bit@bit_nbr:	
  2671                           ; 1 bytes @ 0x2
  2672                           
  2673                           
  2674                           ; 1 bytes @ 0x2
  2675  0072                     	ds	1
  2676  0073                     ??_byte_union_set_bit:	
  2677  0073                     byte_union_get_bit_value@byte_u:	
  2678                           ; 1 bytes @ 0x3
  2679                           
  2680  0073                     byte_union_get_byte@byte_u:	
  2681                           ; 1 bytes @ 0x3
  2682                           
  2683  0073                     byte_union_set_bit@byte_u:	
  2684                           ; 1 bytes @ 0x3
  2685                           
  2686  0073                     flag_array_set_numbers@flag_array:	
  2687                           ; 1 bytes @ 0x3
  2688                           
  2689  0073                     ___lwdiv@dividend:	
  2690                           ; 1 bytes @ 0x3
  2691                           
  2692                           
  2693                           ; 2 bytes @ 0x3
  2694  0073                     	ds	1
  2695  0074                     ??_time_type_valid:	
  2696  0074                     ?_byte_union_set_byte:	
  2697                           ; 1 bytes @ 0x4
  2698                           
  2699  0074                     ?_flag_array_set_flag:	
  2700                           ; 1 bytes @ 0x4
  2701                           
  2702  0074                     ?_flag_array_get_flag_state:	
  2703                           ; 1 bytes @ 0x4
  2704                           
  2705  0074                     time_type_valid@type:	
  2706                           ; 1 bytes @ 0x4
  2707                           
  2708  0074                     byte_union_set_byte@val:	
  2709                           ; 1 bytes @ 0x4
  2710                           
  2711  0074                     flag_array_set_flag@state:	
  2712                           ; 1 bytes @ 0x4
  2713                           
  2714  0074                     flag_array_get_flag_state@name:	
  2715                           ; 1 bytes @ 0x4
  2716                           
  2717                           
  2718                           ; 1 bytes @ 0x4
  2719  0074                     	ds	1
  2720  0075                     ??_byte_union_set_byte:	
  2721  0075                     ??_flag_array_get_flag_state:	
  2722                           ; 1 bytes @ 0x5
  2723                           
  2724  0075                     ??___lwdiv:	
  2725                           ; 1 bytes @ 0x5
  2726                           
  2727  0075                     flag_array_set_flag@name:	
  2728                           ; 1 bytes @ 0x5
  2729                           
  2730                           
  2731                           ; 1 bytes @ 0x5
  2732  0075                     	ds	1
  2733  0076                     ??_flag_array_set_flag:	
  2734  0076                     byte_union_set_byte@ptb:	
  2735                           ; 1 bytes @ 0x6
  2736                           
  2737  0076                     ___lwdiv@counter:	
  2738                           ; 1 bytes @ 0x6
  2739                           
  2740                           
  2741                           ; 1 bytes @ 0x6
  2742  0076                     	ds	1
  2743  0077                     byte_union_set_byte@byte_u:	
  2744  0077                     flag_array_get_flag_state@val:	
  2745                           ; 1 bytes @ 0x7
  2746                           
  2747  0077                     ___lwdiv@quotient:	
  2748                           ; 1 bytes @ 0x7
  2749                           
  2750                           
  2751                           ; 2 bytes @ 0x7
  2752  0077                     	ds	1
  2753  0078                     ??_byte_union_initialize:	
  2754  0078                     byte_union_initialize@byte_u:	
  2755                           ; 1 bytes @ 0x8
  2756                           
  2757  0078                     flag_array_set_flag@flag_array:	
  2758                           ; 1 bytes @ 0x8
  2759                           
  2760  0078                     flag_array_get_flag_state@flag_array:	
  2761                           ; 1 bytes @ 0x8
  2762                           
  2763                           
  2764                           ; 1 bytes @ 0x8
  2765  0078                     	ds	1
  2766  0079                     ??_flag_array_initialise:	
  2767  0079                     ??___lwmod:	
  2768                           ; 1 bytes @ 0x9
  2769                           
  2770  0079                     flag_array_initialise@flag_array:	
  2771                           ; 1 bytes @ 0x9
  2772                           
  2773                           
  2774                           ; 1 bytes @ 0x9
  2775  0079                     	ds	1
  2776  007A                     ___lwmod@counter:	
  2777                           
  2778                           ; 1 bytes @ 0xA
  2779  007A                     	ds	1
  2780  007B                     ??__fassert:	
  2781  007B                     ??_flag_array_valid:	
  2782                           ; 1 bytes @ 0xB
  2783                           
  2784  007B                     ??_test_of_time_type:	
  2785                           ; 1 bytes @ 0xB
  2786                           
  2787  007B                     flag_array_valid@flag_array:	
  2788                           ; 1 bytes @ 0xB
  2789                           
  2790                           
  2791                           ; 1 bytes @ 0xB
  2792  007B                     	ds	1
  2793  007C                     ??_test_function:	
  2794  007C                     ??_main:	
  2795                           ; 1 bytes @ 0xC
  2796                           
  2797                           
  2798                           	psect	cstackBANK0
  2799  0020                     __pcstackBANK0:	
  2800                           ; 1 bytes @ 0xC
  2801                           
  2802  0020                     ?___lwmod:	
  2803  0020                     ___lwmod@divisor:	
  2804                           ; 2 bytes @ 0x0
  2805                           
  2806                           
  2807                           ; 2 bytes @ 0x0
  2808  0020                     	ds	2
  2809  0022                     ___lwmod@dividend:	
  2810                           
  2811                           ; 2 bytes @ 0x2
  2812  0022                     	ds	2
  2813  0024                     ?_printf:	
  2814  0024                     printf@f:	
  2815                           ; 2 bytes @ 0x4
  2816                           
  2817                           
  2818                           ; 2 bytes @ 0x4
  2819  0024                     	ds	8
  2820  002C                     ??_printf:	
  2821                           
  2822                           ; 1 bytes @ 0xC
  2823  002C                     	ds	4
  2824  0030                     printf@flag:	
  2825                           
  2826                           ; 1 bytes @ 0x10
  2827  0030                     	ds	1
  2828  0031                     printf@prec:	
  2829                           
  2830                           ; 1 bytes @ 0x11
  2831  0031                     	ds	1
  2832  0032                     printf@ap:	
  2833                           
  2834                           ; 1 bytes @ 0x12
  2835  0032                     	ds	1
  2836  0033                     printf@cp:	
  2837                           
  2838                           ; 2 bytes @ 0x13
  2839  0033                     	ds	2
  2840  0035                     printf@val:	
  2841                           
  2842                           ; 2 bytes @ 0x15
  2843  0035                     	ds	2
  2844  0037                     printf@c:	
  2845                           
  2846                           ; 1 bytes @ 0x17
  2847  0037                     	ds	1
  2848  0038                     ?__fassert:	
  2849  0038                     test_of_time_type@type:	
  2850                           ; 1 bytes @ 0x18
  2851                           
  2852  0038                     __fassert@line:	
  2853                           ; 1 bytes @ 0x18
  2854                           
  2855                           
  2856                           ; 2 bytes @ 0x18
  2857  0038                     	ds	1
  2858  0039                     test_of_time_type@i:	
  2859                           
  2860                           ; 2 bytes @ 0x19
  2861  0039                     	ds	1
  2862  003A                     __fassert@file:	
  2863                           
  2864                           ; 2 bytes @ 0x1A
  2865  003A                     	ds	2
  2866  003C                     __fassert@exp:	
  2867                           
  2868                           ; 2 bytes @ 0x1C
  2869  003C                     	ds	2
  2870  003E                     ?_flag_array_valid:	
  2871                           
  2872                           ; 2 bytes @ 0x1E
  2873  003E                     	ds	3
  2874  0041                     ??_test_of_flag_array:	
  2875                           
  2876                           ; 1 bytes @ 0x21
  2877  0041                     	ds	1
  2878  0042                     test_of_flag_array@array:	
  2879                           
  2880                           ; 2 bytes @ 0x22
  2881  0042                     	ds	2
  2882                           
  2883                           	psect	maintext
  2884  0583                     __pmaintext:	
  2885 ;;
  2886 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2887 ;;
  2888 ;; *************** function _main *****************
  2889 ;; Defined at:
  2890 ;;		line 14 in file "main.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  2    4[None  ] int 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : B1F/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2908 ;;Total ram usage:        0 bytes
  2909 ;; Hardware stack levels required when called:    7
  2910 ;; This function calls:
  2911 ;;		_test_function
  2912 ;; This function is called by:
  2913 ;;		Startup code after reset
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917                           
  2918                           ;psect for function _main
  2919  0583                     _main:	
  2920                           
  2921                           ;main.c: 16: test_function();
  2922                           
  2923                           ;incstack = 0
  2924                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2925  0583  3185  2577         	fcall	_test_function
  2926                           
  2927                           ;main.c: 17: return(0);
  2928                           ;	Return value of _main is never used
  2929  0585  3180  280D         	ljmp	start
  2930  0587                     __end_of_main:	
  2931                           
  2932                           	psect	text1
  2933  0577                     __ptext1:	
  2934 ;; *************** function _test_function *****************
  2935 ;; Defined at:
  2936 ;;		line 50 in file "functions_test.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      void 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2954 ;;Total ram usage:        0 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    6
  2957 ;; This function calls:
  2958 ;;		_test_of_flag_array
  2959 ;;		_test_of_time_type
  2960 ;; This function is called by:
  2961 ;;		_main
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           
  2966                           ;psect for function _test_function
  2967  0577                     _test_function:	
  2968                           
  2969                           ;functions_test.c: 52: test_of_time_type();
  2970                           
  2971                           ;incstack = 0
  2972                           ; Regs used in _test_function: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2973  0577  3183  234A  3185   	fcall	_test_of_time_type
  2974                           
  2975                           ;functions_test.c: 53: test_of_flag_array();
  2976  057A  3182  22BE         	fcall	_test_of_flag_array
  2977  057C  0008               	return
  2978  057D                     __end_of_test_function:	
  2979                           
  2980                           	psect	text2
  2981  034A                     __ptext2:	
  2982 ;; *************** function _test_of_time_type *****************
  2983 ;; Defined at:
  2984 ;;		line 5 in file "functions_test.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  i               2   25[BANK0 ] int 
  2989 ;;  type            1   24[BANK0 ] enum E189
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;Total ram usage:        4 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    3
  3006 ;; This function calls:
  3007 ;;		_printf
  3008 ;;		_time_type_valid
  3009 ;; This function is called by:
  3010 ;;		_test_function
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function _test_of_time_type
  3016  034A                     _test_of_time_type:	
  3017                           
  3018                           ;functions_test.c: 7: printf("test of time_type_valid\n");
  3019                           
  3020                           ;incstack = 0
  3021                           ; Regs used in _test_of_time_type: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3022  034A  302E               	movlw	low (STR_5| (0+32768))
  3023  034B  0020               	movlb	0	; select bank0
  3024  034C  00A4               	movwf	printf@f
  3025  034D  3081               	movlw	high (STR_5| (0+32768))
  3026  034E  00A5               	movwf	printf@f+1
  3027  034F  3181  21DA  3183   	fcall	_printf
  3028                           
  3029                           ;functions_test.c: 8: time_type type=second;
  3030  0352  0020               	movlb	0	; select bank0
  3031  0353  01B8               	clrf	test_of_time_type@type
  3032                           
  3033                           ;functions_test.c: 9: if(time_type_valid(type)==0)
  3034  0354  0838               	movf	test_of_time_type@type,w
  3035  0355  3185  252F  3183   	fcall	_time_type_valid
  3036  0358  0871               	movf	?_time_type_valid,w
  3037  0359  0472               	iorwf	?_time_type_valid+1,w
  3038  035A  1D03               	btfss	3,2
  3039  035B  2B64               	goto	l1678
  3040                           
  3041                           ;functions_test.c: 10: printf("second KO\n");
  3042  035C  30A2               	movlw	low (STR_6| (0+32768))
  3043  035D  0020               	movlb	0	; select bank0
  3044  035E  00A4               	movwf	printf@f
  3045  035F  3081               	movlw	high (STR_6| (0+32768))
  3046  0360  00A5               	movwf	printf@f+1
  3047  0361  3181  21DA  3183   	fcall	_printf
  3048  0364                     l1678:	
  3049                           
  3050                           ;functions_test.c: 11: type=minute;
  3051  0364  0020               	movlb	0	; select bank0
  3052  0365  01B8               	clrf	test_of_time_type@type
  3053  0366  0AB8               	incf	test_of_time_type@type,f
  3054                           
  3055                           ;functions_test.c: 12: if(time_type_valid(type)==0)
  3056  0367  0838               	movf	test_of_time_type@type,w
  3057  0368  3185  252F  3183   	fcall	_time_type_valid
  3058  036B  0871               	movf	?_time_type_valid,w
  3059  036C  0472               	iorwf	?_time_type_valid+1,w
  3060  036D  1D03               	btfss	3,2
  3061  036E  2B77               	goto	l1684
  3062                           
  3063                           ;functions_test.c: 13: printf("minute KO\n");
  3064  036F  30AD               	movlw	low (STR_7| (0+32768))
  3065  0370  0020               	movlb	0	; select bank0
  3066  0371  00A4               	movwf	printf@f
  3067  0372  3081               	movlw	high (STR_7| (0+32768))
  3068  0373  00A5               	movwf	printf@f+1
  3069  0374  3181  21DA  3183   	fcall	_printf
  3070  0377                     l1684:	
  3071                           
  3072                           ;functions_test.c: 14: type=hour;
  3073  0377  3002               	movlw	2
  3074  0378  00FB               	movwf	??_test_of_time_type
  3075  0379  087B               	movf	??_test_of_time_type,w
  3076  037A  0020               	movlb	0	; select bank0
  3077  037B  00B8               	movwf	test_of_time_type@type
  3078                           
  3079                           ;functions_test.c: 15: if(time_type_valid(type)==0)
  3080  037C  0838               	movf	test_of_time_type@type,w
  3081  037D  3185  252F  3183   	fcall	_time_type_valid
  3082  0380  0871               	movf	?_time_type_valid,w
  3083  0381  0472               	iorwf	?_time_type_valid+1,w
  3084  0382  1D03               	btfss	3,2
  3085  0383  2B8C               	goto	l1690
  3086                           
  3087                           ;functions_test.c: 16: printf("hour KO\n");
  3088  0384  30C3               	movlw	low (STR_8| (0+32768))
  3089  0385  0020               	movlb	0	; select bank0
  3090  0386  00A4               	movwf	printf@f
  3091  0387  3081               	movlw	high (STR_8| (0+32768))
  3092  0388  00A5               	movwf	printf@f+1
  3093  0389  3181  21DA  3183   	fcall	_printf
  3094  038C                     l1690:	
  3095                           
  3096                           ;functions_test.c: 17: int i=3;
  3097  038C  3003               	movlw	3
  3098  038D  0020               	movlb	0	; select bank0
  3099  038E  00B9               	movwf	test_of_time_type@i
  3100  038F  3000               	movlw	0
  3101  0390  00BA               	movwf	test_of_time_type@i+1
  3102                           
  3103                           ;functions_test.c: 18: for(i=3;i<20;i++){
  3104  0391  3003               	movlw	3
  3105  0392  00B9               	movwf	test_of_time_type@i
  3106  0393  3000               	movlw	0
  3107  0394  00BA               	movwf	test_of_time_type@i+1
  3108  0395                     L1:	
  3109  0395  083A               	movf	test_of_time_type@i+1,w
  3110  0396  3A80               	xorlw	128
  3111  0397  00FB               	movwf	??_test_of_time_type
  3112  0398  3080               	movlw	128
  3113  0399  027B               	subwf	??_test_of_time_type,w
  3114  039A  1D03               	skipz
  3115  039B  2B9E               	goto	u1225
  3116  039C  3014               	movlw	20
  3117  039D  0239               	subwf	test_of_time_type@i,w
  3118  039E                     u1225:	
  3119  039E  1803               	btfsc	3,0
  3120  039F  0008               	return
  3121                           
  3122                           ;functions_test.c: 19: if(time_type_valid(i)==1)
  3123  03A0  0020               	movlb	0	; select bank0
  3124  03A1  0839               	movf	test_of_time_type@i,w
  3125  03A2  3185  252F  3183   	fcall	_time_type_valid
  3126  03A5  0371               	decf	?_time_type_valid,w
  3127  03A6  0472               	iorwf	?_time_type_valid+1,w
  3128  03A7  1D03               	btfss	3,2
  3129  03A8  2BB5               	goto	l1702
  3130                           
  3131                           ;functions_test.c: 20: printf("%d KO\n",i);
  3132  03A9  30D3               	movlw	low (STR_9| (0+32768))
  3133  03AA  0020               	movlb	0	; select bank0
  3134  03AB  00A4               	movwf	printf@f
  3135  03AC  3081               	movlw	high (STR_9| (0+32768))
  3136  03AD  00A5               	movwf	printf@f+1
  3137  03AE  083A               	movf	test_of_time_type@i+1,w
  3138  03AF  00A7               	movwf	?_printf+3
  3139  03B0  0839               	movf	test_of_time_type@i,w
  3140  03B1  00A6               	movwf	?_printf+2
  3141  03B2  3181  21DA  3183   	fcall	_printf
  3142  03B5                     l1702:	
  3143  03B5  3001               	movlw	1
  3144  03B6  0020               	movlb	0	; select bank0
  3145  03B7  07B9               	addwf	test_of_time_type@i,f
  3146  03B8  3000               	movlw	0
  3147  03B9  3DBA               	addwfc	test_of_time_type@i+1,f
  3148  03BA  2B95               	goto	L1
  3149  03BB                     __end_of_test_of_time_type:	
  3150                           
  3151                           	psect	text3
  3152  052F                     __ptext3:	
  3153 ;; *************** function _time_type_valid *****************
  3154 ;; Defined at:
  3155 ;;		line 4 in file "time_type.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  type            1    wreg     enum E184
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  type            1    4[COMMON] enum E184
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2    1[COMMON] int 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3169 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;Total ram usage:        4 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    1
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_test_of_time_type
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           
  3184                           ;psect for function _time_type_valid
  3185  052F                     _time_type_valid:	
  3186                           
  3187                           ;incstack = 0
  3188                           ; Regs used in _time_type_valid: [wreg+status,2]
  3189                           ;time_type_valid@type stored from wreg
  3190  052F  00F4               	movwf	time_type_valid@type
  3191                           
  3192                           ;time_type.c: 6: if(type<3)
  3193  0530  3003               	movlw	3
  3194  0531  0274               	subwf	time_type_valid@type,w
  3195  0532  1803               	skipnc
  3196  0533  2D39               	goto	l1328
  3197                           
  3198                           ;time_type.c: 7: return 1;
  3199  0534  3001               	movlw	1
  3200  0535  00F1               	movwf	?_time_type_valid
  3201  0536  3000               	movlw	0
  3202  0537  00F2               	movwf	?_time_type_valid+1
  3203  0538  0008               	return
  3204  0539                     l1328:	
  3205                           
  3206                           ;time_type.c: 8: return 0;
  3207  0539  01F1               	clrf	?_time_type_valid
  3208  053A  01F2               	clrf	?_time_type_valid+1
  3209  053B  0008               	return
  3210  053C                     __end_of_time_type_valid:	
  3211                           
  3212                           	psect	text4
  3213  02BE                     __ptext4:	
  3214 ;; *************** function _test_of_flag_array *****************
  3215 ;; Defined at:
  3216 ;;		line 24 in file "functions_test.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  array           2   34[BANK0 ] struct .
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3231 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;Total ram usage:        3 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    5
  3237 ;; This function calls:
  3238 ;;		_flag_array_get_flag_state
  3239 ;;		_flag_array_initialise
  3240 ;;		_flag_array_set_flag
  3241 ;;		_flag_array_set_numbers
  3242 ;;		_flag_array_valid
  3243 ;;		_printf
  3244 ;; This function is called by:
  3245 ;;		_test_function
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _test_of_flag_array
  3251  02BE                     _test_of_flag_array:	
  3252                           
  3253                           ;functions_test.c: 26: printf("test of flag_array_initialize\n");
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _test_of_flag_array: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3257  02BE  3085               	movlw	low (STR_10| (0+32768))
  3258  02BF  0020               	movlb	0	; select bank0
  3259  02C0  00A4               	movwf	printf@f
  3260  02C1  3080               	movlw	high (STR_10| (0+32768))
  3261  02C2  00A5               	movwf	printf@f+1
  3262  02C3  3181  21DA  3182   	fcall	_printf
  3263                           
  3264                           ;functions_test.c: 27: flag_array_t array;
  3265                           ;functions_test.c: 28: flag_array_initialise(&array);
  3266  02C6  3042               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3267  02C7  3185  255F  3182   	fcall	_flag_array_initialise
  3268                           
  3269                           ;functions_test.c: 29: if(flag_array_valid(&array)==0)
  3270  02CA  3042               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3271  02CB  3184  24C0  3182   	fcall	_flag_array_valid
  3272  02CE  0020               	movlb	0	; select bank0
  3273  02CF  083E               	movf	?_flag_array_valid,w
  3274  02D0  043F               	iorwf	?_flag_array_valid+1,w
  3275  02D1  1D03               	btfss	3,2
  3276  02D2  2ADA               	goto	l175
  3277                           
  3278                           ;functions_test.c: 30: printf("flag_array_initialize KO\n");
  3279  02D3  30FA               	movlw	low (STR_11| (0+32768))
  3280  02D4  00A4               	movwf	printf@f
  3281  02D5  3080               	movlw	high (STR_11| (0+32768))
  3282  02D6  00A5               	movwf	printf@f+1
  3283  02D7  3181  21DA  3182   	fcall	_printf
  3284  02DA                     l175:	
  3285                           
  3286                           ;functions_test.c: 31: printf("test of flag_array_valid\n");
  3287  02DA  3014               	movlw	low (STR_12| (0+32768))
  3288  02DB  0020               	movlb	0	; select bank0
  3289  02DC  00A4               	movwf	printf@f
  3290  02DD  3081               	movlw	high (STR_12| (0+32768))
  3291  02DE  00A5               	movwf	printf@f+1
  3292  02DF  3181  21DA  3182   	fcall	_printf
  3293                           
  3294                           ;functions_test.c: 32: array.flags_number=10;
  3295  02E2  300A               	movlw	10
  3296  02E3  0020               	movlb	0	; select bank0
  3297  02E4  00C1               	movwf	??_test_of_flag_array
  3298  02E5  0841               	movf	??_test_of_flag_array,w
  3299  02E6  00C3               	movwf	test_of_flag_array@array+1
  3300                           
  3301                           ;functions_test.c: 33: if(flag_array_valid(&array)==0)
  3302  02E7  3042               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3303  02E8  3184  24C0  3182   	fcall	_flag_array_valid
  3304  02EB  0020               	movlb	0	; select bank0
  3305  02EC  083E               	movf	?_flag_array_valid,w
  3306  02ED  043F               	iorwf	?_flag_array_valid+1,w
  3307  02EE  1D03               	btfss	3,2
  3308  02EF  2AF7               	goto	l176
  3309                           
  3310                           ;functions_test.c: 34: printf("flag_array_valid KO\n");
  3311  02F0  305F               	movlw	low (STR_13| (0+32768))
  3312  02F1  00A4               	movwf	printf@f
  3313  02F2  3081               	movlw	high (STR_13| (0+32768))
  3314  02F3  00A5               	movwf	printf@f+1
  3315  02F4  3181  21DA  3182   	fcall	_printf
  3316  02F7                     l176:	
  3317                           
  3318                           ;functions_test.c: 35: printf("test of flag_array_set_numbers\n");
  3319  02F7  3065               	movlw	low (STR_14| (0+32768))
  3320  02F8  0020               	movlb	0	; select bank0
  3321  02F9  00A4               	movwf	printf@f
  3322  02FA  3080               	movlw	high (STR_14| (0+32768))
  3323  02FB  00A5               	movwf	printf@f+1
  3324  02FC  3181  21DA  3182   	fcall	_printf
  3325                           
  3326                           ;functions_test.c: 36: flag_array_set_numbers(&array,4);
  3327  02FF  3004               	movlw	4
  3328  0300  0020               	movlb	0	; select bank0
  3329  0301  00C1               	movwf	??_test_of_flag_array
  3330  0302  0841               	movf	??_test_of_flag_array,w
  3331  0303  00F1               	movwf	flag_array_set_numbers@nbr
  3332  0304  3042               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3333  0305  3185  2556  3182   	fcall	_flag_array_set_numbers
  3334                           
  3335                           ;functions_test.c: 37: if(array.flags_number!=4)
  3336  0308  3004               	movlw	4
  3337  0309  0020               	movlb	0	; select bank0
  3338  030A  0643               	xorwf	test_of_flag_array@array+1,w
  3339  030B  1903               	btfsc	3,2
  3340  030C  2B14               	goto	l177
  3341                           
  3342                           ;functions_test.c: 38: printf("flag_array_set_numbers KO\n");
  3343  030D  30DF               	movlw	low (STR_15| (0+32768))
  3344  030E  00A4               	movwf	printf@f
  3345  030F  3080               	movlw	high (STR_15| (0+32768))
  3346  0310  00A5               	movwf	printf@f+1
  3347  0311  3181  21DA  3182   	fcall	_printf
  3348  0314                     l177:	
  3349                           
  3350                           ;functions_test.c: 39: printf("test of flag_array_set_flag\n");
  3351  0314  30C2               	movlw	low (STR_16| (0+32768))
  3352  0315  0020               	movlb	0	; select bank0
  3353  0316  00A4               	movwf	printf@f
  3354  0317  3080               	movlw	high (STR_16| (0+32768))
  3355  0318  00A5               	movwf	printf@f+1
  3356  0319  3181  21DA  3182   	fcall	_printf
  3357                           
  3358                           ;functions_test.c: 40: flag_array_set_flag(&array,0,1);
  3359  031C  01F4               	clrf	flag_array_set_flag@state
  3360  031D  01F5               	clrf	flag_array_set_flag@name
  3361  031E  0AF5               	incf	flag_array_set_flag@name,f
  3362  031F  3042               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3363  0320  3185  253C  3182   	fcall	_flag_array_set_flag
  3364                           
  3365                           ;functions_test.c: 41: if(array.flags.b1!=0)
  3366  0323  0020               	movlb	0	; select bank0
  3367  0324  1CC2               	btfss	test_of_flag_array@array,1
  3368  0325  2B2D               	goto	l178
  3369                           
  3370                           ;functions_test.c: 42: printf("flag_array_set_flag KO\n");
  3371  0326  3047               	movlw	low (STR_17| (0+32768))
  3372  0327  00A4               	movwf	printf@f
  3373  0328  3081               	movlw	high (STR_17| (0+32768))
  3374  0329  00A5               	movwf	printf@f+1
  3375  032A  3181  21DA  3182   	fcall	_printf
  3376  032D                     l178:	
  3377                           
  3378                           ;functions_test.c: 43: printf("test of flag_array_get_flag_state\n");
  3379  032D  3042               	movlw	low (STR_18| (0+32768))
  3380  032E  0020               	movlb	0	; select bank0
  3381  032F  00A4               	movwf	printf@f
  3382  0330  3080               	movlw	high (STR_18| (0+32768))
  3383  0331  00A5               	movwf	printf@f+1
  3384  0332  3181  21DA  3182   	fcall	_printf
  3385                           
  3386                           ;functions_test.c: 44: if(flag_array_get_flag_state(&array,1)!=array.flags.b1)
  3387  0335  0020               	movlb	0	; select bank0
  3388  0336  0C42               	rrf	test_of_flag_array@array,w
  3389  0337  3901               	andlw	1
  3390  0338  00C1               	movwf	??_test_of_flag_array
  3391  0339  01F4               	clrf	flag_array_get_flag_state@name
  3392  033A  0AF4               	incf	flag_array_get_flag_state@name,f
  3393  033B  3042               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3394  033C  3185  2549  3182   	fcall	_flag_array_get_flag_state
  3395  033F  0020               	movlb	0	; select bank0
  3396  0340  0641               	xorwf	??_test_of_flag_array,w
  3397  0341  1903               	skipnz
  3398  0342  0008               	return
  3399                           
  3400                           ;functions_test.c: 45: printf("flag_array_get_flag_state KO\n");
  3401  0343  30A4               	movlw	low (STR_19| (0+32768))
  3402  0344  00A4               	movwf	printf@f
  3403  0345  3080               	movlw	high (STR_19| (0+32768))
  3404  0346  00A5               	movwf	printf@f+1
  3405  0347  3181  21DA         	fcall	_printf
  3406  0349  0008               	return
  3407  034A                     __end_of_test_of_flag_array:	
  3408                           
  3409                           	psect	text5
  3410  04C0                     __ptext5:	
  3411 ;; *************** function _flag_array_valid *****************
  3412 ;; Defined at:
  3413 ;;		line 6 in file "flag_array.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  flag_array      1    wreg     PTR const struct .
  3416 ;;		 -> test_of_flag_array@array(2), 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  flag_array      1   11[COMMON] PTR const struct .
  3419 ;;		 -> test_of_flag_array@array(2), 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2   30[BANK0 ] int 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3429 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;Total ram usage:        4 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    4
  3436 ;; This function calls:
  3437 ;;		__fassert
  3438 ;; This function is called by:
  3439 ;;		_test_of_flag_array
  3440 ;;		_software_timer_valid
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           
  3445                           ;psect for function _flag_array_valid
  3446  04C0                     _flag_array_valid:	
  3447                           
  3448                           ;incstack = 0
  3449                           ; Regs used in _flag_array_valid: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3450                           ;flag_array_valid@flag_array stored from wreg
  3451  04C0  00FB               	movwf	flag_array_valid@flag_array
  3452                           
  3453                           ;flag_array.c: 8: if(!(flag_array!=(0))) {_fassert(8, "flag_array.c", "flag_array!=(0)")
      +                          ;};
  3454  04C1  087B               	movf	flag_array_valid@flag_array,w
  3455  04C2  1D03               	btfss	3,2
  3456  04C3  2CD4               	goto	l1660
  3457  04C4  3008               	movlw	8
  3458  04C5  0020               	movlb	0	; select bank0
  3459  04C6  00B8               	movwf	__fassert@line
  3460  04C7  3000               	movlw	0
  3461  04C8  00B9               	movwf	__fassert@line+1
  3462  04C9  3095               	movlw	low (STR_1| (0+32768))
  3463  04CA  00BA               	movwf	__fassert@file
  3464  04CB  3081               	movlw	high (STR_1| (0+32768))
  3465  04CC  00BB               	movwf	__fassert@file+1
  3466  04CD  3085               	movlw	low (STR_2| (0+32768))
  3467  04CE  00BC               	movwf	__fassert@exp
  3468  04CF  3081               	movlw	high (STR_2| (0+32768))
  3469  04D0  00BD               	movwf	__fassert@exp+1
  3470  04D1  3184  24E5  3184   	fcall	__fassert
  3471  04D4                     l1660:	
  3472                           
  3473                           ;flag_array.c: 9: if(flag_array->flags_number>8)
  3474  04D4  0A7B               	incf	flag_array_valid@flag_array,w
  3475  04D5  0086               	movwf	6
  3476  04D6  0187               	clrf	7
  3477  04D7  3009               	movlw	9
  3478  04D8  0201               	subwf	1,w
  3479  04D9  1C03               	skipc
  3480  04DA  2CDF               	goto	l1666
  3481                           
  3482                           ;flag_array.c: 10: return 0;
  3483  04DB  0020               	movlb	0	; select bank0
  3484  04DC  01BE               	clrf	?_flag_array_valid
  3485  04DD  01BF               	clrf	?_flag_array_valid+1
  3486  04DE  0008               	return
  3487  04DF                     l1666:	
  3488                           
  3489                           ;flag_array.c: 11: return 1;
  3490  04DF  3001               	movlw	1
  3491  04E0  0020               	movlb	0	; select bank0
  3492  04E1  00BE               	movwf	?_flag_array_valid
  3493  04E2  3000               	movlw	0
  3494  04E3  00BF               	movwf	?_flag_array_valid+1
  3495  04E4  0008               	return
  3496  04E5                     __end_of_flag_array_valid:	
  3497                           
  3498                           	psect	text6
  3499  04E5                     __ptext6:	
  3500 ;; *************** function __fassert *****************
  3501 ;; Defined at:
  3502 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\assert.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;  line            2   24[BANK0 ] int 
  3505 ;;  file            2   26[BANK0 ] PTR const unsigned char 
  3506 ;;		 -> STR_3(17), STR_1(13), 
  3507 ;;  exp             2   28[BANK0 ] PTR const unsigned char 
  3508 ;;		 -> STR_4(11), STR_2(16), 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3520 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3523 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3524 ;;Total ram usage:        6 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    3
  3527 ;; This function calls:
  3528 ;;		_printf
  3529 ;; This function is called by:
  3530 ;;		_flag_array_valid
  3531 ;;		_software_timer_valid
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           
  3536                           ;psect for function __fassert
  3537  04E5                     __fassert:	
  3538                           
  3539                           ;incstack = 0
  3540                           ; Regs used in __fassert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3541  04E5  301E               	movlw	low (STR_21| (0+32768))
  3542  04E6  0020               	movlb	0	; select bank0
  3543  04E7  00A4               	movwf	printf@f
  3544  04E8  3080               	movlw	high (STR_21| (0+32768))
  3545  04E9  00A5               	movwf	printf@f+1
  3546  04EA  083B               	movf	__fassert@file+1,w
  3547  04EB  00A7               	movwf	(low ((?_printf| 0+2))+1)
  3548  04EC  083A               	movf	__fassert@file,w
  3549  04ED  00A6               	movwf	low ((?_printf| 0+2))
  3550  04EE  0839               	movf	__fassert@line+1,w
  3551  04EF  00A9               	movwf	?_printf+5
  3552  04F0  0838               	movf	__fassert@line,w
  3553  04F1  00A8               	movwf	?_printf+4
  3554  04F2  083D               	movf	__fassert@exp+1,w
  3555  04F3  00AB               	movwf	(low ((?_printf| 0+6))+1)
  3556  04F4  083C               	movf	__fassert@exp,w
  3557  04F5  00AA               	movwf	low ((?_printf| 0+6))
  3558  04F6  3181  21DA         	fcall	_printf
  3559  04F8  3184  2CE5         	ljmp	$	;# 
  3560  04FA  0008               	return
  3561  04FB                     __end_of__fassert:	
  3562                           
  3563                           	psect	text7
  3564  01DA                     __ptext7:	
  3565 ;; *************** function _printf *****************
  3566 ;; Defined at:
  3567 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  f               2    4[BANK0 ] PTR const unsigned char 
  3570 ;;		 -> STR_21(36), STR_19(30), STR_18(35), STR_17(24), 
  3571 ;;		 -> STR_16(29), STR_15(27), STR_14(32), STR_13(21), 
  3572 ;;		 -> STR_12(26), STR_11(26), STR_10(31), STR_9(7), 
  3573 ;;		 -> STR_8(9), STR_7(11), STR_6(11), STR_5(25), 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  tmpval          4    0        struct .
  3576 ;;  val             2   21[BANK0 ] unsigned int 
  3577 ;;  cp              2   19[BANK0 ] PTR const unsigned char 
  3578 ;;		 -> STR_20(7), STR_4(11), STR_3(17), STR_2(16), 
  3579 ;;		 -> STR_1(13), 
  3580 ;;  len             2    0        unsigned int 
  3581 ;;  c               1   23[BANK0 ] char 
  3582 ;;  ap              1   18[BANK0 ] PTR void [1]
  3583 ;;		 -> ?_printf(2), 
  3584 ;;  prec            1   17[BANK0 ] char 
  3585 ;;  flag            1   16[BANK0 ] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2    4[BANK0 ] int 
  3588 ;; Registers used:
  3589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3595 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3598 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3599 ;;Total ram usage:       20 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    2
  3602 ;; This function calls:
  3603 ;;		___lwdiv
  3604 ;;		___lwmod
  3605 ;;		_putch
  3606 ;; This function is called by:
  3607 ;;		_test_of_time_type
  3608 ;;		_test_of_flag_array
  3609 ;;		__fassert
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _printf
  3615  01DA                     _printf:	
  3616                           
  3617                           ;doprnt.c: 466: va_list ap;
  3618                           ;doprnt.c: 499: signed char c;
  3619                           ;doprnt.c: 506: signed char prec;
  3620                           ;doprnt.c: 508: unsigned char flag;
  3621                           ;doprnt.c: 523: union {
  3622                           ;doprnt.c: 524: unsigned long vd;
  3623                           ;doprnt.c: 525: double integ;
  3624                           ;doprnt.c: 526: } tmpval;
  3625                           ;doprnt.c: 528: unsigned int val;
  3626                           ;doprnt.c: 529: unsigned len;
  3627                           ;doprnt.c: 530: const char * cp;
  3628                           ;doprnt.c: 533: *ap = __va_start();
  3629                           
  3630                           ;incstack = 0
  3631                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3632  01DA  3026               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3633  01DB  0020               	movlb	0	; select bank0
  3634  01DC  00AC               	movwf	??_printf
  3635  01DD  082C               	movf	??_printf,w
  3636  01DE  00B2               	movwf	printf@ap
  3637  01DF                     l1652:	
  3638                           ;doprnt.c: 536: while(c = *f++) {
  3639                           
  3640  01DF  0020               	movlb	0	; select bank0
  3641  01E0  0825               	movf	printf@f+1,w
  3642  01E1  00AD               	movwf	??_printf+1
  3643  01E2  0824               	movf	printf@f,w
  3644  01E3  00AC               	movwf	??_printf
  3645  01E4  0AA4               	incf	printf@f,f
  3646  01E5  1903               	skipnz
  3647  01E6  0AA5               	incf	printf@f+1,f
  3648  01E7  082C               	movf	??_printf,w
  3649  01E8  0084               	movwf	4
  3650  01E9  082D               	movf	??_printf+1,w
  3651  01EA  0085               	movwf	5
  3652  01EB  0800               	movf	0,w	;code access
  3653  01EC  00AE               	movwf	??_printf+2
  3654  01ED  082E               	movf	??_printf+2,w
  3655  01EE  00B7               	movwf	printf@c
  3656  01EF  0837               	movf	printf@c,w
  3657  01F0  1903               	btfsc	3,2
  3658  01F1  0008               	return
  3659                           
  3660                           ;doprnt.c: 538: if(c != '%')
  3661  01F2  3025               	movlw	37
  3662  01F3  0637               	xorwf	printf@c,w
  3663  01F4  1903               	btfsc	3,2
  3664  01F5  29FB               	goto	l1598
  3665                           
  3666                           ;doprnt.c: 540: {
  3667                           ;doprnt.c: 541: (putch(c) );
  3668  01F6  0837               	movf	printf@c,w
  3669  01F7  3185  2568  3181   	fcall	_putch
  3670                           
  3671                           ;doprnt.c: 542: continue;
  3672  01FA  29DF               	goto	l1652
  3673  01FB                     l1598:	
  3674                           
  3675                           ;doprnt.c: 543: }
  3676                           ;doprnt.c: 548: flag = 0;
  3677  01FB  0020               	movlb	0	; select bank0
  3678  01FC  01B0               	clrf	printf@flag
  3679                           
  3680                           ;doprnt.c: 635: switch(c = *f++) {
  3681  01FD  2A26               	goto	l1616
  3682  01FE                     l1600:	
  3683                           ;doprnt.c: 728: case 's':
  3684                           
  3685                           ;doprnt.c: 698: case 'i':
  3686                           ;doprnt.c: 699: break;
  3687                           
  3688                           ;doprnt.c: 697: case 'd':
  3689                           
  3690                           ;doprnt.c: 638: goto alldone;
  3691                           
  3692                           ;doprnt.c: 637: case 0:
  3693                           
  3694                           
  3695                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3696  01FE  0832               	movf	printf@ap,w
  3697  01FF  0086               	movwf	6
  3698  0200  0187               	clrf	7
  3699  0201  3F40               	moviw [0]fsr1
  3700  0202  00B3               	movwf	printf@cp
  3701  0203  3F41               	moviw [1]fsr1
  3702  0204  00B4               	movwf	printf@cp+1
  3703  0205  3002               	movlw	2
  3704  0206  00AC               	movwf	??_printf
  3705  0207  082C               	movf	??_printf,w
  3706  0208  07B2               	addwf	printf@ap,f
  3707                           
  3708                           ;doprnt.c: 740: if(!cp)
  3709  0209  0833               	movf	printf@cp,w
  3710  020A  0434               	iorwf	printf@cp+1,w
  3711  020B  1D03               	btfss	3,2
  3712  020C  2A11               	goto	l1612
  3713                           
  3714                           ;doprnt.c: 741: cp = "(null)";
  3715  020D  30CC               	movlw	low (STR_20| (0+32768))
  3716  020E  00B3               	movwf	printf@cp
  3717  020F  3081               	movlw	high (STR_20| (0+32768))
  3718  0210  00B4               	movwf	printf@cp+1
  3719  0211                     l1612:	
  3720                           ;doprnt.c: 777: while(*cp)
  3721                           
  3722  0211  0833               	movf	printf@cp,w
  3723  0212  0084               	movwf	4
  3724  0213  0834               	movf	printf@cp+1,w
  3725  0214  0085               	movwf	5
  3726  0215  0012               	moviw fsr0++
  3727  0216  1903               	btfsc	3,2
  3728  0217  29DF               	goto	l1652
  3729                           
  3730                           ;doprnt.c: 778: (putch(*cp++) );
  3731  0218  0833               	movf	printf@cp,w
  3732  0219  0084               	movwf	4
  3733  021A  0834               	movf	printf@cp+1,w
  3734  021B  0085               	movwf	5
  3735  021C  0800               	movf	0,w	;code access
  3736  021D  3185  2568  3181   	fcall	_putch
  3737  0220  3001               	movlw	1
  3738  0221  0020               	movlb	0	; select bank0
  3739  0222  07B3               	addwf	printf@cp,f
  3740  0223  3000               	movlw	0
  3741  0224  3DB4               	addwfc	printf@cp+1,f
  3742  0225  2A11               	goto	l1612
  3743  0226                     l1616:	
  3744                           ;doprnt.c: 822: }
  3745                           
  3746                           ;doprnt.c: 813: continue;
  3747                           
  3748                           ;doprnt.c: 802: default:
  3749                           
  3750                           ;doprnt.c: 779: continue;
  3751                           
  3752  0226  0825               	movf	printf@f+1,w
  3753  0227  00AD               	movwf	??_printf+1
  3754  0228  0824               	movf	printf@f,w
  3755  0229  00AC               	movwf	??_printf
  3756  022A  0AA4               	incf	printf@f,f
  3757  022B  1903               	skipnz
  3758  022C  0AA5               	incf	printf@f+1,f
  3759  022D  082C               	movf	??_printf,w
  3760  022E  0084               	movwf	4
  3761  022F  082D               	movf	??_printf+1,w
  3762  0230  0085               	movwf	5
  3763  0231  0800               	movf	0,w	;code access
  3764  0232  00B7               	movwf	printf@c
  3765                           
  3766                           ; Switch size 1, requested type "space"
  3767                           ; Number of cases is 4, Range of values is 0 to 115
  3768                           ; switch strategies available:
  3769                           ; Name         Instructions Cycles
  3770                           ; simple_byte           13     7 (average)
  3771                           ; direct_byte          238     6 (fixed)
  3772                           ; jumptable            260     6 (fixed)
  3773                           ;	Chosen strategy is simple_byte
  3774  0233  3A00               	xorlw	0	; case 0
  3775  0234  1903               	skipnz
  3776  0235  2ABD               	goto	l249
  3777  0236  3A64               	xorlw	100	; case 100
  3778  0237  1903               	skipnz
  3779  0238  2A40               	goto	l1618
  3780  0239  3A0D               	xorlw	13	; case 105
  3781  023A  1903               	skipnz
  3782  023B  2A40               	goto	l1618
  3783  023C  3A1A               	xorlw	26	; case 115
  3784  023D  1903               	skipnz
  3785  023E  29FE               	goto	l1600
  3786  023F  29DF               	goto	l1652
  3787  0240                     l1618:	
  3788                           
  3789                           ;doprnt.c: 1253: {
  3790                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3791  0240  0832               	movf	printf@ap,w
  3792  0241  0086               	movwf	6
  3793  0242  0187               	clrf	7
  3794  0243  3F40               	moviw [0]fsr1
  3795  0244  00B5               	movwf	printf@val
  3796  0245  3F41               	moviw [1]fsr1
  3797  0246  00B6               	movwf	printf@val+1
  3798  0247  3002               	movlw	2
  3799  0248  00AC               	movwf	??_printf
  3800  0249  082C               	movf	??_printf,w
  3801  024A  07B2               	addwf	printf@ap,f
  3802                           
  3803                           ;doprnt.c: 1261: if((int)val < 0) {
  3804  024B  1FB6               	btfss	printf@val+1,7
  3805  024C  2A56               	goto	l1628
  3806                           
  3807                           ;doprnt.c: 1262: flag |= 0x03;
  3808  024D  3003               	movlw	3
  3809  024E  00AC               	movwf	??_printf
  3810  024F  082C               	movf	??_printf,w
  3811  0250  04B0               	iorwf	printf@flag,f
  3812                           
  3813                           ;doprnt.c: 1263: val = -val;
  3814  0251  09B5               	comf	printf@val,f
  3815  0252  09B6               	comf	printf@val+1,f
  3816  0253  0AB5               	incf	printf@val,f
  3817  0254  1903               	skipnz
  3818  0255  0AB6               	incf	printf@val+1,f
  3819  0256                     l1628:	
  3820                           
  3821                           ;doprnt.c: 1264: }
  3822                           ;doprnt.c: 1266: }
  3823                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3824  0256  01B7               	clrf	printf@c
  3825  0257  0AB7               	incf	printf@c,f
  3826  0258  3005               	movlw	5
  3827  0259  0637               	xorwf	printf@c,w
  3828  025A  1903               	btfsc	3,2
  3829  025B  2A7B               	goto	l1640
  3830  025C                     l1634:	
  3831                           
  3832                           ;doprnt.c: 1306: if(val < dpowers[c])
  3833  025C  0837               	movf	printf@c,w
  3834  025D  00AC               	movwf	??_printf
  3835  025E  01AD               	clrf	??_printf+1
  3836  025F  35AC               	lslf	??_printf,f
  3837  0260  0DAD               	rlf	??_printf+1,f
  3838  0261  3014               	movlw	low (_dpowers| (0+32768))
  3839  0262  072C               	addwf	??_printf,w
  3840  0263  0084               	movwf	4
  3841  0264  3080               	movlw	high (_dpowers| (0+32768))
  3842  0265  3D2D               	addwfc	??_printf+1,w
  3843  0266  0085               	movwf	5
  3844  0267  3F00               	moviw [0]fsr0
  3845  0268  00AE               	movwf	??_printf+2
  3846  0269  3F01               	moviw [1]fsr0
  3847  026A  00AF               	movwf	??_printf+3
  3848  026B  082F               	movf	??_printf+3,w
  3849  026C  0236               	subwf	printf@val+1,w
  3850  026D  1D03               	skipz
  3851  026E  2A71               	goto	u1125
  3852  026F  082E               	movf	??_printf+2,w
  3853  0270  0235               	subwf	printf@val,w
  3854  0271                     u1125:	
  3855  0271  1C03               	btfss	3,0
  3856  0272  2A7B               	goto	l1640
  3857                           
  3858                           ;doprnt.c: 1307: break;
  3859  0273  3001               	movlw	1
  3860  0274  00AC               	movwf	??_printf
  3861  0275  082C               	movf	??_printf,w
  3862  0276  07B7               	addwf	printf@c,f
  3863  0277  3005               	movlw	5
  3864  0278  0637               	xorwf	printf@c,w
  3865  0279  1D03               	btfss	3,2
  3866  027A  2A5C               	goto	l1634
  3867  027B                     l1640:	
  3868                           
  3869                           ;doprnt.c: 1422: {
  3870                           ;doprnt.c: 1438: if(flag & 0x03)
  3871  027B  0830               	movf	printf@flag,w
  3872  027C  3903               	andlw	3
  3873  027D  1903               	btfsc	3,2
  3874  027E  2A83               	goto	l1644
  3875                           
  3876                           ;doprnt.c: 1439: (putch('-') );
  3877  027F  302D               	movlw	45
  3878  0280  3185  2568  3181   	fcall	_putch
  3879  0283                     l1644:	
  3880                           
  3881                           ;doprnt.c: 1469: }
  3882                           ;doprnt.c: 1472: prec = c;
  3883  0283  0020               	movlb	0	; select bank0
  3884  0284  0837               	movf	printf@c,w
  3885  0285  00AC               	movwf	??_printf
  3886  0286  082C               	movf	??_printf,w
  3887  0287  00B1               	movwf	printf@prec
  3888  0288                     l1650:	
  3889                           ;doprnt.c: 1474: while(prec--) {
  3890                           
  3891  0288  30FF               	movlw	255
  3892  0289  0020               	movlb	0	; select bank0
  3893  028A  00AC               	movwf	??_printf
  3894  028B  082C               	movf	??_printf,w
  3895  028C  07B1               	addwf	printf@prec,f
  3896  028D  0A31               	incf	printf@prec,w
  3897  028E  1903               	btfsc	3,2
  3898  028F  29DF               	goto	l1652
  3899                           
  3900                           ;doprnt.c: 1478: {
  3901                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3902  0290  300A               	movlw	10
  3903  0291  00A0               	movwf	___lwmod@divisor
  3904  0292  3000               	movlw	0
  3905  0293  00A1               	movwf	___lwmod@divisor+1
  3906  0294  0831               	movf	printf@prec,w
  3907  0295  00AC               	movwf	??_printf
  3908  0296  01AD               	clrf	??_printf+1
  3909  0297  35AC               	lslf	??_printf,f
  3910  0298  0DAD               	rlf	??_printf+1,f
  3911  0299  3014               	movlw	low (_dpowers| (0+32768))
  3912  029A  072C               	addwf	??_printf,w
  3913  029B  0084               	movwf	4
  3914  029C  3080               	movlw	high (_dpowers| (0+32768))
  3915  029D  3D2D               	addwfc	??_printf+1,w
  3916  029E  0085               	movwf	5
  3917  029F  3F00               	moviw [0]fsr0
  3918  02A0  00F1               	movwf	___lwdiv@divisor
  3919  02A1  3F01               	moviw [1]fsr0
  3920  02A2  00F2               	movwf	___lwdiv@divisor+1
  3921  02A3  0836               	movf	printf@val+1,w
  3922  02A4  00F4               	movwf	___lwdiv@dividend+1
  3923  02A5  0835               	movf	printf@val,w
  3924  02A6  00F3               	movwf	___lwdiv@dividend
  3925  02A7  3184  245F  3181   	fcall	___lwdiv
  3926  02AA  0872               	movf	?___lwdiv+1,w
  3927  02AB  0020               	movlb	0	; select bank0
  3928  02AC  00A3               	movwf	___lwmod@dividend+1
  3929  02AD  0871               	movf	?___lwdiv,w
  3930  02AE  00A2               	movwf	___lwmod@dividend
  3931  02AF  3184  2493  3181   	fcall	___lwmod
  3932  02B2  0020               	movlb	0	; select bank0
  3933  02B3  0820               	movf	?___lwmod,w
  3934  02B4  3E30               	addlw	48
  3935  02B5  00AE               	movwf	??_printf+2
  3936  02B6  082E               	movf	??_printf+2,w
  3937  02B7  00B7               	movwf	printf@c
  3938                           
  3939                           ;doprnt.c: 1523: }
  3940                           ;doprnt.c: 1524: (putch(c) );
  3941  02B8  0837               	movf	printf@c,w
  3942  02B9  3185  2568  3181   	fcall	_putch
  3943  02BC  2A88               	goto	l1650
  3944  02BD                     l249:	
  3945                           ;doprnt.c: 1540: return 0;
  3946                           ;	Return value of _printf is never used
  3947                           
  3948                           ;doprnt.c: 1525: }
  3949                           ;doprnt.c: 1533: }
  3950                           ;doprnt.c: 1535: alldone:
  3951                           
  3952  02BD  0008               	return
  3953  02BE                     __end_of_printf:	
  3954                           
  3955                           	psect	text8
  3956  0568                     __ptext8:	
  3957 ;; *************** function _putch *****************
  3958 ;; Defined at:
  3959 ;;		line 3 in file "hardware_config.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  data            1    wreg     unsigned char 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  data            1    1[COMMON] unsigned char 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      void 
  3966 ;; Registers used:
  3967 ;;		wreg
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3976 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3977 ;;Total ram usage:        1 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:    1
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_printf
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           
  3988                           ;psect for function _putch
  3989  0568                     _putch:	
  3990                           
  3991                           ;incstack = 0
  3992                           ; Regs used in _putch: [wreg]
  3993                           ;putch@data stored from wreg
  3994  0568  00F1               	movwf	putch@data
  3995  0569                     l202:	
  3996                           ;hardware_config.c: 5: continue;
  3997                           
  3998                           ;hardware_config.c: 4: while( ! TXIF)
  3999                           
  4000  0569  0020               	movlb	0	; select bank0
  4001  056A  1E11               	btfss	17,4	;volatile
  4002  056B  2D69               	goto	l202
  4003                           
  4004                           ;hardware_config.c: 6: TXREG = data;
  4005  056C  0871               	movf	putch@data,w
  4006  056D  0023               	movlb	3	; select bank3
  4007  056E  009A               	movwf	26	;volatile
  4008  056F  0008               	return
  4009  0570                     __end_of_putch:	
  4010                           
  4011                           	psect	text9
  4012  0493                     __ptext9:	
  4013 ;; *************** function ___lwmod *****************
  4014 ;; Defined at:
  4015 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  divisor         2    0[BANK0 ] unsigned int 
  4018 ;;  dividend        2    2[BANK0 ] unsigned int 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  counter         1   10[COMMON] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  2    0[BANK0 ] unsigned int 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4030 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4033 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4034 ;;Total ram usage:        6 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    1
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_printf
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           
  4045                           ;psect for function ___lwmod
  4046  0493                     ___lwmod:	
  4047                           
  4048                           ;incstack = 0
  4049                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4050  0493  0020               	movlb	0	; select bank0
  4051  0494  0820               	movf	___lwmod@divisor,w
  4052  0495  0421               	iorwf	___lwmod@divisor+1,w
  4053  0496  1903               	btfsc	3,2
  4054  0497  2CBB               	goto	l1588
  4055  0498  01FA               	clrf	___lwmod@counter
  4056  0499  0AFA               	incf	___lwmod@counter,f
  4057  049A                     l1578:	
  4058  049A  1BA1               	btfsc	___lwmod@divisor+1,7
  4059  049B  2CA6               	goto	l1580
  4060  049C  3001               	movlw	1
  4061  049D                     u1025:	
  4062  049D  35A0               	lslf	___lwmod@divisor,f
  4063  049E  0DA1               	rlf	___lwmod@divisor+1,f
  4064  049F  0B89               	decfsz	9,f
  4065  04A0  2C9D               	goto	u1025
  4066  04A1  3001               	movlw	1
  4067  04A2  00F9               	movwf	??___lwmod
  4068  04A3  0879               	movf	??___lwmod,w
  4069  04A4  07FA               	addwf	___lwmod@counter,f
  4070  04A5  2C9A               	goto	l1578
  4071  04A6                     l1580:	
  4072  04A6  0821               	movf	___lwmod@divisor+1,w
  4073  04A7  0223               	subwf	___lwmod@dividend+1,w
  4074  04A8  1D03               	skipz
  4075  04A9  2CAC               	goto	u1045
  4076  04AA  0820               	movf	___lwmod@divisor,w
  4077  04AB  0222               	subwf	___lwmod@dividend,w
  4078  04AC                     u1045:	
  4079  04AC  1C03               	skipc
  4080  04AD  2CB2               	goto	l1584
  4081  04AE  0820               	movf	___lwmod@divisor,w
  4082  04AF  02A2               	subwf	___lwmod@dividend,f
  4083  04B0  0821               	movf	___lwmod@divisor+1,w
  4084  04B1  3BA3               	subwfb	___lwmod@dividend+1,f
  4085  04B2                     l1584:	
  4086  04B2  3001               	movlw	1
  4087  04B3                     u1055:	
  4088  04B3  36A1               	lsrf	___lwmod@divisor+1,f
  4089  04B4  0CA0               	rrf	___lwmod@divisor,f
  4090  04B5  0B89               	decfsz	9,f
  4091  04B6  2CB3               	goto	u1055
  4092  04B7  3001               	movlw	1
  4093  04B8  02FA               	subwf	___lwmod@counter,f
  4094  04B9  1D03               	btfss	3,2
  4095  04BA  2CA6               	goto	l1580
  4096  04BB                     l1588:	
  4097  04BB  0823               	movf	___lwmod@dividend+1,w
  4098  04BC  00A1               	movwf	?___lwmod+1
  4099  04BD  0822               	movf	___lwmod@dividend,w
  4100  04BE  00A0               	movwf	?___lwmod
  4101  04BF  0008               	return
  4102  04C0                     __end_of___lwmod:	
  4103                           
  4104                           	psect	text10
  4105  045F                     __ptext10:	
  4106 ;; *************** function ___lwdiv *****************
  4107 ;; Defined at:
  4108 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  divisor         2    1[COMMON] unsigned int 
  4111 ;;  dividend        2    3[COMMON] unsigned int 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  quotient        2    7[COMMON] unsigned int 
  4114 ;;  counter         1    6[COMMON] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  2    1[COMMON] unsigned int 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4125 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4127 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4128 ;;Total ram usage:        8 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    1
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_printf
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           
  4139                           ;psect for function ___lwdiv
  4140  045F                     ___lwdiv:	
  4141                           
  4142                           ;incstack = 0
  4143                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4144  045F  01F7               	clrf	___lwdiv@quotient
  4145  0460  01F8               	clrf	___lwdiv@quotient+1
  4146  0461  0871               	movf	___lwdiv@divisor,w
  4147  0462  0472               	iorwf	___lwdiv@divisor+1,w
  4148  0463  1903               	btfsc	3,2
  4149  0464  2C8E               	goto	l1566
  4150  0465  01F6               	clrf	___lwdiv@counter
  4151  0466  0AF6               	incf	___lwdiv@counter,f
  4152  0467                     l1554:	
  4153  0467  1BF2               	btfsc	___lwdiv@divisor+1,7
  4154  0468  2C73               	goto	l1556
  4155  0469  3001               	movlw	1
  4156  046A                     u955:	
  4157  046A  35F1               	lslf	___lwdiv@divisor,f
  4158  046B  0DF2               	rlf	___lwdiv@divisor+1,f
  4159  046C  0B89               	decfsz	9,f
  4160  046D  2C6A               	goto	u955
  4161  046E  3001               	movlw	1
  4162  046F  00F5               	movwf	??___lwdiv
  4163  0470  0875               	movf	??___lwdiv,w
  4164  0471  07F6               	addwf	___lwdiv@counter,f
  4165  0472  2C67               	goto	l1554
  4166  0473                     l1556:	
  4167  0473  3001               	movlw	1
  4168  0474                     u975:	
  4169  0474  35F7               	lslf	___lwdiv@quotient,f
  4170  0475  0DF8               	rlf	___lwdiv@quotient+1,f
  4171  0476  0B89               	decfsz	9,f
  4172  0477  2C74               	goto	u975
  4173  0478  0872               	movf	___lwdiv@divisor+1,w
  4174  0479  0274               	subwf	___lwdiv@dividend+1,w
  4175  047A  1D03               	skipz
  4176  047B  2C7E               	goto	u985
  4177  047C  0871               	movf	___lwdiv@divisor,w
  4178  047D  0273               	subwf	___lwdiv@dividend,w
  4179  047E                     u985:	
  4180  047E  1C03               	skipc
  4181  047F  2C85               	goto	l1562
  4182  0480  0871               	movf	___lwdiv@divisor,w
  4183  0481  02F3               	subwf	___lwdiv@dividend,f
  4184  0482  0872               	movf	___lwdiv@divisor+1,w
  4185  0483  3BF4               	subwfb	___lwdiv@dividend+1,f
  4186  0484  1477               	bsf	___lwdiv@quotient,0
  4187  0485                     l1562:	
  4188  0485  3001               	movlw	1
  4189  0486                     u995:	
  4190  0486  36F2               	lsrf	___lwdiv@divisor+1,f
  4191  0487  0CF1               	rrf	___lwdiv@divisor,f
  4192  0488  0B89               	decfsz	9,f
  4193  0489  2C86               	goto	u995
  4194  048A  3001               	movlw	1
  4195  048B  02F6               	subwf	___lwdiv@counter,f
  4196  048C  1D03               	btfss	3,2
  4197  048D  2C73               	goto	l1556
  4198  048E                     l1566:	
  4199  048E  0878               	movf	___lwdiv@quotient+1,w
  4200  048F  00F2               	movwf	?___lwdiv+1
  4201  0490  0877               	movf	___lwdiv@quotient,w
  4202  0491  00F1               	movwf	?___lwdiv
  4203  0492  0008               	return
  4204  0493                     __end_of___lwdiv:	
  4205                           
  4206                           	psect	text11
  4207  0556                     __ptext11:	
  4208 ;; *************** function _flag_array_set_numbers *****************
  4209 ;; Defined at:
  4210 ;;		line 40 in file "flag_array.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  flag_array      1    wreg     PTR struct .
  4213 ;;		 -> test_of_flag_array@array(2), 
  4214 ;;  nbr             1    1[COMMON] unsigned char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  flag_array      1    3[COMMON] PTR struct .
  4217 ;;		 -> test_of_flag_array@array(2), 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		wreg, fsr1l, fsr1h
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4227 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4229 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4230 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4231 ;;Total ram usage:        3 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_test_of_flag_array
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           
  4242                           ;psect for function _flag_array_set_numbers
  4243  0556                     _flag_array_set_numbers:	
  4244                           
  4245                           ;incstack = 0
  4246                           ; Regs used in _flag_array_set_numbers: [wregfsr1]
  4247                           ;flag_array_set_numbers@flag_array stored from wreg
  4248  0556  00F3               	movwf	flag_array_set_numbers@flag_array
  4249                           
  4250                           ;flag_array.c: 46: flag_array->flags_number=nbr;
  4251  0557  0871               	movf	flag_array_set_numbers@nbr,w
  4252  0558  00F2               	movwf	??_flag_array_set_numbers
  4253  0559  0A73               	incf	flag_array_set_numbers@flag_array,w
  4254  055A  0086               	movwf	6
  4255  055B  0187               	clrf	7
  4256  055C  0872               	movf	??_flag_array_set_numbers,w
  4257  055D  0081               	movwf	1
  4258  055E  0008               	return
  4259  055F                     __end_of_flag_array_set_numbers:	
  4260                           
  4261                           	psect	text12
  4262  053C                     __ptext12:	
  4263 ;; *************** function _flag_array_set_flag *****************
  4264 ;; Defined at:
  4265 ;;		line 14 in file "flag_array.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  flag_array      1    wreg     PTR struct .
  4268 ;;		 -> test_of_flag_array@array(2), 
  4269 ;;  state           1    4[COMMON] unsigned char 
  4270 ;;  name            1    5[COMMON] unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  flag_array      1    8[COMMON] PTR struct .
  4273 ;;		 -> test_of_flag_array@array(2), 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4286 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4287 ;;Total ram usage:        5 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    2
  4290 ;; This function calls:
  4291 ;;		_byte_union_set_bit
  4292 ;; This function is called by:
  4293 ;;		_test_of_flag_array
  4294 ;;		_software_timer_set_enable
  4295 ;;		_software_timer_clear_overflow
  4296 ;;		_software_timer_initialize
  4297 ;;		_software_timer_update
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           
  4302                           ;psect for function _flag_array_set_flag
  4303  053C                     _flag_array_set_flag:	
  4304                           
  4305                           ;incstack = 0
  4306                           ; Regs used in _flag_array_set_flag: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4307                           ;flag_array_set_flag@flag_array stored from wreg
  4308  053C  00F8               	movwf	flag_array_set_flag@flag_array
  4309                           
  4310                           ;flag_array.c: 22: byte_union_set_bit(&flag_array->flags,state,name);
  4311  053D  0874               	movf	flag_array_set_flag@state,w
  4312  053E  00F6               	movwf	??_flag_array_set_flag
  4313  053F  0876               	movf	??_flag_array_set_flag,w
  4314  0540  00F1               	movwf	byte_union_set_bit@state
  4315  0541  0875               	movf	flag_array_set_flag@name,w
  4316  0542  00F7               	movwf	??_flag_array_set_flag+1
  4317  0543  0877               	movf	??_flag_array_set_flag+1,w
  4318  0544  00F2               	movwf	byte_union_set_bit@bit_nbr
  4319  0545  0878               	movf	flag_array_set_flag@flag_array,w
  4320  0546  3183  23BB         	fcall	_byte_union_set_bit
  4321  0548  0008               	return
  4322  0549                     __end_of_flag_array_set_flag:	
  4323                           
  4324                           	psect	text13
  4325  03BB                     __ptext13:	
  4326 ;; *************** function _byte_union_set_bit *****************
  4327 ;; Defined at:
  4328 ;;		line 80 in file "byte_union.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  byte_u          1    wreg     PTR struct .
  4331 ;;		 -> test_of_flag_array@array(2), 
  4332 ;;  state           1    1[COMMON] unsigned char 
  4333 ;;  bit_nbr         1    2[COMMON] unsigned char 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  byte_u          1    3[COMMON] PTR struct .
  4336 ;;		 -> test_of_flag_array@array(2), 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4349 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4350 ;;Total ram usage:        3 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    1
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_flag_array_set_flag
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           
  4361                           ;psect for function _byte_union_set_bit
  4362  03BB                     _byte_union_set_bit:	
  4363                           
  4364                           ;incstack = 0
  4365                           ; Regs used in _byte_union_set_bit: [wreg-fsr1h+status,2+status,0]
  4366                           ;byte_union_set_bit@byte_u stored from wreg
  4367  03BB  00F3               	movwf	byte_union_set_bit@byte_u
  4368                           
  4369                           ;byte_union.c: 87: switch(bit_nbr){
  4370  03BC  2C05               	goto	l1312
  4371  03BD                     l1294:	
  4372                           ;byte_union.c: 88: case 0:
  4373                           
  4374                           
  4375                           ;byte_union.c: 89: byte_u->b0=state;
  4376  03BD  0873               	movf	byte_union_set_bit@byte_u,w
  4377  03BE  0086               	movwf	6
  4378  03BF  0187               	clrf	7
  4379  03C0  0871               	movf	byte_union_set_bit@state,w
  4380  03C1  3901               	andlw	1
  4381  03C2  1001               	bcf	1,0
  4382  03C3  1D03               	skipz
  4383  03C4  1401               	bsf	1,0
  4384                           
  4385                           ;byte_union.c: 90: break;
  4386  03C5  0008               	return
  4387  03C6                     l1296:	
  4388                           ;byte_union.c: 91: case 1:
  4389                           
  4390                           
  4391                           ;byte_union.c: 92: byte_u->b1=state;
  4392  03C6  0873               	movf	byte_union_set_bit@byte_u,w
  4393  03C7  0086               	movwf	6
  4394  03C8  0187               	clrf	7
  4395  03C9  0871               	movf	byte_union_set_bit@state,w
  4396  03CA  3901               	andlw	1
  4397  03CB  1081               	bcf	1,1
  4398  03CC  1D03               	skipz
  4399  03CD  1481               	bsf	1,1
  4400                           
  4401                           ;byte_union.c: 93: break;
  4402  03CE  0008               	return
  4403  03CF                     l1298:	
  4404                           ;byte_union.c: 94: case 2:
  4405                           
  4406                           
  4407                           ;byte_union.c: 95: byte_u->b2=state;
  4408  03CF  0873               	movf	byte_union_set_bit@byte_u,w
  4409  03D0  0086               	movwf	6
  4410  03D1  0187               	clrf	7
  4411  03D2  0871               	movf	byte_union_set_bit@state,w
  4412  03D3  3901               	andlw	1
  4413  03D4  1101               	bcf	1,2
  4414  03D5  1D03               	skipz
  4415  03D6  1501               	bsf	1,2
  4416                           
  4417                           ;byte_union.c: 96: break;
  4418  03D7  0008               	return
  4419  03D8                     l1300:	
  4420                           ;byte_union.c: 97: case 3:
  4421                           
  4422                           
  4423                           ;byte_union.c: 98: byte_u->b3=state;
  4424  03D8  0873               	movf	byte_union_set_bit@byte_u,w
  4425  03D9  0086               	movwf	6
  4426  03DA  0187               	clrf	7
  4427  03DB  0871               	movf	byte_union_set_bit@state,w
  4428  03DC  3901               	andlw	1
  4429  03DD  1181               	bcf	1,3
  4430  03DE  1D03               	skipz
  4431  03DF  1581               	bsf	1,3
  4432                           
  4433                           ;byte_union.c: 99: break;
  4434  03E0  0008               	return
  4435  03E1                     l1302:	
  4436                           ;byte_union.c: 100: case 4:
  4437                           
  4438                           
  4439                           ;byte_union.c: 101: byte_u->b4=state;
  4440  03E1  0873               	movf	byte_union_set_bit@byte_u,w
  4441  03E2  0086               	movwf	6
  4442  03E3  0187               	clrf	7
  4443  03E4  0871               	movf	byte_union_set_bit@state,w
  4444  03E5  3901               	andlw	1
  4445  03E6  1201               	bcf	1,4
  4446  03E7  1D03               	skipz
  4447  03E8  1601               	bsf	1,4
  4448                           
  4449                           ;byte_union.c: 102: break;
  4450  03E9  0008               	return
  4451  03EA                     l1304:	
  4452                           ;byte_union.c: 103: case 5:
  4453                           
  4454                           
  4455                           ;byte_union.c: 104: byte_u->b5=state;
  4456  03EA  0873               	movf	byte_union_set_bit@byte_u,w
  4457  03EB  0086               	movwf	6
  4458  03EC  0187               	clrf	7
  4459  03ED  0871               	movf	byte_union_set_bit@state,w
  4460  03EE  3901               	andlw	1
  4461  03EF  1281               	bcf	1,5
  4462  03F0  1D03               	skipz
  4463  03F1  1681               	bsf	1,5
  4464                           
  4465                           ;byte_union.c: 105: break;
  4466  03F2  0008               	return
  4467  03F3                     l1306:	
  4468                           ;byte_union.c: 106: case 6:
  4469                           
  4470                           
  4471                           ;byte_union.c: 107: byte_u->b6=state;
  4472  03F3  0873               	movf	byte_union_set_bit@byte_u,w
  4473  03F4  0086               	movwf	6
  4474  03F5  0187               	clrf	7
  4475  03F6  0871               	movf	byte_union_set_bit@state,w
  4476  03F7  3901               	andlw	1
  4477  03F8  1301               	bcf	1,6
  4478  03F9  1D03               	skipz
  4479  03FA  1701               	bsf	1,6
  4480                           
  4481                           ;byte_union.c: 108: break;
  4482  03FB  0008               	return
  4483  03FC                     l1308:	
  4484                           ;byte_union.c: 109: case 7:
  4485                           
  4486                           
  4487                           ;byte_union.c: 110: byte_u->b7=state;
  4488  03FC  0873               	movf	byte_union_set_bit@byte_u,w
  4489  03FD  0086               	movwf	6
  4490  03FE  0187               	clrf	7
  4491  03FF  0871               	movf	byte_union_set_bit@state,w
  4492  0400  3901               	andlw	1
  4493  0401  1381               	bcf	1,7
  4494  0402  1D03               	skipz
  4495  0403  1781               	bsf	1,7
  4496                           
  4497                           ;byte_union.c: 112: }
  4498                           
  4499                           ;byte_union.c: 111: break;
  4500  0404  0008               	return
  4501  0405                     l1312:	
  4502  0405  0872               	movf	byte_union_set_bit@bit_nbr,w
  4503                           
  4504                           ; Switch size 1, requested type "space"
  4505                           ; Number of cases is 8, Range of values is 0 to 7
  4506                           ; switch strategies available:
  4507                           ; Name         Instructions Cycles
  4508                           ; direct_byte           22     6 (fixed)
  4509                           ; simple_byte           25    13 (average)
  4510                           ; jumptable            260     6 (fixed)
  4511                           ;	Chosen strategy is direct_byte
  4512  0406  0084               	movwf	4
  4513  0407  3008               	movlw	8
  4514  0408  0204               	subwf	4,w
  4515  0409  1803               	skipnc
  4516  040A  0008               	return
  4517  040B  3185               	movlp	high S1788
  4518  040C  3504               	lslf	4,w
  4519  040D  3E00               	addlw	low S1788
  4520  040E  0082               	movwf	2
  4521  040F  0008               	return
  4522  0410                     __end_of_byte_union_set_bit:	
  4523                           
  4524                           	psect	swtext1
  4525  0500                     __pswtext1:	
  4526  0500                     S1788:	
  4527  0500  3183  2BBD         	ljmp	l1294
  4528  0502  3183  2BC6         	ljmp	l1296
  4529  0504  3183  2BCF         	ljmp	l1298
  4530  0506  3183  2BD8         	ljmp	l1300
  4531  0508  3183  2BE1         	ljmp	l1302
  4532  050A  3183  2BEA         	ljmp	l1304
  4533  050C  3183  2BF3         	ljmp	l1306
  4534  050E  3183  2BFC         	ljmp	l1308
  4535                           
  4536                           	psect	text14
  4537  055F                     __ptext14:	
  4538 ;; *************** function _flag_array_initialise *****************
  4539 ;; Defined at:
  4540 ;;		line 28 in file "flag_array.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  flag_array      1    wreg     PTR struct .
  4543 ;;		 -> test_of_flag_array@array(2), 
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  flag_array      1    9[COMMON] PTR struct .
  4546 ;;		 -> test_of_flag_array@array(2), 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;Total ram usage:        1 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    4
  4563 ;; This function calls:
  4564 ;;		_byte_union_initialize
  4565 ;; This function is called by:
  4566 ;;		_test_of_flag_array
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function _flag_array_initialise
  4572  055F                     _flag_array_initialise:	
  4573                           
  4574                           ;incstack = 0
  4575                           ; Regs used in _flag_array_initialise: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4576                           ;flag_array_initialise@flag_array stored from wreg
  4577  055F  00F9               	movwf	flag_array_initialise@flag_array
  4578                           
  4579                           ;flag_array.c: 33: byte_union_initialize(&flag_array->flags);
  4580  0560  0879               	movf	flag_array_initialise@flag_array,w
  4581  0561  3185  257D         	fcall	_byte_union_initialize
  4582                           
  4583                           ;flag_array.c: 34: flag_array->flags_number=0;
  4584  0563  0A79               	incf	flag_array_initialise@flag_array,w
  4585  0564  0086               	movwf	6
  4586  0565  0187               	clrf	7
  4587  0566  0181               	clrf	1
  4588  0567  0008               	return
  4589  0568                     __end_of_flag_array_initialise:	
  4590                           
  4591                           	psect	text15
  4592  057D                     __ptext15:	
  4593 ;; *************** function _byte_union_initialize *****************
  4594 ;; Defined at:
  4595 ;;		line 115 in file "byte_union.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  byte_u          1    wreg     PTR struct .
  4598 ;;		 -> test_of_flag_array@array(2), 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  byte_u          1    8[COMMON] PTR struct .
  4601 ;;		 -> test_of_flag_array@array(2), 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;Total ram usage:        1 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:    3
  4618 ;; This function calls:
  4619 ;;		_byte_union_set_byte
  4620 ;; This function is called by:
  4621 ;;		_flag_array_initialise
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           
  4626                           ;psect for function _byte_union_initialize
  4627  057D                     _byte_union_initialize:	
  4628                           
  4629                           ;incstack = 0
  4630                           ; Regs used in _byte_union_initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  4631                           ;byte_union_initialize@byte_u stored from wreg
  4632  057D  00F8               	movwf	byte_union_initialize@byte_u
  4633                           
  4634                           ;byte_union.c: 120: byte_union_set_byte(byte_u,0);
  4635  057E  01F4               	clrf	byte_union_set_byte@val
  4636  057F  0878               	movf	byte_union_initialize@byte_u,w
  4637  0580  3185  2520         	fcall	_byte_union_set_byte
  4638  0582  0008               	return
  4639  0583                     __end_of_byte_union_initialize:	
  4640                           
  4641                           	psect	text16
  4642  0520                     __ptext16:	
  4643 ;; *************** function _byte_union_set_byte *****************
  4644 ;; Defined at:
  4645 ;;		line 68 in file "byte_union.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  byte_u          1    wreg     PTR struct .
  4648 ;;		 -> test_of_flag_array@array(2), 
  4649 ;;  val             1    4[COMMON] unsigned char 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  byte_u          1    7[COMMON] PTR struct .
  4652 ;;		 -> test_of_flag_array@array(2), 
  4653 ;;  ptb             1    6[COMMON] PTR unsigned char 
  4654 ;;		 -> test_of_flag_array@array(2), byte_union_get_byte@byte_u(1), 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr1l, fsr1h, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4664 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4667 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;Total ram usage:        4 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    2
  4671 ;; This function calls:
  4672 ;;		_byte_union_get_byte
  4673 ;; This function is called by:
  4674 ;;		_byte_union_initialize
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function _byte_union_set_byte
  4680  0520                     _byte_union_set_byte:	
  4681                           
  4682                           ;incstack = 0
  4683                           ; Regs used in _byte_union_set_byte: [wreg+fsr1l+fsr1h+pclath+cstack]
  4684                           ;byte_union_set_byte@byte_u stored from wreg
  4685  0520  00F7               	movwf	byte_union_set_byte@byte_u
  4686                           
  4687                           ;byte_union.c: 73: unsigned char *ptb=byte_union_get_byte(byte_u);
  4688  0521  0877               	movf	byte_union_set_byte@byte_u,w
  4689  0522  3185  2570         	fcall	_byte_union_get_byte
  4690  0524  00F5               	movwf	??_byte_union_set_byte
  4691  0525  0875               	movf	??_byte_union_set_byte,w
  4692  0526  00F6               	movwf	byte_union_set_byte@ptb
  4693                           
  4694                           ;byte_union.c: 77: *ptb=val;
  4695  0527  0874               	movf	byte_union_set_byte@val,w
  4696  0528  00F5               	movwf	??_byte_union_set_byte
  4697  0529  0876               	movf	byte_union_set_byte@ptb,w
  4698  052A  0086               	movwf	6
  4699  052B  0187               	clrf	7
  4700  052C  0875               	movf	??_byte_union_set_byte,w
  4701  052D  0081               	movwf	1
  4702  052E  0008               	return
  4703  052F                     __end_of_byte_union_set_byte:	
  4704                           
  4705                           	psect	text17
  4706  0570                     __ptext17:	
  4707 ;; *************** function _byte_union_get_byte *****************
  4708 ;; Defined at:
  4709 ;;		line 43 in file "byte_union.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  byte_u          1    wreg     PTR struct .
  4712 ;;		 -> test_of_flag_array@array(2), 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  byte_u          1    3[COMMON] PTR struct .
  4715 ;;		 -> test_of_flag_array@array(2), 
  4716 ;;  ptb             1    2[COMMON] PTR unsigned char 
  4717 ;;		 -> test_of_flag_array@array(2), byte_union_get_byte@byte_u(1), 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      PTR unsigned char 
  4720 ;; Registers used:
  4721 ;;		wreg
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;Total ram usage:        3 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    1
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_byte_union_set_byte
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _byte_union_get_byte
  4743  0570                     _byte_union_get_byte:	
  4744                           
  4745                           ;incstack = 0
  4746                           ; Regs used in _byte_union_get_byte: [wreg]
  4747                           ;byte_union_get_byte@byte_u stored from wreg
  4748  0570  00F3               	movwf	byte_union_get_byte@byte_u
  4749                           
  4750                           ;byte_union.c: 48: unsigned char *ptb=&byte_u->byte;
  4751  0571  0873               	movf	byte_union_get_byte@byte_u,w
  4752  0572  00F1               	movwf	??_byte_union_get_byte
  4753  0573  0871               	movf	??_byte_union_get_byte,w
  4754  0574  00F2               	movwf	byte_union_get_byte@ptb
  4755                           
  4756                           ;byte_union.c: 52: return ptb;
  4757  0575  0872               	movf	byte_union_get_byte@ptb,w
  4758  0576  0008               	return
  4759  0577                     __end_of_byte_union_get_byte:	
  4760                           
  4761                           	psect	text18
  4762  0549                     __ptext18:	
  4763 ;; *************** function _flag_array_get_flag_state *****************
  4764 ;; Defined at:
  4765 ;;		line 52 in file "flag_array.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  flag_array      1    wreg     PTR const struct .
  4768 ;;		 -> test_of_flag_array@array(2), 
  4769 ;;  name            1    4[COMMON] unsigned char 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  flag_array      1    8[COMMON] PTR const struct .
  4772 ;;		 -> test_of_flag_array@array(2), 
  4773 ;;  val             1    7[COMMON] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      unsigned char 
  4776 ;; Registers used:
  4777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4783 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4786 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4787 ;;Total ram usage:        5 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    2
  4790 ;; This function calls:
  4791 ;;		_byte_union_get_bit_value
  4792 ;; This function is called by:
  4793 ;;		_test_of_flag_array
  4794 ;;		_software_timer_get_enable_value
  4795 ;;		_software_timer_get_overflow_value
  4796 ;;		_software_timer_update
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function _flag_array_get_flag_state
  4802  0549                     _flag_array_get_flag_state:	
  4803                           
  4804                           ;incstack = 0
  4805                           ; Regs used in _flag_array_get_flag_state: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4806                           ;flag_array_get_flag_state@flag_array stored from wreg
  4807  0549  00F8               	movwf	flag_array_get_flag_state@flag_array
  4808                           
  4809                           ;flag_array.c: 59: unsigned char val=byte_union_get_bit_value(&flag_array->flags,name);
  4810  054A  0874               	movf	flag_array_get_flag_state@name,w
  4811  054B  00F5               	movwf	??_flag_array_get_flag_state
  4812  054C  0875               	movf	??_flag_array_get_flag_state,w
  4813  054D  00F1               	movwf	byte_union_get_bit_value@bit_nbr
  4814  054E  0878               	movf	flag_array_get_flag_state@flag_array,w
  4815  054F  3184  2410         	fcall	_byte_union_get_bit_value
  4816  0551  00F6               	movwf	??_flag_array_get_flag_state+1
  4817  0552  0876               	movf	??_flag_array_get_flag_state+1,w
  4818  0553  00F7               	movwf	flag_array_get_flag_state@val
  4819                           
  4820                           ;flag_array.c: 63: return val;
  4821  0554  0877               	movf	flag_array_get_flag_state@val,w
  4822  0555  0008               	return
  4823  0556                     __end_of_flag_array_get_flag_state:	
  4824                           
  4825                           	psect	text19
  4826  0410                     __ptext19:	
  4827 ;; *************** function _byte_union_get_bit_value *****************
  4828 ;; Defined at:
  4829 ;;		line 4 in file "byte_union.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  byte_u          1    wreg     PTR const struct .
  4832 ;;		 -> test_of_flag_array@array(2), 
  4833 ;;  bit_nbr         1    1[COMMON] unsigned char 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  byte_u          1    3[COMMON] PTR const struct .
  4836 ;;		 -> test_of_flag_array@array(2), 
  4837 ;;  val             1    2[COMMON] unsigned char 
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  1    wreg      unsigned char 
  4840 ;; Registers used:
  4841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4847 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4850 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4851 ;;Total ram usage:        3 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; Hardware stack levels required when called:    1
  4854 ;; This function calls:
  4855 ;;		Nothing
  4856 ;; This function is called by:
  4857 ;;		_flag_array_get_flag_state
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           
  4862                           ;psect for function _byte_union_get_bit_value
  4863  0410                     _byte_union_get_bit_value:	
  4864                           
  4865                           ;incstack = 0
  4866                           ; Regs used in _byte_union_get_bit_value: [wreg-fsr1h+status,2+status,0]
  4867                           ;byte_union_get_bit_value@byte_u stored from wreg
  4868  0410  00F3               	movwf	byte_union_get_bit_value@byte_u
  4869                           
  4870                           ;byte_union.c: 10: unsigned char val=0;
  4871  0411  01F2               	clrf	byte_union_get_bit_value@val
  4872                           
  4873                           ;byte_union.c: 11: switch(bit_nbr){
  4874  0412  2C53               	goto	l1282
  4875  0413                     l1264:	
  4876                           ;byte_union.c: 12: case 0:
  4877                           
  4878                           
  4879                           ;byte_union.c: 13: val=byte_u->b0;
  4880  0413  0873               	movf	byte_union_get_bit_value@byte_u,w
  4881  0414  0086               	movwf	6
  4882  0415  0187               	clrf	7
  4883  0416  3000               	movlw	0
  4884  0417  1801               	btfsc	1,0
  4885  0418  3001               	movlw	1
  4886  0419  00F2               	movwf	byte_union_get_bit_value@val
  4887                           
  4888                           ;byte_union.c: 14: break;
  4889  041A  2C5D               	goto	l1284
  4890  041B                     l1266:	
  4891                           ;byte_union.c: 15: case 1:
  4892                           
  4893                           
  4894                           ;byte_union.c: 16: val=byte_u->b1;
  4895  041B  0873               	movf	byte_union_get_bit_value@byte_u,w
  4896  041C  0086               	movwf	6
  4897  041D  0187               	clrf	7
  4898  041E  3000               	movlw	0
  4899  041F  1881               	btfsc	1,1
  4900  0420  3001               	movlw	1
  4901  0421  00F2               	movwf	byte_union_get_bit_value@val
  4902                           
  4903                           ;byte_union.c: 17: break;
  4904  0422  2C5D               	goto	l1284
  4905  0423                     l1268:	
  4906                           ;byte_union.c: 18: case 2:
  4907                           
  4908                           
  4909                           ;byte_union.c: 19: val=byte_u->b2;
  4910  0423  0873               	movf	byte_union_get_bit_value@byte_u,w
  4911  0424  0086               	movwf	6
  4912  0425  0187               	clrf	7
  4913  0426  3000               	movlw	0
  4914  0427  1901               	btfsc	1,2
  4915  0428  3001               	movlw	1
  4916  0429  00F2               	movwf	byte_union_get_bit_value@val
  4917                           
  4918                           ;byte_union.c: 20: break;
  4919  042A  2C5D               	goto	l1284
  4920  042B                     l1270:	
  4921                           ;byte_union.c: 21: case 3:
  4922                           
  4923                           
  4924                           ;byte_union.c: 22: val=byte_u->b3;
  4925  042B  0873               	movf	byte_union_get_bit_value@byte_u,w
  4926  042C  0086               	movwf	6
  4927  042D  0187               	clrf	7
  4928  042E  3000               	movlw	0
  4929  042F  1981               	btfsc	1,3
  4930  0430  3001               	movlw	1
  4931  0431  00F2               	movwf	byte_union_get_bit_value@val
  4932                           
  4933                           ;byte_union.c: 23: break;
  4934  0432  2C5D               	goto	l1284
  4935  0433                     l1272:	
  4936                           ;byte_union.c: 24: case 4:
  4937                           
  4938                           
  4939                           ;byte_union.c: 25: val=byte_u->b4;
  4940  0433  0873               	movf	byte_union_get_bit_value@byte_u,w
  4941  0434  0086               	movwf	6
  4942  0435  0187               	clrf	7
  4943  0436  3000               	movlw	0
  4944  0437  1A01               	btfsc	1,4
  4945  0438  3001               	movlw	1
  4946  0439  00F2               	movwf	byte_union_get_bit_value@val
  4947                           
  4948                           ;byte_union.c: 26: break;
  4949  043A  2C5D               	goto	l1284
  4950  043B                     l1274:	
  4951                           ;byte_union.c: 27: case 5:
  4952                           
  4953                           
  4954                           ;byte_union.c: 28: val=byte_u->b5;
  4955  043B  0873               	movf	byte_union_get_bit_value@byte_u,w
  4956  043C  0086               	movwf	6
  4957  043D  0187               	clrf	7
  4958  043E  3000               	movlw	0
  4959  043F  1A81               	btfsc	1,5
  4960  0440  3001               	movlw	1
  4961  0441  00F2               	movwf	byte_union_get_bit_value@val
  4962                           
  4963                           ;byte_union.c: 29: break;
  4964  0442  2C5D               	goto	l1284
  4965  0443                     l1276:	
  4966                           ;byte_union.c: 30: case 6:
  4967                           
  4968                           
  4969                           ;byte_union.c: 31: val=byte_u->b6;
  4970  0443  0873               	movf	byte_union_get_bit_value@byte_u,w
  4971  0444  0086               	movwf	6
  4972  0445  0187               	clrf	7
  4973  0446  3000               	movlw	0
  4974  0447  1B01               	btfsc	1,6
  4975  0448  3001               	movlw	1
  4976  0449  00F2               	movwf	byte_union_get_bit_value@val
  4977                           
  4978                           ;byte_union.c: 32: break;
  4979  044A  2C5D               	goto	l1284
  4980  044B                     l1278:	
  4981                           ;byte_union.c: 33: case 7:
  4982                           
  4983                           
  4984                           ;byte_union.c: 34: val=byte_u->b7;
  4985  044B  0873               	movf	byte_union_get_bit_value@byte_u,w
  4986  044C  0086               	movwf	6
  4987  044D  0187               	clrf	7
  4988  044E  3000               	movlw	0
  4989  044F  1B81               	btfsc	1,7
  4990  0450  3001               	movlw	1
  4991  0451  00F2               	movwf	byte_union_get_bit_value@val
  4992                           
  4993                           ;byte_union.c: 36: }
  4994                           
  4995                           ;byte_union.c: 35: break;
  4996  0452  2C5D               	goto	l1284
  4997  0453                     l1282:	
  4998  0453  0871               	movf	byte_union_get_bit_value@bit_nbr,w
  4999                           
  5000                           ; Switch size 1, requested type "space"
  5001                           ; Number of cases is 8, Range of values is 0 to 7
  5002                           ; switch strategies available:
  5003                           ; Name         Instructions Cycles
  5004                           ; direct_byte           22     6 (fixed)
  5005                           ; simple_byte           25    13 (average)
  5006                           ; jumptable            260     6 (fixed)
  5007                           ;	Chosen strategy is direct_byte
  5008  0454  0084               	movwf	4
  5009  0455  3008               	movlw	8
  5010  0456  0204               	subwf	4,w
  5011  0457  1803               	skipnc
  5012  0458  2C5D               	goto	l1284
  5013  0459  3185               	movlp	high S1790
  5014  045A  3504               	lslf	4,w
  5015  045B  3E10               	addlw	low S1790
  5016  045C  0082               	movwf	2
  5017  045D                     l1284:	
  5018                           
  5019                           ;byte_union.c: 40: return val;
  5020  045D  0872               	movf	byte_union_get_bit_value@val,w
  5021  045E  0008               	return
  5022  045F                     __end_of_byte_union_get_bit_value:	
  5023                           
  5024                           	psect	swtext2
  5025  0510                     __pswtext2:	
  5026  0510                     S1790:	
  5027  0510  3184  2C13         	ljmp	l1264
  5028  0512  3184  2C1B         	ljmp	l1266
  5029  0514  3184  2C23         	ljmp	l1268
  5030  0516  3184  2C2B         	ljmp	l1270
  5031  0518  3184  2C33         	ljmp	l1272
  5032  051A  3184  2C3B         	ljmp	l1274
  5033  051C  3184  2C43         	ljmp	l1276
  5034  051E  3184  2C4B         	ljmp	l1278
  5035                           
  5036                           	psect	intentry
  5037  0004                     __pintentry:	
  5038 ;; *************** function _input_interrupt_function *****************
  5039 ;; Defined at:
  5040 ;;		line 67 in file "input.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  1    wreg      void 
  5047 ;; Registers used:
  5048 ;;		None
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;Total ram usage:        1 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		Interrupt level 1
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067  0004                     _input_interrupt_function:	
  5068                           
  5069                           ;incstack = 0
  5070                           ; Regs used in _input_interrupt_function: []
  5071  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5072  0005  3180               	pagesel	$
  5073  0006  0020               	movlb	0	; select bank0
  5074  0007  087F               	movf	127,w
  5075  0008  00F0               	movwf	??_input_interrupt_function
  5076  0009  0870               	movf	??_input_interrupt_function,w
  5077  000A  00FF               	movwf	127
  5078  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5079  000C  0009               	retfie
  5080  000D                     __end_of_input_interrupt_function:	
  5081  007E                     btemp	set	126	;btemp
  5082  007E                     int$flags	set	126
  5083  007E                     wtemp	set	126
  5084  007E                     wtemp0	set	126
  5085  0080                     wtemp1	set	128
  5086  0082                     wtemp2	set	130
  5087  0084                     wtemp3	set	132
  5088  0086                     wtemp4	set	134
  5089  0088                     wtemp5	set	136
  5090  007F                     wtemp6	set	127
  5091  007E                     ttemp	set	126
  5092  007E                     ttemp0	set	126
  5093  0081                     ttemp1	set	129
  5094  0084                     ttemp2	set	132
  5095  0087                     ttemp3	set	135
  5096  007F                     ttemp4	set	127
  5097  007E                     ltemp	set	126
  5098  007E                     ltemp0	set	126
  5099  0082                     ltemp1	set	130
  5100  0086                     ltemp2	set	134
  5101  0080                     ltemp3	set	128


Data Sizes:
    Strings     444
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     36      36
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    software_timer_clear$0	PTR struct . size(1) Largest target is 0

    _fassert@exp	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[11]), STR_2(CODE[16]), 

    _fassert@file	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), STR_1(CODE[13]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_21(CODE[36]), STR_19(CODE[30]), STR_18(CODE[35]), STR_17(CODE[24]), 
		 -> STR_16(CODE[29]), STR_15(CODE[27]), STR_14(CODE[32]), STR_13(CODE[21]), 
		 -> STR_12(CODE[26]), STR_11(CODE[26]), STR_10(CODE[31]), STR_9(CODE[7]), 
		 -> STR_8(CODE[9]), STR_7(CODE[11]), STR_6(CODE[11]), STR_5(CODE[25]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_20(CODE[7]), STR_4(CODE[11]), STR_3(CODE[17]), STR_2(CODE[16]), 
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    flag_array_get_flag_state@flag_array	PTR const struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    flag_array_set_numbers@flag_array	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    flag_array_initialise@flag_array	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    flag_array_set_flag@flag_array	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    flag_array_valid@flag_array	PTR const struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    byte_union_initialize@byte_u	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    byte_union_set_bit@byte_u	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    byte_union_set_byte@byte_u	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    byte_union_set_byte@ptb	PTR unsigned char  size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), byte_union_get_byte@byte_u(COMMON[1]), 

    sp__byte_union_get_byte_info	PTR const unsigned char  size(1) Largest target is 2
		 -> byte_union_get_byte_info@byte_u(COMMON[1]), 

    sp__byte_union_get_byte	PTR unsigned char  size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), byte_union_get_byte@byte_u(COMMON[1]), 

    byte_union_get_byte@byte_u	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    byte_union_get_byte@ptb	PTR unsigned char  size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), byte_union_get_byte@byte_u(COMMON[1]), 

    byte_union_get_bit_value@byte_u	PTR const struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 


Critical Paths under _main in COMMON

    _test_function->_test_of_time_type
    _test_of_flag_array->_flag_array_valid
    _printf->___lwmod
    ___lwmod->___lwdiv
    _flag_array_set_flag->_byte_union_set_bit
    _flag_array_initialise->_byte_union_initialize
    _byte_union_initialize->_byte_union_set_byte
    _byte_union_set_byte->_byte_union_get_byte
    _flag_array_get_flag_state->_byte_union_get_bit_value

Critical Paths under _input_interrupt_function in COMMON

    None.

Critical Paths under _main in BANK0

    _test_function->_test_of_flag_array
    _test_of_time_type->_printf
    _test_of_flag_array->_flag_array_valid
    _flag_array_valid->__fassert
    __fassert->_printf
    _printf->___lwmod

Critical Paths under _input_interrupt_function in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _input_interrupt_function in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _input_interrupt_function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _input_interrupt_function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _input_interrupt_function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _input_interrupt_function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _input_interrupt_function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _input_interrupt_function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _input_interrupt_function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _input_interrupt_function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _input_interrupt_function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _input_interrupt_function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _input_interrupt_function in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   14831
                      _test_function
 ---------------------------------------------------------------------------------
 (1) _test_function                                        0     0      0   14831
                 _test_of_flag_array
                  _test_of_time_type
 ---------------------------------------------------------------------------------
 (2) _test_of_time_type                                    4     4      0    3540
                                             11 COMMON     1     1      0
                                             24 BANK0      3     3      0
                             _printf
                    _time_type_valid
 ---------------------------------------------------------------------------------
 (3) _time_type_valid                                      4     1      3      22
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _test_of_flag_array                                   3     3      0   11291
                                             33 BANK0      3     3      0
          _flag_array_get_flag_state
              _flag_array_initialise
                _flag_array_set_flag
             _flag_array_set_numbers
                   _flag_array_valid
                             _printf
 ---------------------------------------------------------------------------------
 (3) _flag_array_valid                                     4     1      3    4179
                                             11 COMMON     1     1      0
                                             30 BANK0      3     0      3
                           __fassert
 ---------------------------------------------------------------------------------
 (4) __fassert                                             6     0      6    4000
                                             24 BANK0      6     0      6
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              26    18      8    3283
                                              4 BANK0     20    12      8
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     440
                                              9 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     449
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _flag_array_set_numbers                               3     2      1     169
                                              1 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _flag_array_set_flag                                  5     3      2    1938
                                              4 COMMON     5     3      2
                 _byte_union_set_bit
 ---------------------------------------------------------------------------------
 (4) _byte_union_set_bit                                   3     1      2     588
                                              1 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _flag_array_initialise                                1     1      0     413
                                              9 COMMON     1     1      0
              _byte_union_initialize
 ---------------------------------------------------------------------------------
 (4) _byte_union_initialize                                1     1      0     333
                                              8 COMMON     1     1      0
                _byte_union_set_byte
 ---------------------------------------------------------------------------------
 (5) _byte_union_set_byte                                  4     3      1     275
                                              4 COMMON     4     3      1
                _byte_union_get_byte
 ---------------------------------------------------------------------------------
 (6) _byte_union_get_byte                                  3     3      0      83
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _flag_array_get_flag_state                            5     4      1     921
                                              4 COMMON     5     4      1
           _byte_union_get_bit_value
 ---------------------------------------------------------------------------------
 (4) _byte_union_get_bit_value                             3     2      1     354
                                              1 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _input_interrupt_function                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _test_function
     _test_of_flag_array
       _flag_array_get_flag_state
         _byte_union_get_bit_value
       _flag_array_initialise
         _byte_union_initialize
           _byte_union_set_byte
             _byte_union_get_byte
       _flag_array_set_flag
         _byte_union_set_bit
       _flag_array_set_numbers
       _flag_array_valid
         __fassert
           _printf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _putch
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
     _test_of_time_type
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
       _time_type_valid

 _input_interrupt_function (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      24       5       45.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      31      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      31      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Feb 21 16:55:55 2016

                                  pc 0002                          __CFG_CP$OFF 0000  
            flag_array_set_flag@name 0075               ?_flag_array_initialise 0070  
                        __CFG_LVP$ON 0000                                  l202 0569  
                                l175 02DA                                  l176 02F7  
                                l249 02BD                                  l177 0314  
                                l178 032D                                  _RB6 006E  
                       __CFG_CPD$OFF 0000                                  u955 046A  
                                u975 0474                                  u985 047E  
                                u995 0486             flag_array_set_flag@state 0074  
                                wreg 0009                                 S1790 0510  
                               S1788 0500           __end_of_test_of_flag_array 034A  
                               l1300 03D8                                 l1302 03E1  
                               l1304 03EA                                 l1312 0405  
                               l1306 03F3                                 l1308 03FC  
                               l1270 042B                                 l1272 0433  
                               l1264 0413                                 l1600 01FE  
                               l1328 0539                                 l1274 043B  
                               l1266 041B                                 l1282 0453  
                               l1276 0443                                 l1268 0423  
                               l1284 045D                                 l1612 0211  
                               l1278 044B                                 l1294 03BD  
                               l1702 03B5                                 l1296 03C6  
                               l1640 027B                                 l1616 0226  
                               l1298 03CF                                 l1562 0485  
                               l1554 0467                                 l1650 0288  
                               l1634 025C                                 l1618 0240  
                               l1556 0473                                 l1580 04A6  
                               l1644 0283                                 l1628 0256  
                               l1652 01DF                                 l1660 04D4  
                               l1566 048E                                 l1584 04B2  
                               l1578 049A                                 l1666 04DF  
                               l1690 038C                                 l1588 04BB  
                               l1684 0377                                 l1598 01FB  
                               l1678 0364                                 STR_1 0195  
                               STR_2 0185                                 STR_3 0174  
                               STR_4 01B8                                 STR_5 012E  
                               STR_6 01A2                                 STR_7 01AD  
                               STR_8 01C3                                 STR_9 01D3  
                               u1025 049D                                 u1045 04AC  
                               u1125 0271                                 u1055 04B3  
                               u1225 039E                                 _SPEN 0CEF  
                               _TXEN 0CF5                                 _TXIF 008C  
                               _SYNC 0CF4                         __CFG_WRT$OFF 0000  
                               _main 0583                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
           __size_of_time_type_valid 000D                                 ltemp 007E  
                      __CFG_BORV$LOW 0000                                 start 000D  
                               ttemp 007E                                 wtemp 007E  
                      __CFG_MCLRE$ON 0000            __size_of_flag_array_valid 0025  
                              ?_main 0070                                STR_10 0085  
                              STR_11 00FA                                STR_20 01CC  
                              STR_12 0114                                STR_13 015F  
                              STR_21 001E                                STR_14 0065  
                              STR_15 00DF                                STR_16 00C2  
                              STR_17 0147                        __CFG_WDTE$OFF 0000  
                              STR_18 0042                                STR_19 00A4  
                     __CFG_DEBUG$OFF 0000                      __end_of___lwdiv 0493  
                    __end_of___lwmod 04C0                                _PORTA 000C  
                              _PORTB 000D                                _PORTC 000E  
    flag_array_initialise@flag_array 0079                                _TXREG 019A  
                     __CFG_FCMEN$OFF 0000             byte_union_set_bit@byte_u 0073  
                    __end_of_dpowers 001E   __size_of_flag_array_get_flag_state 000D  
                              _putch 0568                      ??_test_function 007C  
                     __CFG_BOREN$OFF 0000                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
         __end_of_byte_union_set_bit 0410                       __CFG_CSWEN$OFF 0000  
                    __initialization 000F              ?_flag_array_set_numbers 0071  
                       __end_of_main 0587                         __fassert@exp 003C  
                             ??_main 007C                               ?_putch 0070  
  __end_of_flag_array_get_flag_state 0556                     __end_of__fassert 04FB  
                     __CFG_PWRTE$OFF 0000             _byte_union_get_bit_value 0410  
     __end_of_flag_array_set_numbers 055F                    ??_time_type_valid 0074  
                     __CFG_STVREN$ON 0000        flag_array_get_flag_state@name 0074  
                          ??___lwdiv 0075                            ??___lwmod 0079  
                             _printf 01DA                  _flag_array_set_flag 053C  
        __end_of_byte_union_get_byte 0577              __end_of__initialization 0010  
                    __CFG_FEXTOSC$LP 0000       byte_union_get_bit_value@byte_u 0073  
        __end_of_byte_union_set_byte 052F                 ?_flag_array_set_flag 0074  
flag_array_get_flag_state@flag_array 0078              ??_flag_array_initialise 0079  
                     __pcstackCOMMON 0070                     _flag_array_valid 04C0  
                      __end_of_putch 0570                        __fassert@file 003A  
                      __fassert@line 0038                              ??_putch 0071  
         flag_array_valid@flag_array 007B                ??_flag_array_set_flag 0076  
              _byte_union_initialize 057D                   _test_of_flag_array 02BE  
                         __pmaintext 0583                      __CFG_PPS1WAY$ON 0000  
                         __pintentry 0004                  ?_test_of_flag_array 0070  
                            ?_printf 0024             _input_interrupt_function 0004  
                          ?__fassert 0038                 ??_test_of_flag_array 0041  
             byte_union_get_byte@ptb 0072                              ___lwdiv 045F  
                 _interrupt_variable 007C                              ___lwmod 0493  
                            __ptext1 0577                              __ptext2 034A  
                            __ptext3 052F                              __ptext4 02BE  
                            __ptext5 04C0                              __ptext6 04E5  
                            __ptext7 01DA                              __ptext8 0568  
                            __ptext9 0493                      __size_of_printf 00E4  
                         ??__fassert 007B                   _byte_union_set_bit 03BB  
                            _dpowers 0014                  ?_byte_union_set_bit 0071  
         ??_byte_union_get_bit_value 0072                 end_of_initialization 0010  
                    _time_type_valid 052F                __end_of_test_function 057D  
             ?_byte_union_initialize 0070                              printf@c 0037  
                            printf@f 0024                 ??_byte_union_set_bit 0073  
                       __pstringtext 0014      byte_union_get_bit_value@bit_nbr 0071  
           __end_of_flag_array_valid 04E5           ?_flag_array_get_flag_state 0074  
      flag_array_set_flag@flag_array 0078       __size_of_flag_array_initialise 0009  
      __end_of_flag_array_initialise 0568              byte_union_set_bit@state 0071  
                     __end_of_printf 02BE                  start_initialization 000F  
            __end_of_time_type_valid 053C                   test_of_time_type@i 0039  
       __size_of_byte_union_get_byte 0007                     __CFG_LPBOREN$OFF 0000  
         ??_input_interrupt_function 0070                test_of_time_type@type 0038  
       __size_of_byte_union_set_byte 000F                             ??_printf 002C  
                        __pbssCOMMON 007C                            ___latbits 0002  
                  __size_of__fassert 0016                        __pcstackBANK0 0020  
   __end_of_byte_union_get_bit_value 045F          __end_of_flag_array_set_flag 0549  
           ??_flag_array_set_numbers 0072          byte_union_get_bit_value@val 0072  
                   ___lwdiv@dividend 0073                             ?___lwdiv 0071  
                           ?___lwmod 0020                            __pswtext1 0500  
                          __pswtext2 0510                  time_type_valid@type 0074  
        byte_union_initialize@byte_u 0078                     ?_time_type_valid 0071  
                   ___lwdiv@quotient 0077                       __size_of_putch 0008  
            ??_byte_union_initialize 0078          __size_of_test_of_flag_array 008C  
          byte_union_get_byte@byte_u 0073                    _test_of_time_type 034A  
                 ?_test_of_time_type 0070                  ??_test_of_time_type 007B  
                         printf@flag 0030                           printf@prec 0031  
                  ?_flag_array_valid 003E      __size_of_flag_array_set_numbers 0009  
        ??_flag_array_get_flag_state 0075            byte_union_set_bit@bit_nbr 0072  
                 ??_flag_array_valid 007B            __end_of_test_of_time_type 03BB  
   __end_of_input_interrupt_function 000D                     __CFG_RSTOSC$SOSC 0000  
             byte_union_set_byte@val 0074               byte_union_set_byte@ptb 0076  
        __size_of_byte_union_set_bit 0055    __size_of_byte_union_get_bit_value 004F  
          ?_byte_union_get_bit_value 0071         flag_array_get_flag_state@val 0077  
                   __size_of___lwdiv 0034                     __size_of___lwmod 002D  
                _byte_union_get_byte 0570              test_of_flag_array@array 0042  
                           __fassert 04E5               __size_of_test_function 0006  
                    ___lwdiv@divisor 0071                      ___lwdiv@counter 0076  
                           __ptext10 045F                             __ptext11 0556  
                           __ptext12 053C                             __ptext13 03BB  
                           __ptext14 055F                             __ptext15 057D  
                           __ptext16 0520                             __ptext17 0570  
                           __ptext18 0549                             __ptext19 0410  
                _byte_union_set_byte 0520                 ?_byte_union_get_byte 0070  
                      __size_of_main 0004                             int$flags 007E  
               ?_byte_union_set_byte 0074                            printf@val 0035  
             _flag_array_set_numbers 0556            _flag_array_get_flag_state 0549  
              _flag_array_initialise 055F                            putch@data 0071  
                           intlevel1 0000                ??_byte_union_get_byte 0071  
                   ___lwmod@dividend 0022                        _test_function 0577  
                  __CFG_CLKOUTEN$OFF 0000           __size_of_test_of_time_type 0071  
          flag_array_set_numbers@nbr 0071                             printf@ap 0032  
                           printf@cp 0033                ??_byte_union_set_byte 0075  
                    ___lwmod@divisor 0020    __size_of_input_interrupt_function 0009  
                    ___lwmod@counter 007A            ?_input_interrupt_function 0070  
          byte_union_set_byte@byte_u 0077                       ?_test_function 0070  
   flag_array_set_numbers@flag_array 0073       __size_of_byte_union_initialize 0006  
      __end_of_byte_union_initialize 0583         __size_of_flag_array_set_flag 000D  
