

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Feb 21 16:56:05 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	swtext1,local,class=CONST,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	swtext2,local,class=CONST,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  0010                     	;# 
    49  0011                     	;# 
    50  0012                     	;# 
    51  0013                     	;# 
    52  0014                     	;# 
    53  0015                     	;# 
    54  0016                     	;# 
    55  0017                     	;# 
    56  0018                     	;# 
    57  0019                     	;# 
    58  0019                     	;# 
    59  001A                     	;# 
    60  001B                     	;# 
    61  001C                     	;# 
    62  001D                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  008C                     	;# 
    66  008D                     	;# 
    67  008E                     	;# 
    68  0090                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0097                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  009F                     	;# 
    80  010C                     	;# 
    81  010D                     	;# 
    82  010E                     	;# 
    83  0111                     	;# 
    84  0112                     	;# 
    85  0113                     	;# 
    86  0114                     	;# 
    87  0115                     	;# 
    88  0116                     	;# 
    89  0117                     	;# 
    90  0118                     	;# 
    91  0119                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  018E                     	;# 
    95  0197                     	;# 
    96  0199                     	;# 
    97  0199                     	;# 
    98  0199                     	;# 
    99  019A                     	;# 
   100  019A                     	;# 
   101  019A                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019C                     	;# 
   110  019D                     	;# 
   111  019D                     	;# 
   112  019D                     	;# 
   113  019E                     	;# 
   114  019E                     	;# 
   115  019E                     	;# 
   116  019F                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  020C                     	;# 
   122  020D                     	;# 
   123  020E                     	;# 
   124  0211                     	;# 
   125  0211                     	;# 
   126  0212                     	;# 
   127  0212                     	;# 
   128  0213                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0214                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0216                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0217                     	;# 
   140  0219                     	;# 
   141  021A                     	;# 
   142  021B                     	;# 
   143  021C                     	;# 
   144  021D                     	;# 
   145  021D                     	;# 
   146  021E                     	;# 
   147  021F                     	;# 
   148  028C                     	;# 
   149  028D                     	;# 
   150  028E                     	;# 
   151  0291                     	;# 
   152  0291                     	;# 
   153  0292                     	;# 
   154  0293                     	;# 
   155  0294                     	;# 
   156  0295                     	;# 
   157  0295                     	;# 
   158  0296                     	;# 
   159  0297                     	;# 
   160  0298                     	;# 
   161  029F                     	;# 
   162  030C                     	;# 
   163  030D                     	;# 
   164  030E                     	;# 
   165  0311                     	;# 
   166  0311                     	;# 
   167  0312                     	;# 
   168  0313                     	;# 
   169  0314                     	;# 
   170  0315                     	;# 
   171  0315                     	;# 
   172  0316                     	;# 
   173  0317                     	;# 
   174  0318                     	;# 
   175  038C                     	;# 
   176  038D                     	;# 
   177  038E                     	;# 
   178  0391                     	;# 
   179  0392                     	;# 
   180  0393                     	;# 
   181  0394                     	;# 
   182  0395                     	;# 
   183  0396                     	;# 
   184  0397                     	;# 
   185  0398                     	;# 
   186  0399                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  040C                     	;# 
   193  040D                     	;# 
   194  040E                     	;# 
   195  0411                     	;# 
   196  0411                     	;# 
   197  0412                     	;# 
   198  0413                     	;# 
   199  0414                     	;# 
   200  0415                     	;# 
   201  0416                     	;# 
   202  0417                     	;# 
   203  0418                     	;# 
   204  0418                     	;# 
   205  0419                     	;# 
   206  041A                     	;# 
   207  041B                     	;# 
   208  041C                     	;# 
   209  041D                     	;# 
   210  041E                     	;# 
   211  041F                     	;# 
   212  048C                     	;# 
   213  048D                     	;# 
   214  048E                     	;# 
   215  0498                     	;# 
   216  0498                     	;# 
   217  0499                     	;# 
   218  049A                     	;# 
   219  049B                     	;# 
   220  049B                     	;# 
   221  049C                     	;# 
   222  049D                     	;# 
   223  049E                     	;# 
   224  049F                     	;# 
   225  0617                     	;# 
   226  0618                     	;# 
   227  0619                     	;# 
   228  0619                     	;# 
   229  061A                     	;# 
   230  061B                     	;# 
   231  061C                     	;# 
   232  061C                     	;# 
   233  061F                     	;# 
   234  0691                     	;# 
   235  0692                     	;# 
   236  0693                     	;# 
   237  0694                     	;# 
   238  0695                     	;# 
   239  0696                     	;# 
   240  0697                     	;# 
   241  0698                     	;# 
   242  0699                     	;# 
   243  0711                     	;# 
   244  0712                     	;# 
   245  0713                     	;# 
   246  0714                     	;# 
   247  0715                     	;# 
   248  0716                     	;# 
   249  0717                     	;# 
   250  0718                     	;# 
   251  0719                     	;# 
   252  0891                     	;# 
   253  0891                     	;# 
   254  0892                     	;# 
   255  0893                     	;# 
   256  0893                     	;# 
   257  0894                     	;# 
   258  0895                     	;# 
   259  0896                     	;# 
   260  089B                     	;# 
   261  0911                     	;# 
   262  0912                     	;# 
   263  0913                     	;# 
   264  0914                     	;# 
   265  0915                     	;# 
   266  0916                     	;# 
   267  0918                     	;# 
   268  0919                     	;# 
   269  091A                     	;# 
   270  091B                     	;# 
   271  091C                     	;# 
   272  091D                     	;# 
   273  091E                     	;# 
   274  091F                     	;# 
   275  0E0F                     	;# 
   276  0E10                     	;# 
   277  0E11                     	;# 
   278  0E12                     	;# 
   279  0E13                     	;# 
   280  0E14                     	;# 
   281  0E15                     	;# 
   282  0E16                     	;# 
   283  0E17                     	;# 
   284  0E18                     	;# 
   285  0E19                     	;# 
   286  0E1A                     	;# 
   287  0E1B                     	;# 
   288  0E1C                     	;# 
   289  0E1D                     	;# 
   290  0E1E                     	;# 
   291  0E1F                     	;# 
   292  0E20                     	;# 
   293  0E21                     	;# 
   294  0E22                     	;# 
   295  0E24                     	;# 
   296  0E25                     	;# 
   297  0E28                     	;# 
   298  0E29                     	;# 
   299  0E2A                     	;# 
   300  0E2B                     	;# 
   301  0E2C                     	;# 
   302  0E2D                     	;# 
   303  0E2E                     	;# 
   304  0E2F                     	;# 
   305  0E90                     	;# 
   306  0E91                     	;# 
   307  0E92                     	;# 
   308  0E94                     	;# 
   309  0E95                     	;# 
   310  0E9C                     	;# 
   311  0E9D                     	;# 
   312  0E9E                     	;# 
   313  0E9F                     	;# 
   314  0EA0                     	;# 
   315  0EA1                     	;# 
   316  0EA2                     	;# 
   317  0EA3                     	;# 
   318  0EA4                     	;# 
   319  0EA5                     	;# 
   320  0EA6                     	;# 
   321  0EA7                     	;# 
   322  0F0F                     	;# 
   323  0F10                     	;# 
   324  0F11                     	;# 
   325  0F12                     	;# 
   326  0F13                     	;# 
   327  0F14                     	;# 
   328  0F15                     	;# 
   329  0F16                     	;# 
   330  0F17                     	;# 
   331  0F18                     	;# 
   332  0F19                     	;# 
   333  0F1A                     	;# 
   334  0F1B                     	;# 
   335  0F1C                     	;# 
   336  0F1D                     	;# 
   337  0F1E                     	;# 
   338  0F1F                     	;# 
   339  0F20                     	;# 
   340  0F21                     	;# 
   341  0F22                     	;# 
   342  0F23                     	;# 
   343  0F24                     	;# 
   344  0F25                     	;# 
   345  0F26                     	;# 
   346  0F27                     	;# 
   347  0F28                     	;# 
   348  0F29                     	;# 
   349  0F2A                     	;# 
   350  0F2B                     	;# 
   351  0F2C                     	;# 
   352  0F2D                     	;# 
   353  0F2E                     	;# 
   354  0F2F                     	;# 
   355  0F30                     	;# 
   356  0F31                     	;# 
   357  0F32                     	;# 
   358  0F33                     	;# 
   359  0F34                     	;# 
   360  0F35                     	;# 
   361  0F36                     	;# 
   362  0F37                     	;# 
   363  0FE4                     	;# 
   364  0FE5                     	;# 
   365  0FE6                     	;# 
   366  0FE7                     	;# 
   367  0FE8                     	;# 
   368  0FE9                     	;# 
   369  0FEA                     	;# 
   370  0FEB                     	;# 
   371  0FED                     	;# 
   372  0FEE                     	;# 
   373  0FEF                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  001D                     	;# 
   404  001E                     	;# 
   405  001F                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  0090                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0094                     	;# 
   414  0097                     	;# 
   415  009B                     	;# 
   416  009B                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  010C                     	;# 
   422  010D                     	;# 
   423  010E                     	;# 
   424  0111                     	;# 
   425  0112                     	;# 
   426  0113                     	;# 
   427  0114                     	;# 
   428  0115                     	;# 
   429  0116                     	;# 
   430  0117                     	;# 
   431  0118                     	;# 
   432  0119                     	;# 
   433  018C                     	;# 
   434  018D                     	;# 
   435  018E                     	;# 
   436  0197                     	;# 
   437  0199                     	;# 
   438  0199                     	;# 
   439  0199                     	;# 
   440  019A                     	;# 
   441  019A                     	;# 
   442  019A                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019B                     	;# 
   447  019B                     	;# 
   448  019C                     	;# 
   449  019C                     	;# 
   450  019C                     	;# 
   451  019D                     	;# 
   452  019D                     	;# 
   453  019D                     	;# 
   454  019E                     	;# 
   455  019E                     	;# 
   456  019E                     	;# 
   457  019F                     	;# 
   458  019F                     	;# 
   459  019F                     	;# 
   460  019F                     	;# 
   461  019F                     	;# 
   462  020C                     	;# 
   463  020D                     	;# 
   464  020E                     	;# 
   465  0211                     	;# 
   466  0211                     	;# 
   467  0212                     	;# 
   468  0212                     	;# 
   469  0213                     	;# 
   470  0213                     	;# 
   471  0214                     	;# 
   472  0214                     	;# 
   473  0215                     	;# 
   474  0215                     	;# 
   475  0215                     	;# 
   476  0215                     	;# 
   477  0216                     	;# 
   478  0216                     	;# 
   479  0217                     	;# 
   480  0217                     	;# 
   481  0219                     	;# 
   482  021A                     	;# 
   483  021B                     	;# 
   484  021C                     	;# 
   485  021D                     	;# 
   486  021D                     	;# 
   487  021E                     	;# 
   488  021F                     	;# 
   489  028C                     	;# 
   490  028D                     	;# 
   491  028E                     	;# 
   492  0291                     	;# 
   493  0291                     	;# 
   494  0292                     	;# 
   495  0293                     	;# 
   496  0294                     	;# 
   497  0295                     	;# 
   498  0295                     	;# 
   499  0296                     	;# 
   500  0297                     	;# 
   501  0298                     	;# 
   502  029F                     	;# 
   503  030C                     	;# 
   504  030D                     	;# 
   505  030E                     	;# 
   506  0311                     	;# 
   507  0311                     	;# 
   508  0312                     	;# 
   509  0313                     	;# 
   510  0314                     	;# 
   511  0315                     	;# 
   512  0315                     	;# 
   513  0316                     	;# 
   514  0317                     	;# 
   515  0318                     	;# 
   516  038C                     	;# 
   517  038D                     	;# 
   518  038E                     	;# 
   519  0391                     	;# 
   520  0392                     	;# 
   521  0393                     	;# 
   522  0394                     	;# 
   523  0395                     	;# 
   524  0396                     	;# 
   525  0397                     	;# 
   526  0398                     	;# 
   527  0399                     	;# 
   528  039A                     	;# 
   529  039C                     	;# 
   530  039D                     	;# 
   531  039E                     	;# 
   532  039F                     	;# 
   533  040C                     	;# 
   534  040D                     	;# 
   535  040E                     	;# 
   536  0411                     	;# 
   537  0411                     	;# 
   538  0412                     	;# 
   539  0413                     	;# 
   540  0414                     	;# 
   541  0415                     	;# 
   542  0416                     	;# 
   543  0417                     	;# 
   544  0418                     	;# 
   545  0418                     	;# 
   546  0419                     	;# 
   547  041A                     	;# 
   548  041B                     	;# 
   549  041C                     	;# 
   550  041D                     	;# 
   551  041E                     	;# 
   552  041F                     	;# 
   553  048C                     	;# 
   554  048D                     	;# 
   555  048E                     	;# 
   556  0498                     	;# 
   557  0498                     	;# 
   558  0499                     	;# 
   559  049A                     	;# 
   560  049B                     	;# 
   561  049B                     	;# 
   562  049C                     	;# 
   563  049D                     	;# 
   564  049E                     	;# 
   565  049F                     	;# 
   566  0617                     	;# 
   567  0618                     	;# 
   568  0619                     	;# 
   569  0619                     	;# 
   570  061A                     	;# 
   571  061B                     	;# 
   572  061C                     	;# 
   573  061C                     	;# 
   574  061F                     	;# 
   575  0691                     	;# 
   576  0692                     	;# 
   577  0693                     	;# 
   578  0694                     	;# 
   579  0695                     	;# 
   580  0696                     	;# 
   581  0697                     	;# 
   582  0698                     	;# 
   583  0699                     	;# 
   584  0711                     	;# 
   585  0712                     	;# 
   586  0713                     	;# 
   587  0714                     	;# 
   588  0715                     	;# 
   589  0716                     	;# 
   590  0717                     	;# 
   591  0718                     	;# 
   592  0719                     	;# 
   593  0891                     	;# 
   594  0891                     	;# 
   595  0892                     	;# 
   596  0893                     	;# 
   597  0893                     	;# 
   598  0894                     	;# 
   599  0895                     	;# 
   600  0896                     	;# 
   601  089B                     	;# 
   602  0911                     	;# 
   603  0912                     	;# 
   604  0913                     	;# 
   605  0914                     	;# 
   606  0915                     	;# 
   607  0916                     	;# 
   608  0918                     	;# 
   609  0919                     	;# 
   610  091A                     	;# 
   611  091B                     	;# 
   612  091C                     	;# 
   613  091D                     	;# 
   614  091E                     	;# 
   615  091F                     	;# 
   616  0E0F                     	;# 
   617  0E10                     	;# 
   618  0E11                     	;# 
   619  0E12                     	;# 
   620  0E13                     	;# 
   621  0E14                     	;# 
   622  0E15                     	;# 
   623  0E16                     	;# 
   624  0E17                     	;# 
   625  0E18                     	;# 
   626  0E19                     	;# 
   627  0E1A                     	;# 
   628  0E1B                     	;# 
   629  0E1C                     	;# 
   630  0E1D                     	;# 
   631  0E1E                     	;# 
   632  0E1F                     	;# 
   633  0E20                     	;# 
   634  0E21                     	;# 
   635  0E22                     	;# 
   636  0E24                     	;# 
   637  0E25                     	;# 
   638  0E28                     	;# 
   639  0E29                     	;# 
   640  0E2A                     	;# 
   641  0E2B                     	;# 
   642  0E2C                     	;# 
   643  0E2D                     	;# 
   644  0E2E                     	;# 
   645  0E2F                     	;# 
   646  0E90                     	;# 
   647  0E91                     	;# 
   648  0E92                     	;# 
   649  0E94                     	;# 
   650  0E95                     	;# 
   651  0E9C                     	;# 
   652  0E9D                     	;# 
   653  0E9E                     	;# 
   654  0E9F                     	;# 
   655  0EA0                     	;# 
   656  0EA1                     	;# 
   657  0EA2                     	;# 
   658  0EA3                     	;# 
   659  0EA4                     	;# 
   660  0EA5                     	;# 
   661  0EA6                     	;# 
   662  0EA7                     	;# 
   663  0F0F                     	;# 
   664  0F10                     	;# 
   665  0F11                     	;# 
   666  0F12                     	;# 
   667  0F13                     	;# 
   668  0F14                     	;# 
   669  0F15                     	;# 
   670  0F16                     	;# 
   671  0F17                     	;# 
   672  0F18                     	;# 
   673  0F19                     	;# 
   674  0F1A                     	;# 
   675  0F1B                     	;# 
   676  0F1C                     	;# 
   677  0F1D                     	;# 
   678  0F1E                     	;# 
   679  0F1F                     	;# 
   680  0F20                     	;# 
   681  0F21                     	;# 
   682  0F22                     	;# 
   683  0F23                     	;# 
   684  0F24                     	;# 
   685  0F25                     	;# 
   686  0F26                     	;# 
   687  0F27                     	;# 
   688  0F28                     	;# 
   689  0F29                     	;# 
   690  0F2A                     	;# 
   691  0F2B                     	;# 
   692  0F2C                     	;# 
   693  0F2D                     	;# 
   694  0F2E                     	;# 
   695  0F2F                     	;# 
   696  0F30                     	;# 
   697  0F31                     	;# 
   698  0F32                     	;# 
   699  0F33                     	;# 
   700  0F34                     	;# 
   701  0F35                     	;# 
   702  0F36                     	;# 
   703  0F37                     	;# 
   704  0FE4                     	;# 
   705  0FE5                     	;# 
   706  0FE6                     	;# 
   707  0FE7                     	;# 
   708  0FE8                     	;# 
   709  0FE9                     	;# 
   710  0FEA                     	;# 
   711  0FEB                     	;# 
   712  0FED                     	;# 
   713  0FEE                     	;# 
   714  0FEF                     	;# 
   715  0000                     	;# 
   716  0001                     	;# 
   717  0002                     	;# 
   718  0003                     	;# 
   719  0004                     	;# 
   720  0005                     	;# 
   721  0006                     	;# 
   722  0007                     	;# 
   723  0008                     	;# 
   724  0009                     	;# 
   725  000A                     	;# 
   726  000B                     	;# 
   727  000C                     	;# 
   728  000D                     	;# 
   729  000E                     	;# 
   730  0010                     	;# 
   731  0011                     	;# 
   732  0012                     	;# 
   733  0013                     	;# 
   734  0014                     	;# 
   735  0015                     	;# 
   736  0016                     	;# 
   737  0017                     	;# 
   738  0018                     	;# 
   739  0019                     	;# 
   740  0019                     	;# 
   741  001A                     	;# 
   742  001B                     	;# 
   743  001C                     	;# 
   744  001D                     	;# 
   745  001E                     	;# 
   746  001F                     	;# 
   747  008C                     	;# 
   748  008D                     	;# 
   749  008E                     	;# 
   750  0090                     	;# 
   751  0091                     	;# 
   752  0092                     	;# 
   753  0093                     	;# 
   754  0094                     	;# 
   755  0097                     	;# 
   756  009B                     	;# 
   757  009B                     	;# 
   758  009C                     	;# 
   759  009D                     	;# 
   760  009E                     	;# 
   761  009F                     	;# 
   762  010C                     	;# 
   763  010D                     	;# 
   764  010E                     	;# 
   765  0111                     	;# 
   766  0112                     	;# 
   767  0113                     	;# 
   768  0114                     	;# 
   769  0115                     	;# 
   770  0116                     	;# 
   771  0117                     	;# 
   772  0118                     	;# 
   773  0119                     	;# 
   774  018C                     	;# 
   775  018D                     	;# 
   776  018E                     	;# 
   777  0197                     	;# 
   778  0199                     	;# 
   779  0199                     	;# 
   780  0199                     	;# 
   781  019A                     	;# 
   782  019A                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019C                     	;# 
   790  019C                     	;# 
   791  019C                     	;# 
   792  019D                     	;# 
   793  019D                     	;# 
   794  019D                     	;# 
   795  019E                     	;# 
   796  019E                     	;# 
   797  019E                     	;# 
   798  019F                     	;# 
   799  019F                     	;# 
   800  019F                     	;# 
   801  019F                     	;# 
   802  019F                     	;# 
   803  020C                     	;# 
   804  020D                     	;# 
   805  020E                     	;# 
   806  0211                     	;# 
   807  0211                     	;# 
   808  0212                     	;# 
   809  0212                     	;# 
   810  0213                     	;# 
   811  0213                     	;# 
   812  0214                     	;# 
   813  0214                     	;# 
   814  0215                     	;# 
   815  0215                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0216                     	;# 
   819  0216                     	;# 
   820  0217                     	;# 
   821  0217                     	;# 
   822  0219                     	;# 
   823  021A                     	;# 
   824  021B                     	;# 
   825  021C                     	;# 
   826  021D                     	;# 
   827  021D                     	;# 
   828  021E                     	;# 
   829  021F                     	;# 
   830  028C                     	;# 
   831  028D                     	;# 
   832  028E                     	;# 
   833  0291                     	;# 
   834  0291                     	;# 
   835  0292                     	;# 
   836  0293                     	;# 
   837  0294                     	;# 
   838  0295                     	;# 
   839  0295                     	;# 
   840  0296                     	;# 
   841  0297                     	;# 
   842  0298                     	;# 
   843  029F                     	;# 
   844  030C                     	;# 
   845  030D                     	;# 
   846  030E                     	;# 
   847  0311                     	;# 
   848  0311                     	;# 
   849  0312                     	;# 
   850  0313                     	;# 
   851  0314                     	;# 
   852  0315                     	;# 
   853  0315                     	;# 
   854  0316                     	;# 
   855  0317                     	;# 
   856  0318                     	;# 
   857  038C                     	;# 
   858  038D                     	;# 
   859  038E                     	;# 
   860  0391                     	;# 
   861  0392                     	;# 
   862  0393                     	;# 
   863  0394                     	;# 
   864  0395                     	;# 
   865  0396                     	;# 
   866  0397                     	;# 
   867  0398                     	;# 
   868  0399                     	;# 
   869  039A                     	;# 
   870  039C                     	;# 
   871  039D                     	;# 
   872  039E                     	;# 
   873  039F                     	;# 
   874  040C                     	;# 
   875  040D                     	;# 
   876  040E                     	;# 
   877  0411                     	;# 
   878  0411                     	;# 
   879  0412                     	;# 
   880  0413                     	;# 
   881  0414                     	;# 
   882  0415                     	;# 
   883  0416                     	;# 
   884  0417                     	;# 
   885  0418                     	;# 
   886  0418                     	;# 
   887  0419                     	;# 
   888  041A                     	;# 
   889  041B                     	;# 
   890  041C                     	;# 
   891  041D                     	;# 
   892  041E                     	;# 
   893  041F                     	;# 
   894  048C                     	;# 
   895  048D                     	;# 
   896  048E                     	;# 
   897  0498                     	;# 
   898  0498                     	;# 
   899  0499                     	;# 
   900  049A                     	;# 
   901  049B                     	;# 
   902  049B                     	;# 
   903  049C                     	;# 
   904  049D                     	;# 
   905  049E                     	;# 
   906  049F                     	;# 
   907  0617                     	;# 
   908  0618                     	;# 
   909  0619                     	;# 
   910  0619                     	;# 
   911  061A                     	;# 
   912  061B                     	;# 
   913  061C                     	;# 
   914  061C                     	;# 
   915  061F                     	;# 
   916  0691                     	;# 
   917  0692                     	;# 
   918  0693                     	;# 
   919  0694                     	;# 
   920  0695                     	;# 
   921  0696                     	;# 
   922  0697                     	;# 
   923  0698                     	;# 
   924  0699                     	;# 
   925  0711                     	;# 
   926  0712                     	;# 
   927  0713                     	;# 
   928  0714                     	;# 
   929  0715                     	;# 
   930  0716                     	;# 
   931  0717                     	;# 
   932  0718                     	;# 
   933  0719                     	;# 
   934  0891                     	;# 
   935  0891                     	;# 
   936  0892                     	;# 
   937  0893                     	;# 
   938  0893                     	;# 
   939  0894                     	;# 
   940  0895                     	;# 
   941  0896                     	;# 
   942  089B                     	;# 
   943  0911                     	;# 
   944  0912                     	;# 
   945  0913                     	;# 
   946  0914                     	;# 
   947  0915                     	;# 
   948  0916                     	;# 
   949  0918                     	;# 
   950  0919                     	;# 
   951  091A                     	;# 
   952  091B                     	;# 
   953  091C                     	;# 
   954  091D                     	;# 
   955  091E                     	;# 
   956  091F                     	;# 
   957  0E0F                     	;# 
   958  0E10                     	;# 
   959  0E11                     	;# 
   960  0E12                     	;# 
   961  0E13                     	;# 
   962  0E14                     	;# 
   963  0E15                     	;# 
   964  0E16                     	;# 
   965  0E17                     	;# 
   966  0E18                     	;# 
   967  0E19                     	;# 
   968  0E1A                     	;# 
   969  0E1B                     	;# 
   970  0E1C                     	;# 
   971  0E1D                     	;# 
   972  0E1E                     	;# 
   973  0E1F                     	;# 
   974  0E20                     	;# 
   975  0E21                     	;# 
   976  0E22                     	;# 
   977  0E24                     	;# 
   978  0E25                     	;# 
   979  0E28                     	;# 
   980  0E29                     	;# 
   981  0E2A                     	;# 
   982  0E2B                     	;# 
   983  0E2C                     	;# 
   984  0E2D                     	;# 
   985  0E2E                     	;# 
   986  0E2F                     	;# 
   987  0E90                     	;# 
   988  0E91                     	;# 
   989  0E92                     	;# 
   990  0E94                     	;# 
   991  0E95                     	;# 
   992  0E9C                     	;# 
   993  0E9D                     	;# 
   994  0E9E                     	;# 
   995  0E9F                     	;# 
   996  0EA0                     	;# 
   997  0EA1                     	;# 
   998  0EA2                     	;# 
   999  0EA3                     	;# 
  1000  0EA4                     	;# 
  1001  0EA5                     	;# 
  1002  0EA6                     	;# 
  1003  0EA7                     	;# 
  1004  0F0F                     	;# 
  1005  0F10                     	;# 
  1006  0F11                     	;# 
  1007  0F12                     	;# 
  1008  0F13                     	;# 
  1009  0F14                     	;# 
  1010  0F15                     	;# 
  1011  0F16                     	;# 
  1012  0F17                     	;# 
  1013  0F18                     	;# 
  1014  0F19                     	;# 
  1015  0F1A                     	;# 
  1016  0F1B                     	;# 
  1017  0F1C                     	;# 
  1018  0F1D                     	;# 
  1019  0F1E                     	;# 
  1020  0F1F                     	;# 
  1021  0F20                     	;# 
  1022  0F21                     	;# 
  1023  0F22                     	;# 
  1024  0F23                     	;# 
  1025  0F24                     	;# 
  1026  0F25                     	;# 
  1027  0F26                     	;# 
  1028  0F27                     	;# 
  1029  0F28                     	;# 
  1030  0F29                     	;# 
  1031  0F2A                     	;# 
  1032  0F2B                     	;# 
  1033  0F2C                     	;# 
  1034  0F2D                     	;# 
  1035  0F2E                     	;# 
  1036  0F2F                     	;# 
  1037  0F30                     	;# 
  1038  0F31                     	;# 
  1039  0F32                     	;# 
  1040  0F33                     	;# 
  1041  0F34                     	;# 
  1042  0F35                     	;# 
  1043  0F36                     	;# 
  1044  0F37                     	;# 
  1045  0FE4                     	;# 
  1046  0FE5                     	;# 
  1047  0FE6                     	;# 
  1048  0FE7                     	;# 
  1049  0FE8                     	;# 
  1050  0FE9                     	;# 
  1051  0FEA                     	;# 
  1052  0FEB                     	;# 
  1053  0FED                     	;# 
  1054  0FEE                     	;# 
  1055  0FEF                     	;# 
  1056  0000                     	;# 
  1057  0001                     	;# 
  1058  0002                     	;# 
  1059  0003                     	;# 
  1060  0004                     	;# 
  1061  0005                     	;# 
  1062  0006                     	;# 
  1063  0007                     	;# 
  1064  0008                     	;# 
  1065  0009                     	;# 
  1066  000A                     	;# 
  1067  000B                     	;# 
  1068  000C                     	;# 
  1069  000D                     	;# 
  1070  000E                     	;# 
  1071  0010                     	;# 
  1072  0011                     	;# 
  1073  0012                     	;# 
  1074  0013                     	;# 
  1075  0014                     	;# 
  1076  0015                     	;# 
  1077  0016                     	;# 
  1078  0017                     	;# 
  1079  0018                     	;# 
  1080  0019                     	;# 
  1081  0019                     	;# 
  1082  001A                     	;# 
  1083  001B                     	;# 
  1084  001C                     	;# 
  1085  001D                     	;# 
  1086  001E                     	;# 
  1087  001F                     	;# 
  1088  008C                     	;# 
  1089  008D                     	;# 
  1090  008E                     	;# 
  1091  0090                     	;# 
  1092  0091                     	;# 
  1093  0092                     	;# 
  1094  0093                     	;# 
  1095  0094                     	;# 
  1096  0097                     	;# 
  1097  009B                     	;# 
  1098  009B                     	;# 
  1099  009C                     	;# 
  1100  009D                     	;# 
  1101  009E                     	;# 
  1102  009F                     	;# 
  1103  010C                     	;# 
  1104  010D                     	;# 
  1105  010E                     	;# 
  1106  0111                     	;# 
  1107  0112                     	;# 
  1108  0113                     	;# 
  1109  0114                     	;# 
  1110  0115                     	;# 
  1111  0116                     	;# 
  1112  0117                     	;# 
  1113  0118                     	;# 
  1114  0119                     	;# 
  1115  018C                     	;# 
  1116  018D                     	;# 
  1117  018E                     	;# 
  1118  0197                     	;# 
  1119  0199                     	;# 
  1120  0199                     	;# 
  1121  0199                     	;# 
  1122  019A                     	;# 
  1123  019A                     	;# 
  1124  019A                     	;# 
  1125  019B                     	;# 
  1126  019B                     	;# 
  1127  019B                     	;# 
  1128  019B                     	;# 
  1129  019B                     	;# 
  1130  019C                     	;# 
  1131  019C                     	;# 
  1132  019C                     	;# 
  1133  019D                     	;# 
  1134  019D                     	;# 
  1135  019D                     	;# 
  1136  019E                     	;# 
  1137  019E                     	;# 
  1138  019E                     	;# 
  1139  019F                     	;# 
  1140  019F                     	;# 
  1141  019F                     	;# 
  1142  019F                     	;# 
  1143  019F                     	;# 
  1144  020C                     	;# 
  1145  020D                     	;# 
  1146  020E                     	;# 
  1147  0211                     	;# 
  1148  0211                     	;# 
  1149  0212                     	;# 
  1150  0212                     	;# 
  1151  0213                     	;# 
  1152  0213                     	;# 
  1153  0214                     	;# 
  1154  0214                     	;# 
  1155  0215                     	;# 
  1156  0215                     	;# 
  1157  0215                     	;# 
  1158  0215                     	;# 
  1159  0216                     	;# 
  1160  0216                     	;# 
  1161  0217                     	;# 
  1162  0217                     	;# 
  1163  0219                     	;# 
  1164  021A                     	;# 
  1165  021B                     	;# 
  1166  021C                     	;# 
  1167  021D                     	;# 
  1168  021D                     	;# 
  1169  021E                     	;# 
  1170  021F                     	;# 
  1171  028C                     	;# 
  1172  028D                     	;# 
  1173  028E                     	;# 
  1174  0291                     	;# 
  1175  0291                     	;# 
  1176  0292                     	;# 
  1177  0293                     	;# 
  1178  0294                     	;# 
  1179  0295                     	;# 
  1180  0295                     	;# 
  1181  0296                     	;# 
  1182  0297                     	;# 
  1183  0298                     	;# 
  1184  029F                     	;# 
  1185  030C                     	;# 
  1186  030D                     	;# 
  1187  030E                     	;# 
  1188  0311                     	;# 
  1189  0311                     	;# 
  1190  0312                     	;# 
  1191  0313                     	;# 
  1192  0314                     	;# 
  1193  0315                     	;# 
  1194  0315                     	;# 
  1195  0316                     	;# 
  1196  0317                     	;# 
  1197  0318                     	;# 
  1198  038C                     	;# 
  1199  038D                     	;# 
  1200  038E                     	;# 
  1201  0391                     	;# 
  1202  0392                     	;# 
  1203  0393                     	;# 
  1204  0394                     	;# 
  1205  0395                     	;# 
  1206  0396                     	;# 
  1207  0397                     	;# 
  1208  0398                     	;# 
  1209  0399                     	;# 
  1210  039A                     	;# 
  1211  039C                     	;# 
  1212  039D                     	;# 
  1213  039E                     	;# 
  1214  039F                     	;# 
  1215  040C                     	;# 
  1216  040D                     	;# 
  1217  040E                     	;# 
  1218  0411                     	;# 
  1219  0411                     	;# 
  1220  0412                     	;# 
  1221  0413                     	;# 
  1222  0414                     	;# 
  1223  0415                     	;# 
  1224  0416                     	;# 
  1225  0417                     	;# 
  1226  0418                     	;# 
  1227  0418                     	;# 
  1228  0419                     	;# 
  1229  041A                     	;# 
  1230  041B                     	;# 
  1231  041C                     	;# 
  1232  041D                     	;# 
  1233  041E                     	;# 
  1234  041F                     	;# 
  1235  048C                     	;# 
  1236  048D                     	;# 
  1237  048E                     	;# 
  1238  0498                     	;# 
  1239  0498                     	;# 
  1240  0499                     	;# 
  1241  049A                     	;# 
  1242  049B                     	;# 
  1243  049B                     	;# 
  1244  049C                     	;# 
  1245  049D                     	;# 
  1246  049E                     	;# 
  1247  049F                     	;# 
  1248  0617                     	;# 
  1249  0618                     	;# 
  1250  0619                     	;# 
  1251  0619                     	;# 
  1252  061A                     	;# 
  1253  061B                     	;# 
  1254  061C                     	;# 
  1255  061C                     	;# 
  1256  061F                     	;# 
  1257  0691                     	;# 
  1258  0692                     	;# 
  1259  0693                     	;# 
  1260  0694                     	;# 
  1261  0695                     	;# 
  1262  0696                     	;# 
  1263  0697                     	;# 
  1264  0698                     	;# 
  1265  0699                     	;# 
  1266  0711                     	;# 
  1267  0712                     	;# 
  1268  0713                     	;# 
  1269  0714                     	;# 
  1270  0715                     	;# 
  1271  0716                     	;# 
  1272  0717                     	;# 
  1273  0718                     	;# 
  1274  0719                     	;# 
  1275  0891                     	;# 
  1276  0891                     	;# 
  1277  0892                     	;# 
  1278  0893                     	;# 
  1279  0893                     	;# 
  1280  0894                     	;# 
  1281  0895                     	;# 
  1282  0896                     	;# 
  1283  089B                     	;# 
  1284  0911                     	;# 
  1285  0912                     	;# 
  1286  0913                     	;# 
  1287  0914                     	;# 
  1288  0915                     	;# 
  1289  0916                     	;# 
  1290  0918                     	;# 
  1291  0919                     	;# 
  1292  091A                     	;# 
  1293  091B                     	;# 
  1294  091C                     	;# 
  1295  091D                     	;# 
  1296  091E                     	;# 
  1297  091F                     	;# 
  1298  0E0F                     	;# 
  1299  0E10                     	;# 
  1300  0E11                     	;# 
  1301  0E12                     	;# 
  1302  0E13                     	;# 
  1303  0E14                     	;# 
  1304  0E15                     	;# 
  1305  0E16                     	;# 
  1306  0E17                     	;# 
  1307  0E18                     	;# 
  1308  0E19                     	;# 
  1309  0E1A                     	;# 
  1310  0E1B                     	;# 
  1311  0E1C                     	;# 
  1312  0E1D                     	;# 
  1313  0E1E                     	;# 
  1314  0E1F                     	;# 
  1315  0E20                     	;# 
  1316  0E21                     	;# 
  1317  0E22                     	;# 
  1318  0E24                     	;# 
  1319  0E25                     	;# 
  1320  0E28                     	;# 
  1321  0E29                     	;# 
  1322  0E2A                     	;# 
  1323  0E2B                     	;# 
  1324  0E2C                     	;# 
  1325  0E2D                     	;# 
  1326  0E2E                     	;# 
  1327  0E2F                     	;# 
  1328  0E90                     	;# 
  1329  0E91                     	;# 
  1330  0E92                     	;# 
  1331  0E94                     	;# 
  1332  0E95                     	;# 
  1333  0E9C                     	;# 
  1334  0E9D                     	;# 
  1335  0E9E                     	;# 
  1336  0E9F                     	;# 
  1337  0EA0                     	;# 
  1338  0EA1                     	;# 
  1339  0EA2                     	;# 
  1340  0EA3                     	;# 
  1341  0EA4                     	;# 
  1342  0EA5                     	;# 
  1343  0EA6                     	;# 
  1344  0EA7                     	;# 
  1345  0F0F                     	;# 
  1346  0F10                     	;# 
  1347  0F11                     	;# 
  1348  0F12                     	;# 
  1349  0F13                     	;# 
  1350  0F14                     	;# 
  1351  0F15                     	;# 
  1352  0F16                     	;# 
  1353  0F17                     	;# 
  1354  0F18                     	;# 
  1355  0F19                     	;# 
  1356  0F1A                     	;# 
  1357  0F1B                     	;# 
  1358  0F1C                     	;# 
  1359  0F1D                     	;# 
  1360  0F1E                     	;# 
  1361  0F1F                     	;# 
  1362  0F20                     	;# 
  1363  0F21                     	;# 
  1364  0F22                     	;# 
  1365  0F23                     	;# 
  1366  0F24                     	;# 
  1367  0F25                     	;# 
  1368  0F26                     	;# 
  1369  0F27                     	;# 
  1370  0F28                     	;# 
  1371  0F29                     	;# 
  1372  0F2A                     	;# 
  1373  0F2B                     	;# 
  1374  0F2C                     	;# 
  1375  0F2D                     	;# 
  1376  0F2E                     	;# 
  1377  0F2F                     	;# 
  1378  0F30                     	;# 
  1379  0F31                     	;# 
  1380  0F32                     	;# 
  1381  0F33                     	;# 
  1382  0F34                     	;# 
  1383  0F35                     	;# 
  1384  0F36                     	;# 
  1385  0F37                     	;# 
  1386  0FE4                     	;# 
  1387  0FE5                     	;# 
  1388  0FE6                     	;# 
  1389  0FE7                     	;# 
  1390  0FE8                     	;# 
  1391  0FE9                     	;# 
  1392  0FEA                     	;# 
  1393  0FEB                     	;# 
  1394  0FED                     	;# 
  1395  0FEE                     	;# 
  1396  0FEF                     	;# 
  1397  0000                     	;# 
  1398  0001                     	;# 
  1399  0002                     	;# 
  1400  0003                     	;# 
  1401  0004                     	;# 
  1402  0005                     	;# 
  1403  0006                     	;# 
  1404  0007                     	;# 
  1405  0008                     	;# 
  1406  0009                     	;# 
  1407  000A                     	;# 
  1408  000B                     	;# 
  1409  000C                     	;# 
  1410  000D                     	;# 
  1411  000E                     	;# 
  1412  0010                     	;# 
  1413  0011                     	;# 
  1414  0012                     	;# 
  1415  0013                     	;# 
  1416  0014                     	;# 
  1417  0015                     	;# 
  1418  0016                     	;# 
  1419  0017                     	;# 
  1420  0018                     	;# 
  1421  0019                     	;# 
  1422  0019                     	;# 
  1423  001A                     	;# 
  1424  001B                     	;# 
  1425  001C                     	;# 
  1426  001D                     	;# 
  1427  001E                     	;# 
  1428  001F                     	;# 
  1429  008C                     	;# 
  1430  008D                     	;# 
  1431  008E                     	;# 
  1432  0090                     	;# 
  1433  0091                     	;# 
  1434  0092                     	;# 
  1435  0093                     	;# 
  1436  0094                     	;# 
  1437  0097                     	;# 
  1438  009B                     	;# 
  1439  009B                     	;# 
  1440  009C                     	;# 
  1441  009D                     	;# 
  1442  009E                     	;# 
  1443  009F                     	;# 
  1444  010C                     	;# 
  1445  010D                     	;# 
  1446  010E                     	;# 
  1447  0111                     	;# 
  1448  0112                     	;# 
  1449  0113                     	;# 
  1450  0114                     	;# 
  1451  0115                     	;# 
  1452  0116                     	;# 
  1453  0117                     	;# 
  1454  0118                     	;# 
  1455  0119                     	;# 
  1456  018C                     	;# 
  1457  018D                     	;# 
  1458  018E                     	;# 
  1459  0197                     	;# 
  1460  0199                     	;# 
  1461  0199                     	;# 
  1462  0199                     	;# 
  1463  019A                     	;# 
  1464  019A                     	;# 
  1465  019A                     	;# 
  1466  019B                     	;# 
  1467  019B                     	;# 
  1468  019B                     	;# 
  1469  019B                     	;# 
  1470  019B                     	;# 
  1471  019C                     	;# 
  1472  019C                     	;# 
  1473  019C                     	;# 
  1474  019D                     	;# 
  1475  019D                     	;# 
  1476  019D                     	;# 
  1477  019E                     	;# 
  1478  019E                     	;# 
  1479  019E                     	;# 
  1480  019F                     	;# 
  1481  019F                     	;# 
  1482  019F                     	;# 
  1483  019F                     	;# 
  1484  019F                     	;# 
  1485  020C                     	;# 
  1486  020D                     	;# 
  1487  020E                     	;# 
  1488  0211                     	;# 
  1489  0211                     	;# 
  1490  0212                     	;# 
  1491  0212                     	;# 
  1492  0213                     	;# 
  1493  0213                     	;# 
  1494  0214                     	;# 
  1495  0214                     	;# 
  1496  0215                     	;# 
  1497  0215                     	;# 
  1498  0215                     	;# 
  1499  0215                     	;# 
  1500  0216                     	;# 
  1501  0216                     	;# 
  1502  0217                     	;# 
  1503  0217                     	;# 
  1504  0219                     	;# 
  1505  021A                     	;# 
  1506  021B                     	;# 
  1507  021C                     	;# 
  1508  021D                     	;# 
  1509  021D                     	;# 
  1510  021E                     	;# 
  1511  021F                     	;# 
  1512  028C                     	;# 
  1513  028D                     	;# 
  1514  028E                     	;# 
  1515  0291                     	;# 
  1516  0291                     	;# 
  1517  0292                     	;# 
  1518  0293                     	;# 
  1519  0294                     	;# 
  1520  0295                     	;# 
  1521  0295                     	;# 
  1522  0296                     	;# 
  1523  0297                     	;# 
  1524  0298                     	;# 
  1525  029F                     	;# 
  1526  030C                     	;# 
  1527  030D                     	;# 
  1528  030E                     	;# 
  1529  0311                     	;# 
  1530  0311                     	;# 
  1531  0312                     	;# 
  1532  0313                     	;# 
  1533  0314                     	;# 
  1534  0315                     	;# 
  1535  0315                     	;# 
  1536  0316                     	;# 
  1537  0317                     	;# 
  1538  0318                     	;# 
  1539  038C                     	;# 
  1540  038D                     	;# 
  1541  038E                     	;# 
  1542  0391                     	;# 
  1543  0392                     	;# 
  1544  0393                     	;# 
  1545  0394                     	;# 
  1546  0395                     	;# 
  1547  0396                     	;# 
  1548  0397                     	;# 
  1549  0398                     	;# 
  1550  0399                     	;# 
  1551  039A                     	;# 
  1552  039C                     	;# 
  1553  039D                     	;# 
  1554  039E                     	;# 
  1555  039F                     	;# 
  1556  040C                     	;# 
  1557  040D                     	;# 
  1558  040E                     	;# 
  1559  0411                     	;# 
  1560  0411                     	;# 
  1561  0412                     	;# 
  1562  0413                     	;# 
  1563  0414                     	;# 
  1564  0415                     	;# 
  1565  0416                     	;# 
  1566  0417                     	;# 
  1567  0418                     	;# 
  1568  0418                     	;# 
  1569  0419                     	;# 
  1570  041A                     	;# 
  1571  041B                     	;# 
  1572  041C                     	;# 
  1573  041D                     	;# 
  1574  041E                     	;# 
  1575  041F                     	;# 
  1576  048C                     	;# 
  1577  048D                     	;# 
  1578  048E                     	;# 
  1579  0498                     	;# 
  1580  0498                     	;# 
  1581  0499                     	;# 
  1582  049A                     	;# 
  1583  049B                     	;# 
  1584  049B                     	;# 
  1585  049C                     	;# 
  1586  049D                     	;# 
  1587  049E                     	;# 
  1588  049F                     	;# 
  1589  0617                     	;# 
  1590  0618                     	;# 
  1591  0619                     	;# 
  1592  0619                     	;# 
  1593  061A                     	;# 
  1594  061B                     	;# 
  1595  061C                     	;# 
  1596  061C                     	;# 
  1597  061F                     	;# 
  1598  0691                     	;# 
  1599  0692                     	;# 
  1600  0693                     	;# 
  1601  0694                     	;# 
  1602  0695                     	;# 
  1603  0696                     	;# 
  1604  0697                     	;# 
  1605  0698                     	;# 
  1606  0699                     	;# 
  1607  0711                     	;# 
  1608  0712                     	;# 
  1609  0713                     	;# 
  1610  0714                     	;# 
  1611  0715                     	;# 
  1612  0716                     	;# 
  1613  0717                     	;# 
  1614  0718                     	;# 
  1615  0719                     	;# 
  1616  0891                     	;# 
  1617  0891                     	;# 
  1618  0892                     	;# 
  1619  0893                     	;# 
  1620  0893                     	;# 
  1621  0894                     	;# 
  1622  0895                     	;# 
  1623  0896                     	;# 
  1624  089B                     	;# 
  1625  0911                     	;# 
  1626  0912                     	;# 
  1627  0913                     	;# 
  1628  0914                     	;# 
  1629  0915                     	;# 
  1630  0916                     	;# 
  1631  0918                     	;# 
  1632  0919                     	;# 
  1633  091A                     	;# 
  1634  091B                     	;# 
  1635  091C                     	;# 
  1636  091D                     	;# 
  1637  091E                     	;# 
  1638  091F                     	;# 
  1639  0E0F                     	;# 
  1640  0E10                     	;# 
  1641  0E11                     	;# 
  1642  0E12                     	;# 
  1643  0E13                     	;# 
  1644  0E14                     	;# 
  1645  0E15                     	;# 
  1646  0E16                     	;# 
  1647  0E17                     	;# 
  1648  0E18                     	;# 
  1649  0E19                     	;# 
  1650  0E1A                     	;# 
  1651  0E1B                     	;# 
  1652  0E1C                     	;# 
  1653  0E1D                     	;# 
  1654  0E1E                     	;# 
  1655  0E1F                     	;# 
  1656  0E20                     	;# 
  1657  0E21                     	;# 
  1658  0E22                     	;# 
  1659  0E24                     	;# 
  1660  0E25                     	;# 
  1661  0E28                     	;# 
  1662  0E29                     	;# 
  1663  0E2A                     	;# 
  1664  0E2B                     	;# 
  1665  0E2C                     	;# 
  1666  0E2D                     	;# 
  1667  0E2E                     	;# 
  1668  0E2F                     	;# 
  1669  0E90                     	;# 
  1670  0E91                     	;# 
  1671  0E92                     	;# 
  1672  0E94                     	;# 
  1673  0E95                     	;# 
  1674  0E9C                     	;# 
  1675  0E9D                     	;# 
  1676  0E9E                     	;# 
  1677  0E9F                     	;# 
  1678  0EA0                     	;# 
  1679  0EA1                     	;# 
  1680  0EA2                     	;# 
  1681  0EA3                     	;# 
  1682  0EA4                     	;# 
  1683  0EA5                     	;# 
  1684  0EA6                     	;# 
  1685  0EA7                     	;# 
  1686  0F0F                     	;# 
  1687  0F10                     	;# 
  1688  0F11                     	;# 
  1689  0F12                     	;# 
  1690  0F13                     	;# 
  1691  0F14                     	;# 
  1692  0F15                     	;# 
  1693  0F16                     	;# 
  1694  0F17                     	;# 
  1695  0F18                     	;# 
  1696  0F19                     	;# 
  1697  0F1A                     	;# 
  1698  0F1B                     	;# 
  1699  0F1C                     	;# 
  1700  0F1D                     	;# 
  1701  0F1E                     	;# 
  1702  0F1F                     	;# 
  1703  0F20                     	;# 
  1704  0F21                     	;# 
  1705  0F22                     	;# 
  1706  0F23                     	;# 
  1707  0F24                     	;# 
  1708  0F25                     	;# 
  1709  0F26                     	;# 
  1710  0F27                     	;# 
  1711  0F28                     	;# 
  1712  0F29                     	;# 
  1713  0F2A                     	;# 
  1714  0F2B                     	;# 
  1715  0F2C                     	;# 
  1716  0F2D                     	;# 
  1717  0F2E                     	;# 
  1718  0F2F                     	;# 
  1719  0F30                     	;# 
  1720  0F31                     	;# 
  1721  0F32                     	;# 
  1722  0F33                     	;# 
  1723  0F34                     	;# 
  1724  0F35                     	;# 
  1725  0F36                     	;# 
  1726  0F37                     	;# 
  1727  0FE4                     	;# 
  1728  0FE5                     	;# 
  1729  0FE6                     	;# 
  1730  0FE7                     	;# 
  1731  0FE8                     	;# 
  1732  0FE9                     	;# 
  1733  0FEA                     	;# 
  1734  0FEB                     	;# 
  1735  0FED                     	;# 
  1736  0FEE                     	;# 
  1737  0FEF                     	;# 
  1738  0000                     	;# 
  1739  0001                     	;# 
  1740  0002                     	;# 
  1741  0003                     	;# 
  1742  0004                     	;# 
  1743  0005                     	;# 
  1744  0006                     	;# 
  1745  0007                     	;# 
  1746  0008                     	;# 
  1747  0009                     	;# 
  1748  000A                     	;# 
  1749  000B                     	;# 
  1750  000C                     	;# 
  1751  000D                     	;# 
  1752  000E                     	;# 
  1753  0010                     	;# 
  1754  0011                     	;# 
  1755  0012                     	;# 
  1756  0013                     	;# 
  1757  0014                     	;# 
  1758  0015                     	;# 
  1759  0016                     	;# 
  1760  0017                     	;# 
  1761  0018                     	;# 
  1762  0019                     	;# 
  1763  0019                     	;# 
  1764  001A                     	;# 
  1765  001B                     	;# 
  1766  001C                     	;# 
  1767  001D                     	;# 
  1768  001E                     	;# 
  1769  001F                     	;# 
  1770  008C                     	;# 
  1771  008D                     	;# 
  1772  008E                     	;# 
  1773  0090                     	;# 
  1774  0091                     	;# 
  1775  0092                     	;# 
  1776  0093                     	;# 
  1777  0094                     	;# 
  1778  0097                     	;# 
  1779  009B                     	;# 
  1780  009B                     	;# 
  1781  009C                     	;# 
  1782  009D                     	;# 
  1783  009E                     	;# 
  1784  009F                     	;# 
  1785  010C                     	;# 
  1786  010D                     	;# 
  1787  010E                     	;# 
  1788  0111                     	;# 
  1789  0112                     	;# 
  1790  0113                     	;# 
  1791  0114                     	;# 
  1792  0115                     	;# 
  1793  0116                     	;# 
  1794  0117                     	;# 
  1795  0118                     	;# 
  1796  0119                     	;# 
  1797  018C                     	;# 
  1798  018D                     	;# 
  1799  018E                     	;# 
  1800  0197                     	;# 
  1801  0199                     	;# 
  1802  0199                     	;# 
  1803  0199                     	;# 
  1804  019A                     	;# 
  1805  019A                     	;# 
  1806  019A                     	;# 
  1807  019B                     	;# 
  1808  019B                     	;# 
  1809  019B                     	;# 
  1810  019B                     	;# 
  1811  019B                     	;# 
  1812  019C                     	;# 
  1813  019C                     	;# 
  1814  019C                     	;# 
  1815  019D                     	;# 
  1816  019D                     	;# 
  1817  019D                     	;# 
  1818  019E                     	;# 
  1819  019E                     	;# 
  1820  019E                     	;# 
  1821  019F                     	;# 
  1822  019F                     	;# 
  1823  019F                     	;# 
  1824  019F                     	;# 
  1825  019F                     	;# 
  1826  020C                     	;# 
  1827  020D                     	;# 
  1828  020E                     	;# 
  1829  0211                     	;# 
  1830  0211                     	;# 
  1831  0212                     	;# 
  1832  0212                     	;# 
  1833  0213                     	;# 
  1834  0213                     	;# 
  1835  0214                     	;# 
  1836  0214                     	;# 
  1837  0215                     	;# 
  1838  0215                     	;# 
  1839  0215                     	;# 
  1840  0215                     	;# 
  1841  0216                     	;# 
  1842  0216                     	;# 
  1843  0217                     	;# 
  1844  0217                     	;# 
  1845  0219                     	;# 
  1846  021A                     	;# 
  1847  021B                     	;# 
  1848  021C                     	;# 
  1849  021D                     	;# 
  1850  021D                     	;# 
  1851  021E                     	;# 
  1852  021F                     	;# 
  1853  028C                     	;# 
  1854  028D                     	;# 
  1855  028E                     	;# 
  1856  0291                     	;# 
  1857  0291                     	;# 
  1858  0292                     	;# 
  1859  0293                     	;# 
  1860  0294                     	;# 
  1861  0295                     	;# 
  1862  0295                     	;# 
  1863  0296                     	;# 
  1864  0297                     	;# 
  1865  0298                     	;# 
  1866  029F                     	;# 
  1867  030C                     	;# 
  1868  030D                     	;# 
  1869  030E                     	;# 
  1870  0311                     	;# 
  1871  0311                     	;# 
  1872  0312                     	;# 
  1873  0313                     	;# 
  1874  0314                     	;# 
  1875  0315                     	;# 
  1876  0315                     	;# 
  1877  0316                     	;# 
  1878  0317                     	;# 
  1879  0318                     	;# 
  1880  038C                     	;# 
  1881  038D                     	;# 
  1882  038E                     	;# 
  1883  0391                     	;# 
  1884  0392                     	;# 
  1885  0393                     	;# 
  1886  0394                     	;# 
  1887  0395                     	;# 
  1888  0396                     	;# 
  1889  0397                     	;# 
  1890  0398                     	;# 
  1891  0399                     	;# 
  1892  039A                     	;# 
  1893  039C                     	;# 
  1894  039D                     	;# 
  1895  039E                     	;# 
  1896  039F                     	;# 
  1897  040C                     	;# 
  1898  040D                     	;# 
  1899  040E                     	;# 
  1900  0411                     	;# 
  1901  0411                     	;# 
  1902  0412                     	;# 
  1903  0413                     	;# 
  1904  0414                     	;# 
  1905  0415                     	;# 
  1906  0416                     	;# 
  1907  0417                     	;# 
  1908  0418                     	;# 
  1909  0418                     	;# 
  1910  0419                     	;# 
  1911  041A                     	;# 
  1912  041B                     	;# 
  1913  041C                     	;# 
  1914  041D                     	;# 
  1915  041E                     	;# 
  1916  041F                     	;# 
  1917  048C                     	;# 
  1918  048D                     	;# 
  1919  048E                     	;# 
  1920  0498                     	;# 
  1921  0498                     	;# 
  1922  0499                     	;# 
  1923  049A                     	;# 
  1924  049B                     	;# 
  1925  049B                     	;# 
  1926  049C                     	;# 
  1927  049D                     	;# 
  1928  049E                     	;# 
  1929  049F                     	;# 
  1930  0617                     	;# 
  1931  0618                     	;# 
  1932  0619                     	;# 
  1933  0619                     	;# 
  1934  061A                     	;# 
  1935  061B                     	;# 
  1936  061C                     	;# 
  1937  061C                     	;# 
  1938  061F                     	;# 
  1939  0691                     	;# 
  1940  0692                     	;# 
  1941  0693                     	;# 
  1942  0694                     	;# 
  1943  0695                     	;# 
  1944  0696                     	;# 
  1945  0697                     	;# 
  1946  0698                     	;# 
  1947  0699                     	;# 
  1948  0711                     	;# 
  1949  0712                     	;# 
  1950  0713                     	;# 
  1951  0714                     	;# 
  1952  0715                     	;# 
  1953  0716                     	;# 
  1954  0717                     	;# 
  1955  0718                     	;# 
  1956  0719                     	;# 
  1957  0891                     	;# 
  1958  0891                     	;# 
  1959  0892                     	;# 
  1960  0893                     	;# 
  1961  0893                     	;# 
  1962  0894                     	;# 
  1963  0895                     	;# 
  1964  0896                     	;# 
  1965  089B                     	;# 
  1966  0911                     	;# 
  1967  0912                     	;# 
  1968  0913                     	;# 
  1969  0914                     	;# 
  1970  0915                     	;# 
  1971  0916                     	;# 
  1972  0918                     	;# 
  1973  0919                     	;# 
  1974  091A                     	;# 
  1975  091B                     	;# 
  1976  091C                     	;# 
  1977  091D                     	;# 
  1978  091E                     	;# 
  1979  091F                     	;# 
  1980  0E0F                     	;# 
  1981  0E10                     	;# 
  1982  0E11                     	;# 
  1983  0E12                     	;# 
  1984  0E13                     	;# 
  1985  0E14                     	;# 
  1986  0E15                     	;# 
  1987  0E16                     	;# 
  1988  0E17                     	;# 
  1989  0E18                     	;# 
  1990  0E19                     	;# 
  1991  0E1A                     	;# 
  1992  0E1B                     	;# 
  1993  0E1C                     	;# 
  1994  0E1D                     	;# 
  1995  0E1E                     	;# 
  1996  0E1F                     	;# 
  1997  0E20                     	;# 
  1998  0E21                     	;# 
  1999  0E22                     	;# 
  2000  0E24                     	;# 
  2001  0E25                     	;# 
  2002  0E28                     	;# 
  2003  0E29                     	;# 
  2004  0E2A                     	;# 
  2005  0E2B                     	;# 
  2006  0E2C                     	;# 
  2007  0E2D                     	;# 
  2008  0E2E                     	;# 
  2009  0E2F                     	;# 
  2010  0E90                     	;# 
  2011  0E91                     	;# 
  2012  0E92                     	;# 
  2013  0E94                     	;# 
  2014  0E95                     	;# 
  2015  0E9C                     	;# 
  2016  0E9D                     	;# 
  2017  0E9E                     	;# 
  2018  0E9F                     	;# 
  2019  0EA0                     	;# 
  2020  0EA1                     	;# 
  2021  0EA2                     	;# 
  2022  0EA3                     	;# 
  2023  0EA4                     	;# 
  2024  0EA5                     	;# 
  2025  0EA6                     	;# 
  2026  0EA7                     	;# 
  2027  0F0F                     	;# 
  2028  0F10                     	;# 
  2029  0F11                     	;# 
  2030  0F12                     	;# 
  2031  0F13                     	;# 
  2032  0F14                     	;# 
  2033  0F15                     	;# 
  2034  0F16                     	;# 
  2035  0F17                     	;# 
  2036  0F18                     	;# 
  2037  0F19                     	;# 
  2038  0F1A                     	;# 
  2039  0F1B                     	;# 
  2040  0F1C                     	;# 
  2041  0F1D                     	;# 
  2042  0F1E                     	;# 
  2043  0F1F                     	;# 
  2044  0F20                     	;# 
  2045  0F21                     	;# 
  2046  0F22                     	;# 
  2047  0F23                     	;# 
  2048  0F24                     	;# 
  2049  0F25                     	;# 
  2050  0F26                     	;# 
  2051  0F27                     	;# 
  2052  0F28                     	;# 
  2053  0F29                     	;# 
  2054  0F2A                     	;# 
  2055  0F2B                     	;# 
  2056  0F2C                     	;# 
  2057  0F2D                     	;# 
  2058  0F2E                     	;# 
  2059  0F2F                     	;# 
  2060  0F30                     	;# 
  2061  0F31                     	;# 
  2062  0F32                     	;# 
  2063  0F33                     	;# 
  2064  0F34                     	;# 
  2065  0F35                     	;# 
  2066  0F36                     	;# 
  2067  0F37                     	;# 
  2068  0FE4                     	;# 
  2069  0FE5                     	;# 
  2070  0FE6                     	;# 
  2071  0FE7                     	;# 
  2072  0FE8                     	;# 
  2073  0FE9                     	;# 
  2074  0FEA                     	;# 
  2075  0FEB                     	;# 
  2076  0FED                     	;# 
  2077  0FEE                     	;# 
  2078  0FEF                     	;# 
  2079                           
  2080                           	psect	stringtext
  2081  0014                     __pstringtext:	
  2082  0014                     _dpowers:	
  2083  0014  3401               	retlw	1
  2084  0015  3400               	retlw	0
  2085  0016  340A               	retlw	10
  2086  0017  3400               	retlw	0
  2087  0018  3464               	retlw	100
  2088  0019  3400               	retlw	0
  2089  001A  34E8               	retlw	232
  2090  001B  3403               	retlw	3
  2091  001C  3410               	retlw	16
  2092  001D  3427               	retlw	39
  2093  001E                     __end_of_dpowers:	
  2094  000C                     _PORTA	set	12
  2095  000D                     _PORTB	set	13
  2096  000E                     _PORTC	set	14
  2097  006E                     _RB6	set	110
  2098  008C                     _TXIF	set	140
  2099  019A                     _TXREG	set	410
  2100  0CEF                     _SPEN	set	3311
  2101  0CF4                     _SYNC	set	3316
  2102  0CF5                     _TXEN	set	3317
  2103  001E                     STR_127:	
  2104  001E  3441               	retlw	65	;'A'
  2105  001F  3473               	retlw	115	;'s'
  2106  0020  3473               	retlw	115	;'s'
  2107  0021  3465               	retlw	101	;'e'
  2108  0022  3472               	retlw	114	;'r'
  2109  0023  3474               	retlw	116	;'t'
  2110  0024  3469               	retlw	105	;'i'
  2111  0025  346F               	retlw	111	;'o'
  2112  0026  346E               	retlw	110	;'n'
  2113  0027  3420               	retlw	32	;' '
  2114  0028  3466               	retlw	102	;'f'
  2115  0029  3461               	retlw	97	;'a'
  2116  002A  3469               	retlw	105	;'i'
  2117  002B  346C               	retlw	108	;'l'
  2118  002C  3465               	retlw	101	;'e'
  2119  002D  3464               	retlw	100	;'d'
  2120  002E  343A               	retlw	58	;':'
  2121  002F  3420               	retlw	32	;' '
  2122  0030  3425               	retlw	37	;'%'
  2123  0031  3473               	retlw	115	;'s'
  2124  0032  3420               	retlw	32	;' '
  2125  0033  346C               	retlw	108	;'l'
  2126  0034  3469               	retlw	105	;'i'
  2127  0035  346E               	retlw	110	;'n'
  2128  0036  3465               	retlw	101	;'e'
  2129  0037  3420               	retlw	32	;' '
  2130  0038  3425               	retlw	37	;'%'
  2131  0039  3464               	retlw	100	;'d'
  2132  003A  343A               	retlw	58	;':'
  2133  003B  3420               	retlw	32	;' '
  2134  003C  3422               	retlw	34	;'"'
  2135  003D  3425               	retlw	37	;'%'
  2136  003E  3473               	retlw	115	;'s'
  2137  003F  3422               	retlw	34	;'"'
  2138  0040  340A               	retlw	10
  2139  0041  3400               	retlw	0
  2140  0042                     STR_124:	
  2141  0042  3474               	retlw	116	;'t'
  2142  0043  3465               	retlw	101	;'e'
  2143  0044  3473               	retlw	115	;'s'
  2144  0045  3474               	retlw	116	;'t'
  2145  0046  3420               	retlw	32	;' '
  2146  0047  346F               	retlw	111	;'o'
  2147  0048  3466               	retlw	102	;'f'
  2148  0049  3420               	retlw	32	;' '
  2149  004A  3466               	retlw	102	;'f'
  2150  004B  346C               	retlw	108	;'l'
  2151  004C  3461               	retlw	97	;'a'
  2152  004D  3467               	retlw	103	;'g'
  2153  004E  345F               	retlw	95	;'_'
  2154  004F  3461               	retlw	97	;'a'
  2155  0050  3472               	retlw	114	;'r'
  2156  0051  3472               	retlw	114	;'r'
  2157  0052  3461               	retlw	97	;'a'
  2158  0053  3479               	retlw	121	;'y'
  2159  0054  345F               	retlw	95	;'_'
  2160  0055  3467               	retlw	103	;'g'
  2161  0056  3465               	retlw	101	;'e'
  2162  0057  3474               	retlw	116	;'t'
  2163  0058  345F               	retlw	95	;'_'
  2164  0059  3466               	retlw	102	;'f'
  2165  005A  346C               	retlw	108	;'l'
  2166  005B  3461               	retlw	97	;'a'
  2167  005C  3467               	retlw	103	;'g'
  2168  005D  345F               	retlw	95	;'_'
  2169  005E  3473               	retlw	115	;'s'
  2170  005F  3474               	retlw	116	;'t'
  2171  0060  3461               	retlw	97	;'a'
  2172  0061  3474               	retlw	116	;'t'
  2173  0062  3465               	retlw	101	;'e'
  2174  0063  340A               	retlw	10
  2175  0064  3400               	retlw	0
  2176  0065                     STR_120:	
  2177  0065  3474               	retlw	116	;'t'
  2178  0066  3465               	retlw	101	;'e'
  2179  0067  3473               	retlw	115	;'s'
  2180  0068  3474               	retlw	116	;'t'
  2181  0069  3420               	retlw	32	;' '
  2182  006A  346F               	retlw	111	;'o'
  2183  006B  3466               	retlw	102	;'f'
  2184  006C  3420               	retlw	32	;' '
  2185  006D  3466               	retlw	102	;'f'
  2186  006E  346C               	retlw	108	;'l'
  2187  006F  3461               	retlw	97	;'a'
  2188  0070  3467               	retlw	103	;'g'
  2189  0071  345F               	retlw	95	;'_'
  2190  0072  3461               	retlw	97	;'a'
  2191  0073  3472               	retlw	114	;'r'
  2192  0074  3472               	retlw	114	;'r'
  2193  0075  3461               	retlw	97	;'a'
  2194  0076  3479               	retlw	121	;'y'
  2195  0077  345F               	retlw	95	;'_'
  2196  0078  3473               	retlw	115	;'s'
  2197  0079  3465               	retlw	101	;'e'
  2198  007A  3474               	retlw	116	;'t'
  2199  007B  345F               	retlw	95	;'_'
  2200  007C  346E               	retlw	110	;'n'
  2201  007D  3475               	retlw	117	;'u'
  2202  007E  346D               	retlw	109	;'m'
  2203  007F  3462               	retlw	98	;'b'
  2204  0080  3465               	retlw	101	;'e'
  2205  0081  3472               	retlw	114	;'r'
  2206  0082  3473               	retlw	115	;'s'
  2207  0083  340A               	retlw	10
  2208  0084  3400               	retlw	0
  2209  0085                     STR_42:	
  2210  0085  3466               	retlw	102	;'f'
  2211  0086  346C               	retlw	108	;'l'
  2212  0087  3461               	retlw	97	;'a'
  2213  0088  3467               	retlw	103	;'g'
  2214  0089  345F               	retlw	95	;'_'
  2215  008A  3461               	retlw	97	;'a'
  2216  008B  3472               	retlw	114	;'r'
  2217  008C  3472               	retlw	114	;'r'
  2218  008D  3461               	retlw	97	;'a'
  2219  008E  3479               	retlw	121	;'y'
  2220  008F  345F               	retlw	95	;'_'
  2221  0090  3476               	retlw	118	;'v'
  2222  0091  3461               	retlw	97	;'a'
  2223  0092  346C               	retlw	108	;'l'
  2224  0093  3469               	retlw	105	;'i'
  2225  0094  3464               	retlw	100	;'d'
  2226  0095  3428               	retlw	40	;'('
  2227  0096  3466               	retlw	102	;'f'
  2228  0097  346C               	retlw	108	;'l'
  2229  0098  3461               	retlw	97	;'a'
  2230  0099  3467               	retlw	103	;'g'
  2231  009A  345F               	retlw	95	;'_'
  2232  009B  3461               	retlw	97	;'a'
  2233  009C  3472               	retlw	114	;'r'
  2234  009D  3472               	retlw	114	;'r'
  2235  009E  3461               	retlw	97	;'a'
  2236  009F  3479               	retlw	121	;'y'
  2237  00A0  3429               	retlw	41	;')'
  2238  00A1  343D               	retlw	61	;'='
  2239  00A2  343D               	retlw	61	;'='
  2240  00A3  3431               	retlw	49	;'1'
  2241  00A4  3400               	retlw	0
  2242  00A5                     STR_116:	
  2243  00A5  3474               	retlw	116	;'t'
  2244  00A6  3465               	retlw	101	;'e'
  2245  00A7  3473               	retlw	115	;'s'
  2246  00A8  3474               	retlw	116	;'t'
  2247  00A9  3420               	retlw	32	;' '
  2248  00AA  346F               	retlw	111	;'o'
  2249  00AB  3466               	retlw	102	;'f'
  2250  00AC  3420               	retlw	32	;' '
  2251  00AD  3466               	retlw	102	;'f'
  2252  00AE  346C               	retlw	108	;'l'
  2253  00AF  3461               	retlw	97	;'a'
  2254  00B0  3467               	retlw	103	;'g'
  2255  00B1  345F               	retlw	95	;'_'
  2256  00B2  3461               	retlw	97	;'a'
  2257  00B3  3472               	retlw	114	;'r'
  2258  00B4  3472               	retlw	114	;'r'
  2259  00B5  3461               	retlw	97	;'a'
  2260  00B6  3479               	retlw	121	;'y'
  2261  00B7  345F               	retlw	95	;'_'
  2262  00B8  3469               	retlw	105	;'i'
  2263  00B9  346E               	retlw	110	;'n'
  2264  00BA  3469               	retlw	105	;'i'
  2265  00BB  3474               	retlw	116	;'t'
  2266  00BC  3469               	retlw	105	;'i'
  2267  00BD  3461               	retlw	97	;'a'
  2268  00BE  346C               	retlw	108	;'l'
  2269  00BF  3469               	retlw	105	;'i'
  2270  00C0  347A               	retlw	122	;'z'
  2271  00C1  3465               	retlw	101	;'e'
  2272  00C2  340A               	retlw	10
  2273  00C3  3400               	retlw	0
  2274  00C4                     STR_125:	
  2275  00C4  3466               	retlw	102	;'f'
  2276  00C5  346C               	retlw	108	;'l'
  2277  00C6  3461               	retlw	97	;'a'
  2278  00C7  3467               	retlw	103	;'g'
  2279  00C8  345F               	retlw	95	;'_'
  2280  00C9  3461               	retlw	97	;'a'
  2281  00CA  3472               	retlw	114	;'r'
  2282  00CB  3472               	retlw	114	;'r'
  2283  00CC  3461               	retlw	97	;'a'
  2284  00CD  3479               	retlw	121	;'y'
  2285  00CE  345F               	retlw	95	;'_'
  2286  00CF  3467               	retlw	103	;'g'
  2287  00D0  3465               	retlw	101	;'e'
  2288  00D1  3474               	retlw	116	;'t'
  2289  00D2  345F               	retlw	95	;'_'
  2290  00D3  3466               	retlw	102	;'f'
  2291  00D4  346C               	retlw	108	;'l'
  2292  00D5  3461               	retlw	97	;'a'
  2293  00D6  3467               	retlw	103	;'g'
  2294  00D7  345F               	retlw	95	;'_'
  2295  00D8  3473               	retlw	115	;'s'
  2296  00D9  3474               	retlw	116	;'t'
  2297  00DA  3461               	retlw	97	;'a'
  2298  00DB  3474               	retlw	116	;'t'
  2299  00DC  3465               	retlw	101	;'e'
  2300  00DD  3420               	retlw	32	;' '
  2301  00DE  344B               	retlw	75	;'K'
  2302  00DF  344F               	retlw	79	;'O'
  2303  00E0  340A               	retlw	10
  2304  00E1  3400               	retlw	0
  2305  00E2                     STR_36:	
  2306  00E2  346E               	retlw	110	;'n'
  2307  00E3  3461               	retlw	97	;'a'
  2308  00E4  346D               	retlw	109	;'m'
  2309  00E5  3465               	retlw	101	;'e'
  2310  00E6  343C               	retlw	60	;'<'
  2311  00E7  3466               	retlw	102	;'f'
  2312  00E8  346C               	retlw	108	;'l'
  2313  00E9  3461               	retlw	97	;'a'
  2314  00EA  3467               	retlw	103	;'g'
  2315  00EB  345F               	retlw	95	;'_'
  2316  00EC  3461               	retlw	97	;'a'
  2317  00ED  3472               	retlw	114	;'r'
  2318  00EE  3472               	retlw	114	;'r'
  2319  00EF  3461               	retlw	97	;'a'
  2320  00F0  3479               	retlw	121	;'y'
  2321  00F1  342D               	retlw	45	;'-'
  2322  00F2  343E               	retlw	62	;'>'
  2323  00F3  3466               	retlw	102	;'f'
  2324  00F4  346C               	retlw	108	;'l'
  2325  00F5  3461               	retlw	97	;'a'
  2326  00F6  3467               	retlw	103	;'g'
  2327  00F7  3473               	retlw	115	;'s'
  2328  00F8  345F               	retlw	95	;'_'
  2329  00F9  346E               	retlw	110	;'n'
  2330  00FA  3475               	retlw	117	;'u'
  2331  00FB  346D               	retlw	109	;'m'
  2332  00FC  3462               	retlw	98	;'b'
  2333  00FD  3465               	retlw	101	;'e'
  2334  00FE  3472               	retlw	114	;'r'
  2335  00FF  3400               	retlw	0
  2336  0100                     STR_122:	
  2337  0100  3474               	retlw	116	;'t'
  2338  0101  3465               	retlw	101	;'e'
  2339  0102  3473               	retlw	115	;'s'
  2340  0103  3474               	retlw	116	;'t'
  2341  0104  3420               	retlw	32	;' '
  2342  0105  346F               	retlw	111	;'o'
  2343  0106  3466               	retlw	102	;'f'
  2344  0107  3420               	retlw	32	;' '
  2345  0108  3466               	retlw	102	;'f'
  2346  0109  346C               	retlw	108	;'l'
  2347  010A  3461               	retlw	97	;'a'
  2348  010B  3467               	retlw	103	;'g'
  2349  010C  345F               	retlw	95	;'_'
  2350  010D  3461               	retlw	97	;'a'
  2351  010E  3472               	retlw	114	;'r'
  2352  010F  3472               	retlw	114	;'r'
  2353  0110  3461               	retlw	97	;'a'
  2354  0111  3479               	retlw	121	;'y'
  2355  0112  345F               	retlw	95	;'_'
  2356  0113  3473               	retlw	115	;'s'
  2357  0114  3465               	retlw	101	;'e'
  2358  0115  3474               	retlw	116	;'t'
  2359  0116  345F               	retlw	95	;'_'
  2360  0117  3466               	retlw	102	;'f'
  2361  0118  346C               	retlw	108	;'l'
  2362  0119  3461               	retlw	97	;'a'
  2363  011A  3467               	retlw	103	;'g'
  2364  011B  340A               	retlw	10
  2365  011C  3400               	retlw	0
  2366  011D                     STR_32:	
  2367  011D  3466               	retlw	102	;'f'
  2368  011E  346C               	retlw	108	;'l'
  2369  011F  3461               	retlw	97	;'a'
  2370  0120  3467               	retlw	103	;'g'
  2371  0121  345F               	retlw	95	;'_'
  2372  0122  3461               	retlw	97	;'a'
  2373  0123  3472               	retlw	114	;'r'
  2374  0124  3472               	retlw	114	;'r'
  2375  0125  3461               	retlw	97	;'a'
  2376  0126  3479               	retlw	121	;'y'
  2377  0127  345F               	retlw	95	;'_'
  2378  0128  3476               	retlw	118	;'v'
  2379  0129  3461               	retlw	97	;'a'
  2380  012A  346C               	retlw	108	;'l'
  2381  012B  3469               	retlw	105	;'i'
  2382  012C  3464               	retlw	100	;'d'
  2383  012D  3428               	retlw	40	;'('
  2384  012E  3466               	retlw	102	;'f'
  2385  012F  346C               	retlw	108	;'l'
  2386  0130  3461               	retlw	97	;'a'
  2387  0131  3467               	retlw	103	;'g'
  2388  0132  345F               	retlw	95	;'_'
  2389  0133  3461               	retlw	97	;'a'
  2390  0134  3472               	retlw	114	;'r'
  2391  0135  3472               	retlw	114	;'r'
  2392  0136  3461               	retlw	97	;'a'
  2393  0137  3479               	retlw	121	;'y'
  2394  0138  3429               	retlw	41	;')'
  2395  0139  3400               	retlw	0
  2396  013A                     STR_70:	
  2397  013A  3473               	retlw	115	;'s'
  2398  013B  346F               	retlw	111	;'o'
  2399  013C  3466               	retlw	102	;'f'
  2400  013D  3474               	retlw	116	;'t'
  2401  013E  3477               	retlw	119	;'w'
  2402  013F  3461               	retlw	97	;'a'
  2403  0140  3472               	retlw	114	;'r'
  2404  0141  3465               	retlw	101	;'e'
  2405  0142  345F               	retlw	95	;'_'
  2406  0143  3474               	retlw	116	;'t'
  2407  0144  3469               	retlw	105	;'i'
  2408  0145  346D               	retlw	109	;'m'
  2409  0146  3465               	retlw	101	;'e'
  2410  0147  3472               	retlw	114	;'r'
  2411  0148  345F               	retlw	95	;'_'
  2412  0149  3476               	retlw	118	;'v'
  2413  014A  3461               	retlw	97	;'a'
  2414  014B  346C               	retlw	108	;'l'
  2415  014C  3469               	retlw	105	;'i'
  2416  014D  3464               	retlw	100	;'d'
  2417  014E  3428               	retlw	40	;'('
  2418  014F  3474               	retlw	116	;'t'
  2419  0150  3469               	retlw	105	;'i'
  2420  0151  346D               	retlw	109	;'m'
  2421  0152  3465               	retlw	101	;'e'
  2422  0153  3472               	retlw	114	;'r'
  2423  0154  3429               	retlw	41	;')'
  2424  0155  3400               	retlw	0
  2425  0156                     STR_121:	
  2426  0156  3466               	retlw	102	;'f'
  2427  0157  346C               	retlw	108	;'l'
  2428  0158  3461               	retlw	97	;'a'
  2429  0159  3467               	retlw	103	;'g'
  2430  015A  345F               	retlw	95	;'_'
  2431  015B  3461               	retlw	97	;'a'
  2432  015C  3472               	retlw	114	;'r'
  2433  015D  3472               	retlw	114	;'r'
  2434  015E  3461               	retlw	97	;'a'
  2435  015F  3479               	retlw	121	;'y'
  2436  0160  345F               	retlw	95	;'_'
  2437  0161  3473               	retlw	115	;'s'
  2438  0162  3465               	retlw	101	;'e'
  2439  0163  3474               	retlw	116	;'t'
  2440  0164  345F               	retlw	95	;'_'
  2441  0165  346E               	retlw	110	;'n'
  2442  0166  3475               	retlw	117	;'u'
  2443  0167  346D               	retlw	109	;'m'
  2444  0168  3462               	retlw	98	;'b'
  2445  0169  3465               	retlw	101	;'e'
  2446  016A  3472               	retlw	114	;'r'
  2447  016B  3473               	retlw	115	;'s'
  2448  016C  3420               	retlw	32	;' '
  2449  016D  344B               	retlw	75	;'K'
  2450  016E  344F               	retlw	79	;'O'
  2451  016F  340A               	retlw	10
  2452  0170  3400               	retlw	0
  2453  0171                     STR_100:	
  2454  0171  346F               	retlw	111	;'o'
  2455  0172  3476               	retlw	118	;'v'
  2456  0173  3465               	retlw	101	;'e'
  2457  0174  3472               	retlw	114	;'r'
  2458  0175  3466               	retlw	102	;'f'
  2459  0176  346C               	retlw	108	;'l'
  2460  0177  346F               	retlw	111	;'o'
  2461  0178  3477               	retlw	119	;'w'
  2462  0179  343D               	retlw	61	;'='
  2463  017A  343D               	retlw	61	;'='
  2464  017B  3430               	retlw	48	;'0'
  2465  017C  3420               	retlw	32	;' '
  2466  017D  347C               	retlw	124	;'|'
  2467  017E  347C               	retlw	124	;'|'
  2468  017F  3420               	retlw	32	;' '
  2469  0180  346F               	retlw	111	;'o'
  2470  0181  3476               	retlw	118	;'v'
  2471  0182  3465               	retlw	101	;'e'
  2472  0183  3472               	retlw	114	;'r'
  2473  0184  3466               	retlw	102	;'f'
  2474  0185  346C               	retlw	108	;'l'
  2475  0186  346F               	retlw	111	;'o'
  2476  0187  3477               	retlw	119	;'w'
  2477  0188  343D               	retlw	61	;'='
  2478  0189  343D               	retlw	61	;'='
  2479  018A  3431               	retlw	49	;'1'
  2480  018B  3400               	retlw	0
  2481  018C                     STR_108:	
  2482  018C  3474               	retlw	116	;'t'
  2483  018D  3469               	retlw	105	;'i'
  2484  018E  346D               	retlw	109	;'m'
  2485  018F  3465               	retlw	101	;'e'
  2486  0190  3472               	retlw	114	;'r'
  2487  0191  342D               	retlw	45	;'-'
  2488  0192  343E               	retlw	62	;'>'
  2489  0193  3472               	retlw	114	;'r'
  2490  0194  3465               	retlw	101	;'e'
  2491  0195  3467               	retlw	103	;'g'
  2492  0196  3469               	retlw	105	;'i'
  2493  0197  343D               	retlw	61	;'='
  2494  0198  343D               	retlw	61	;'='
  2495  0199  3474               	retlw	116	;'t'
  2496  019A  3469               	retlw	105	;'i'
  2497  019B  346D               	retlw	109	;'m'
  2498  019C  3465               	retlw	101	;'e'
  2499  019D  3472               	retlw	114	;'r'
  2500  019E  342D               	retlw	45	;'-'
  2501  019F  343E               	retlw	62	;'>'
  2502  01A0  3470               	retlw	112	;'p'
  2503  01A1  3472               	retlw	114	;'r'
  2504  01A2  3465               	retlw	101	;'e'
  2505  01A3  3473               	retlw	115	;'s'
  2506  01A4  3465               	retlw	101	;'e'
  2507  01A5  3474               	retlw	116	;'t'
  2508  01A6  3400               	retlw	0
  2509  01A7                     STR_117:	
  2510  01A7  3466               	retlw	102	;'f'
  2511  01A8  346C               	retlw	108	;'l'
  2512  01A9  3461               	retlw	97	;'a'
  2513  01AA  3467               	retlw	103	;'g'
  2514  01AB  345F               	retlw	95	;'_'
  2515  01AC  3461               	retlw	97	;'a'
  2516  01AD  3472               	retlw	114	;'r'
  2517  01AE  3472               	retlw	114	;'r'
  2518  01AF  3461               	retlw	97	;'a'
  2519  01B0  3479               	retlw	121	;'y'
  2520  01B1  345F               	retlw	95	;'_'
  2521  01B2  3469               	retlw	105	;'i'
  2522  01B3  346E               	retlw	110	;'n'
  2523  01B4  3469               	retlw	105	;'i'
  2524  01B5  3474               	retlw	116	;'t'
  2525  01B6  3469               	retlw	105	;'i'
  2526  01B7  3461               	retlw	97	;'a'
  2527  01B8  346C               	retlw	108	;'l'
  2528  01B9  3469               	retlw	105	;'i'
  2529  01BA  347A               	retlw	122	;'z'
  2530  01BB  3465               	retlw	101	;'e'
  2531  01BC  3420               	retlw	32	;' '
  2532  01BD  344B               	retlw	75	;'K'
  2533  01BE  344F               	retlw	79	;'O'
  2534  01BF  340A               	retlw	10
  2535  01C0  3400               	retlw	0
  2536  01C1                     STR_118:	
  2537  01C1  3474               	retlw	116	;'t'
  2538  01C2  3465               	retlw	101	;'e'
  2539  01C3  3473               	retlw	115	;'s'
  2540  01C4  3474               	retlw	116	;'t'
  2541  01C5  3420               	retlw	32	;' '
  2542  01C6  346F               	retlw	111	;'o'
  2543  01C7  3466               	retlw	102	;'f'
  2544  01C8  3420               	retlw	32	;' '
  2545  01C9  3466               	retlw	102	;'f'
  2546  01CA  346C               	retlw	108	;'l'
  2547  01CB  3461               	retlw	97	;'a'
  2548  01CC  3467               	retlw	103	;'g'
  2549  01CD  345F               	retlw	95	;'_'
  2550  01CE  3461               	retlw	97	;'a'
  2551  01CF  3472               	retlw	114	;'r'
  2552  01D0  3472               	retlw	114	;'r'
  2553  01D1  3461               	retlw	97	;'a'
  2554  01D2  3479               	retlw	121	;'y'
  2555  01D3  345F               	retlw	95	;'_'
  2556  01D4  3476               	retlw	118	;'v'
  2557  01D5  3461               	retlw	97	;'a'
  2558  01D6  346C               	retlw	108	;'l'
  2559  01D7  3469               	retlw	105	;'i'
  2560  01D8  3464               	retlw	100	;'d'
  2561  01D9  340A               	retlw	10
  2562  01DA  3400               	retlw	0
  2563  01DB                     STR_111:	
  2564  01DB  3474               	retlw	116	;'t'
  2565  01DC  3465               	retlw	101	;'e'
  2566  01DD  3473               	retlw	115	;'s'
  2567  01DE  3474               	retlw	116	;'t'
  2568  01DF  3420               	retlw	32	;' '
  2569  01E0  346F               	retlw	111	;'o'
  2570  01E1  3466               	retlw	102	;'f'
  2571  01E2  3420               	retlw	32	;' '
  2572  01E3  3474               	retlw	116	;'t'
  2573  01E4  3469               	retlw	105	;'i'
  2574  01E5  346D               	retlw	109	;'m'
  2575  01E6  3465               	retlw	101	;'e'
  2576  01E7  345F               	retlw	95	;'_'
  2577  01E8  3474               	retlw	116	;'t'
  2578  01E9  3479               	retlw	121	;'y'
  2579  01EA  3470               	retlw	112	;'p'
  2580  01EB  3465               	retlw	101	;'e'
  2581  01EC  345F               	retlw	95	;'_'
  2582  01ED  3476               	retlw	118	;'v'
  2583  01EE  3461               	retlw	97	;'a'
  2584  01EF  346C               	retlw	108	;'l'
  2585  01F0  3469               	retlw	105	;'i'
  2586  01F1  3464               	retlw	100	;'d'
  2587  01F2  340A               	retlw	10
  2588  01F3  3400               	retlw	0
  2589  01F4                     STR_123:	
  2590  01F4  3466               	retlw	102	;'f'
  2591  01F5  346C               	retlw	108	;'l'
  2592  01F6  3461               	retlw	97	;'a'
  2593  01F7  3467               	retlw	103	;'g'
  2594  01F8  345F               	retlw	95	;'_'
  2595  01F9  3461               	retlw	97	;'a'
  2596  01FA  3472               	retlw	114	;'r'
  2597  01FB  3472               	retlw	114	;'r'
  2598  01FC  3461               	retlw	97	;'a'
  2599  01FD  3479               	retlw	121	;'y'
  2600  01FE  345F               	retlw	95	;'_'
  2601  01FF  3473               	retlw	115	;'s'
  2602  0200  3465               	retlw	101	;'e'
  2603  0201  3474               	retlw	116	;'t'
  2604  0202  345F               	retlw	95	;'_'
  2605  0203  3466               	retlw	102	;'f'
  2606  0204  346C               	retlw	108	;'l'
  2607  0205  3461               	retlw	97	;'a'
  2608  0206  3467               	retlw	103	;'g'
  2609  0207  3420               	retlw	32	;' '
  2610  0208  344B               	retlw	75	;'K'
  2611  0209  344F               	retlw	79	;'O'
  2612  020A  340A               	retlw	10
  2613  020B  3400               	retlw	0
  2614  020C                     STR_92:	
  2615  020C  3465               	retlw	101	;'e'
  2616  020D  346E               	retlw	110	;'n'
  2617  020E  3461               	retlw	97	;'a'
  2618  020F  3462               	retlw	98	;'b'
  2619  0210  346C               	retlw	108	;'l'
  2620  0211  3465               	retlw	101	;'e'
  2621  0212  343D               	retlw	61	;'='
  2622  0213  343D               	retlw	61	;'='
  2623  0214  3430               	retlw	48	;'0'
  2624  0215  3420               	retlw	32	;' '
  2625  0216  347C               	retlw	124	;'|'
  2626  0217  347C               	retlw	124	;'|'
  2627  0218  3420               	retlw	32	;' '
  2628  0219  3465               	retlw	101	;'e'
  2629  021A  346E               	retlw	110	;'n'
  2630  021B  3461               	retlw	97	;'a'
  2631  021C  3462               	retlw	98	;'b'
  2632  021D  346C               	retlw	108	;'l'
  2633  021E  3465               	retlw	101	;'e'
  2634  021F  343D               	retlw	61	;'='
  2635  0220  343D               	retlw	61	;'='
  2636  0221  3431               	retlw	49	;'1'
  2637  0222  3400               	retlw	0
  2638  0223                     STR_119:	
  2639  0223  3466               	retlw	102	;'f'
  2640  0224  346C               	retlw	108	;'l'
  2641  0225  3461               	retlw	97	;'a'
  2642  0226  3467               	retlw	103	;'g'
  2643  0227  345F               	retlw	95	;'_'
  2644  0228  3461               	retlw	97	;'a'
  2645  0229  3472               	retlw	114	;'r'
  2646  022A  3472               	retlw	114	;'r'
  2647  022B  3461               	retlw	97	;'a'
  2648  022C  3479               	retlw	121	;'y'
  2649  022D  345F               	retlw	95	;'_'
  2650  022E  3476               	retlw	118	;'v'
  2651  022F  3461               	retlw	97	;'a'
  2652  0230  346C               	retlw	108	;'l'
  2653  0231  3469               	retlw	105	;'i'
  2654  0232  3464               	retlw	100	;'d'
  2655  0233  3420               	retlw	32	;' '
  2656  0234  344B               	retlw	75	;'K'
  2657  0235  344F               	retlw	79	;'O'
  2658  0236  340A               	retlw	10
  2659  0237  3400               	retlw	0
  2660  0238                     STR_22:	
  2661  0238  3473               	retlw	115	;'s'
  2662  0239  3474               	retlw	116	;'t'
  2663  023A  3461               	retlw	97	;'a'
  2664  023B  3474               	retlw	116	;'t'
  2665  023C  3465               	retlw	101	;'e'
  2666  023D  343D               	retlw	61	;'='
  2667  023E  343D               	retlw	61	;'='
  2668  023F  3430               	retlw	48	;'0'
  2669  0240  3420               	retlw	32	;' '
  2670  0241  347C               	retlw	124	;'|'
  2671  0242  347C               	retlw	124	;'|'
  2672  0243  3420               	retlw	32	;' '
  2673  0244  3473               	retlw	115	;'s'
  2674  0245  3474               	retlw	116	;'t'
  2675  0246  3461               	retlw	97	;'a'
  2676  0247  3474               	retlw	116	;'t'
  2677  0248  3465               	retlw	101	;'e'
  2678  0249  343D               	retlw	61	;'='
  2679  024A  343D               	retlw	61	;'='
  2680  024B  3431               	retlw	49	;'1'
  2681  024C  3400               	retlw	0
  2682  024D                     STR_60:	
  2683  024D  3469               	retlw	105	;'i'
  2684  024E  346E               	retlw	110	;'n'
  2685  024F  3470               	retlw	112	;'p'
  2686  0250  3475               	retlw	117	;'u'
  2687  0251  3474               	retlw	116	;'t'
  2688  0252  345F               	retlw	95	;'_'
  2689  0253  3476               	retlw	118	;'v'
  2690  0254  3461               	retlw	97	;'a'
  2691  0255  346C               	retlw	108	;'l'
  2692  0256  3469               	retlw	105	;'i'
  2693  0257  3464               	retlw	100	;'d'
  2694  0258  3428               	retlw	40	;'('
  2695  0259  3469               	retlw	105	;'i'
  2696  025A  346E               	retlw	110	;'n'
  2697  025B  3470               	retlw	112	;'p'
  2698  025C  3475               	retlw	117	;'u'
  2699  025D  3474               	retlw	116	;'t'
  2700  025E  3429               	retlw	41	;')'
  2701  025F  3400               	retlw	0
  2702  0260                     STR_65:	
  2703  0260  3473               	retlw	115	;'s'
  2704  0261  346F               	retlw	111	;'o'
  2705  0262  3466               	retlw	102	;'f'
  2706  0263  3474               	retlw	116	;'t'
  2707  0264  3477               	retlw	119	;'w'
  2708  0265  3461               	retlw	97	;'a'
  2709  0266  3472               	retlw	114	;'r'
  2710  0267  3465               	retlw	101	;'e'
  2711  0268  345F               	retlw	95	;'_'
  2712  0269  3474               	retlw	116	;'t'
  2713  026A  3469               	retlw	105	;'i'
  2714  026B  346D               	retlw	109	;'m'
  2715  026C  3465               	retlw	101	;'e'
  2716  026D  3472               	retlw	114	;'r'
  2717  026E  342E               	retlw	46	;'.'
  2718  026F  3463               	retlw	99	;'c'
  2719  0270  3400               	retlw	0
  2720  0271                     STR_6:	
  2721  0271  3476               	retlw	118	;'v'
  2722  0272  3461               	retlw	97	;'a'
  2723  0273  346C               	retlw	108	;'l'
  2724  0274  343D               	retlw	61	;'='
  2725  0275  343D               	retlw	61	;'='
  2726  0276  3430               	retlw	48	;'0'
  2727  0277  3420               	retlw	32	;' '
  2728  0278  347C               	retlw	124	;'|'
  2729  0279  347C               	retlw	124	;'|'
  2730  027A  3420               	retlw	32	;' '
  2731  027B  3476               	retlw	118	;'v'
  2732  027C  3461               	retlw	97	;'a'
  2733  027D  346C               	retlw	108	;'l'
  2734  027E  343D               	retlw	61	;'='
  2735  027F  343D               	retlw	61	;'='
  2736  0280  3431               	retlw	49	;'1'
  2737  0281  3400               	retlw	0
  2738  0282                     STR_28:	
  2739  0282  3466               	retlw	102	;'f'
  2740  0283  346C               	retlw	108	;'l'
  2741  0284  3461               	retlw	97	;'a'
  2742  0285  3467               	retlw	103	;'g'
  2743  0286  345F               	retlw	95	;'_'
  2744  0287  3461               	retlw	97	;'a'
  2745  0288  3472               	retlw	114	;'r'
  2746  0289  3472               	retlw	114	;'r'
  2747  028A  3461               	retlw	97	;'a'
  2748  028B  3479               	retlw	121	;'y'
  2749  028C  3421               	retlw	33	;'!'
  2750  028D  343D               	retlw	61	;'='
  2751  028E  3428               	retlw	40	;'('
  2752  028F  3430               	retlw	48	;'0'
  2753  0290  3429               	retlw	41	;')'
  2754  0291  3400               	retlw	0
  2755  0292                     STR_27:	
  2756  0292  3466               	retlw	102	;'f'
  2757  0293  346C               	retlw	108	;'l'
  2758  0294  3461               	retlw	97	;'a'
  2759  0295  3467               	retlw	103	;'g'
  2760  0296  345F               	retlw	95	;'_'
  2761  0297  3461               	retlw	97	;'a'
  2762  0298  3472               	retlw	114	;'r'
  2763  0299  3472               	retlw	114	;'r'
  2764  029A  3461               	retlw	97	;'a'
  2765  029B  3479               	retlw	121	;'y'
  2766  029C  342E               	retlw	46	;'.'
  2767  029D  3463               	retlw	99	;'c'
  2768  029E  3400               	retlw	0
  2769  029F                     STR_1:	
  2770  029F  3462               	retlw	98	;'b'
  2771  02A0  3479               	retlw	121	;'y'
  2772  02A1  3474               	retlw	116	;'t'
  2773  02A2  3465               	retlw	101	;'e'
  2774  02A3  345F               	retlw	95	;'_'
  2775  02A4  3475               	retlw	117	;'u'
  2776  02A5  346E               	retlw	110	;'n'
  2777  02A6  3469               	retlw	105	;'i'
  2778  02A7  346F               	retlw	111	;'o'
  2779  02A8  346E               	retlw	110	;'n'
  2780  02A9  342E               	retlw	46	;'.'
  2781  02AA  3463               	retlw	99	;'c'
  2782  02AB  3400               	retlw	0
  2783  02AC                     STR_2:	
  2784  02AC  3462               	retlw	98	;'b'
  2785  02AD  3479               	retlw	121	;'y'
  2786  02AE  3474               	retlw	116	;'t'
  2787  02AF  3465               	retlw	101	;'e'
  2788  02B0  345F               	retlw	95	;'_'
  2789  02B1  3475               	retlw	117	;'u'
  2790  02B2  3421               	retlw	33	;'!'
  2791  02B3  343D               	retlw	61	;'='
  2792  02B4  3428               	retlw	40	;'('
  2793  02B5  3430               	retlw	48	;'0'
  2794  02B6  3429               	retlw	41	;')'
  2795  02B7  3400               	retlw	0
  2796  02B8                     STR_112:	
  2797  02B8  3473               	retlw	115	;'s'
  2798  02B9  3465               	retlw	101	;'e'
  2799  02BA  3463               	retlw	99	;'c'
  2800  02BB  346F               	retlw	111	;'o'
  2801  02BC  346E               	retlw	110	;'n'
  2802  02BD  3464               	retlw	100	;'d'
  2803  02BE  3420               	retlw	32	;' '
  2804  02BF  344B               	retlw	75	;'K'
  2805  02C0  344F               	retlw	79	;'O'
  2806  02C1  340A               	retlw	10
  2807  02C2  3400               	retlw	0
  2808  02C3                     STR_113:	
  2809  02C3  346D               	retlw	109	;'m'
  2810  02C4  3469               	retlw	105	;'i'
  2811  02C5  346E               	retlw	110	;'n'
  2812  02C6  3475               	retlw	117	;'u'
  2813  02C7  3474               	retlw	116	;'t'
  2814  02C8  3465               	retlw	101	;'e'
  2815  02C9  3420               	retlw	32	;' '
  2816  02CA  344B               	retlw	75	;'K'
  2817  02CB  344F               	retlw	79	;'O'
  2818  02CC  340A               	retlw	10
  2819  02CD  3400               	retlw	0
  2820  02CE                     STR_66:	
  2821  02CE  3474               	retlw	116	;'t'
  2822  02CF  3469               	retlw	105	;'i'
  2823  02D0  346D               	retlw	109	;'m'
  2824  02D1  3465               	retlw	101	;'e'
  2825  02D2  3472               	retlw	114	;'r'
  2826  02D3  3421               	retlw	33	;'!'
  2827  02D4  343D               	retlw	61	;'='
  2828  02D5  3428               	retlw	40	;'('
  2829  02D6  3430               	retlw	48	;'0'
  2830  02D7  3429               	retlw	41	;')'
  2831  02D8  3400               	retlw	0
  2832  02D9                     STR_58:	
  2833  02D9  3469               	retlw	105	;'i'
  2834  02DA  346E               	retlw	110	;'n'
  2835  02DB  3470               	retlw	112	;'p'
  2836  02DC  3475               	retlw	117	;'u'
  2837  02DD  3474               	retlw	116	;'t'
  2838  02DE  3421               	retlw	33	;'!'
  2839  02DF  343D               	retlw	61	;'='
  2840  02E0  3428               	retlw	40	;'('
  2841  02E1  3430               	retlw	48	;'0'
  2842  02E2  3429               	retlw	41	;')'
  2843  02E3  3400               	retlw	0
  2844  02E4                     STR_4:	
  2845  02E4  3462               	retlw	98	;'b'
  2846  02E5  3469               	retlw	105	;'i'
  2847  02E6  3474               	retlw	116	;'t'
  2848  02E7  345F               	retlw	95	;'_'
  2849  02E8  346E               	retlw	110	;'n'
  2850  02E9  3462               	retlw	98	;'b'
  2851  02EA  3472               	retlw	114	;'r'
  2852  02EB  343C               	retlw	60	;'<'
  2853  02EC  3438               	retlw	56	;'8'
  2854  02ED  3400               	retlw	0
  2855  02EE                     STR_114:	
  2856  02EE  3468               	retlw	104	;'h'
  2857  02EF  346F               	retlw	111	;'o'
  2858  02F0  3475               	retlw	117	;'u'
  2859  02F1  3472               	retlw	114	;'r'
  2860  02F2  3420               	retlw	32	;' '
  2861  02F3  344B               	retlw	75	;'K'
  2862  02F4  344F               	retlw	79	;'O'
  2863  02F5  340A               	retlw	10
  2864  02F6  3400               	retlw	0
  2865  02F7                     STR_10:	
  2866  02F7  3470               	retlw	112	;'p'
  2867  02F8  3474               	retlw	116	;'t'
  2868  02F9  3462               	retlw	98	;'b'
  2869  02FA  3421               	retlw	33	;'!'
  2870  02FB  343D               	retlw	61	;'='
  2871  02FC  3428               	retlw	40	;'('
  2872  02FD  3430               	retlw	48	;'0'
  2873  02FE  3429               	retlw	41	;')'
  2874  02FF  3400               	retlw	0
  2875  0300                     STR_57:	
  2876  0300  3469               	retlw	105	;'i'
  2877  0301  346E               	retlw	110	;'n'
  2878  0302  3470               	retlw	112	;'p'
  2879  0303  3475               	retlw	117	;'u'
  2880  0304  3474               	retlw	116	;'t'
  2881  0305  342E               	retlw	46	;'.'
  2882  0306  3463               	retlw	99	;'c'
  2883  0307  3400               	retlw	0
  2884  0308                     STR_126:	
  2885  0308  3428               	retlw	40	;'('
  2886  0309  346E               	retlw	110	;'n'
  2887  030A  3475               	retlw	117	;'u'
  2888  030B  346C               	retlw	108	;'l'
  2889  030C  346C               	retlw	108	;'l'
  2890  030D  3429               	retlw	41	;')'
  2891  030E  3400               	retlw	0
  2892  030F                     STR_115:	
  2893  030F  3425               	retlw	37	;'%'
  2894  0310  3464               	retlw	100	;'d'
  2895  0311  3420               	retlw	32	;' '
  2896  0312  344B               	retlw	75	;'K'
  2897  0313  344F               	retlw	79	;'O'
  2898  0314  340A               	retlw	10
  2899  0315  3400               	retlw	0
  2900  0316                     STR_46:	
  2901  0316  346E               	retlw	110	;'n'
  2902  0317  3462               	retlw	98	;'b'
  2903  0318  3472               	retlw	114	;'r'
  2904  0319  343C               	retlw	60	;'<'
  2905  031A  343D               	retlw	61	;'='
  2906  031B  3438               	retlw	56	;'8'
  2907  031C  3400               	retlw	0
  2908  02F7                     
  2909                           ; #config settings
  2910  0000                     
  2911                           	psect	cinit
  2912  000F                     start_initialization:	
  2913  000F                     __initialization:	
  2914                           
  2915                           ; Clear objects allocated to BANK0
  2916  000F  01C8               	clrf	__pbssBANK0& (0+127)
  2917  0010                     end_of_initialization:	
  2918                           ;End of C runtime variable initialization code
  2919                           
  2920  0010                     __end_of__initialization:	
  2921  0010  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2922  0011  0020               	movlb	0
  2923  0012  318F  2F33         	ljmp	_main	;jump to C main() function
  2924                           
  2925                           	psect	bssBANK0
  2926  0048                     __pbssBANK0:	
  2927  0048                     _interrupt_variable:	
  2928  0048                     	ds	1
  2929                           
  2930                           	psect	cstackCOMMON
  2931  0070                     __pcstackCOMMON:	
  2932  0070                     ?_test_function:	
  2933  0070                     ?_byte_union_get_byte:	
  2934                           ; 1 bytes @ 0x0
  2935                           
  2936  0070                     ?_byte_union_initialize:	
  2937                           ; 1 bytes @ 0x0
  2938                           
  2939  0070                     ?_flag_array_initialise:	
  2940                           ; 1 bytes @ 0x0
  2941                           
  2942  0070                     ?_input_interrupt_function:	
  2943                           ; 1 bytes @ 0x0
  2944                           
  2945  0070                     ??_input_interrupt_function:	
  2946                           ; 1 bytes @ 0x0
  2947                           
  2948  0070                     ?_test_of_time_type:	
  2949                           ; 1 bytes @ 0x0
  2950                           
  2951  0070                     ?_test_of_flag_array:	
  2952                           ; 1 bytes @ 0x0
  2953                           
  2954  0070                     ?_putch:	
  2955                           ; 1 bytes @ 0x0
  2956                           
  2957  0070                     ?_main:	
  2958                           ; 1 bytes @ 0x0
  2959                           
  2960                           
  2961                           ; 2 bytes @ 0x0
  2962  0070                     	ds	1
  2963  0071                     ??_putch:	
  2964  0071                     ?_time_type_valid:	
  2965                           ; 1 bytes @ 0x1
  2966                           
  2967  0071                     ?___lwdiv:	
  2968                           ; 2 bytes @ 0x1
  2969                           
  2970  0071                     putch@data:	
  2971                           ; 2 bytes @ 0x1
  2972                           
  2973  0071                     ___lwdiv@divisor:	
  2974                           ; 1 bytes @ 0x1
  2975                           
  2976                           
  2977                           ; 2 bytes @ 0x1
  2978  0071                     	ds	2
  2979  0073                     ___lwdiv@dividend:	
  2980                           
  2981                           ; 2 bytes @ 0x3
  2982  0073                     	ds	1
  2983  0074                     ??_time_type_valid:	
  2984  0074                     time_type_valid@type:	
  2985                           ; 1 bytes @ 0x4
  2986                           
  2987                           
  2988                           ; 1 bytes @ 0x4
  2989  0074                     	ds	1
  2990  0075                     ??___lwdiv:	
  2991                           
  2992                           ; 1 bytes @ 0x5
  2993  0075                     	ds	1
  2994  0076                     ___lwdiv@quotient:	
  2995                           
  2996                           ; 2 bytes @ 0x6
  2997  0076                     	ds	2
  2998  0078                     ___lwdiv@counter:	
  2999                           
  3000                           ; 1 bytes @ 0x8
  3001  0078                     	ds	1
  3002  0079                     ?___lwmod:	
  3003  0079                     ___lwmod@divisor:	
  3004                           ; 2 bytes @ 0x9
  3005                           
  3006                           
  3007                           ; 2 bytes @ 0x9
  3008  0079                     	ds	2
  3009  007B                     ___lwmod@dividend:	
  3010                           
  3011                           ; 2 bytes @ 0xB
  3012  007B                     	ds	2
  3013  007D                     ??_test_function:	
  3014  007D                     ??__fassert:	
  3015                           ; 1 bytes @ 0xD
  3016                           
  3017  007D                     ??_main:	
  3018                           ; 1 bytes @ 0xD
  3019                           
  3020  007D                     ??_byte_union_get_bit_value:	
  3021                           ; 1 bytes @ 0xD
  3022                           
  3023  007D                     ??_byte_union_set_bit:	
  3024                           ; 1 bytes @ 0xD
  3025                           
  3026  007D                     ??_byte_union_initialize:	
  3027                           ; 1 bytes @ 0xD
  3028                           
  3029  007D                     ??_flag_array_valid:	
  3030                           ; 1 bytes @ 0xD
  3031                           
  3032  007D                     ??_flag_array_initialise:	
  3033                           ; 1 bytes @ 0xD
  3034                           
  3035                           
  3036                           	psect	cstackBANK0
  3037  0020                     __pcstackBANK0:	
  3038                           ; 1 bytes @ 0xD
  3039                           
  3040  0020                     ??___lwmod:	
  3041                           
  3042                           ; 1 bytes @ 0x0
  3043  0020                     	ds	1
  3044  0021                     ___lwmod@counter:	
  3045                           
  3046                           ; 1 bytes @ 0x1
  3047  0021                     	ds	1
  3048  0022                     ?_printf:	
  3049  0022                     printf@f:	
  3050                           ; 2 bytes @ 0x2
  3051                           
  3052                           
  3053                           ; 2 bytes @ 0x2
  3054  0022                     	ds	8
  3055  002A                     ??_printf:	
  3056                           
  3057                           ; 1 bytes @ 0xA
  3058  002A                     	ds	4
  3059  002E                     printf@flag:	
  3060                           
  3061                           ; 1 bytes @ 0xE
  3062  002E                     	ds	1
  3063  002F                     printf@prec:	
  3064                           
  3065                           ; 1 bytes @ 0xF
  3066  002F                     	ds	1
  3067  0030                     printf@ap:	
  3068                           
  3069                           ; 1 bytes @ 0x10
  3070  0030                     	ds	1
  3071  0031                     printf@cp:	
  3072                           
  3073                           ; 2 bytes @ 0x11
  3074  0031                     	ds	2
  3075  0033                     printf@val:	
  3076                           
  3077                           ; 2 bytes @ 0x13
  3078  0033                     	ds	2
  3079  0035                     printf@c:	
  3080                           
  3081                           ; 1 bytes @ 0x15
  3082  0035                     	ds	1
  3083  0036                     ?__fassert:	
  3084  0036                     ??_test_of_time_type:	
  3085                           ; 1 bytes @ 0x16
  3086                           
  3087  0036                     __fassert@line:	
  3088                           ; 1 bytes @ 0x16
  3089                           
  3090                           
  3091                           ; 2 bytes @ 0x16
  3092  0036                     	ds	1
  3093  0037                     test_of_time_type@type:	
  3094                           
  3095                           ; 1 bytes @ 0x17
  3096  0037                     	ds	1
  3097  0038                     test_of_time_type@i:	
  3098  0038                     __fassert@file:	
  3099                           ; 2 bytes @ 0x18
  3100                           
  3101                           
  3102                           ; 2 bytes @ 0x18
  3103  0038                     	ds	2
  3104  003A                     __fassert@exp:	
  3105                           
  3106                           ; 2 bytes @ 0x1A
  3107  003A                     	ds	2
  3108  003C                     ?_byte_union_get_bit_value:	
  3109  003C                     ??_byte_union_get_byte:	
  3110                           ; 1 bytes @ 0x1C
  3111                           
  3112  003C                     ?_byte_union_set_bit:	
  3113                           ; 1 bytes @ 0x1C
  3114                           
  3115  003C                     ?_flag_array_valid:	
  3116                           ; 1 bytes @ 0x1C
  3117                           
  3118  003C                     byte_union_get_bit_value@bit_nbr:	
  3119                           ; 2 bytes @ 0x1C
  3120                           
  3121  003C                     byte_union_set_bit@state:	
  3122                           ; 1 bytes @ 0x1C
  3123                           
  3124                           
  3125                           ; 1 bytes @ 0x1C
  3126  003C                     	ds	1
  3127  003D                     byte_union_get_bit_value@val:	
  3128  003D                     byte_union_get_byte@ptb:	
  3129                           ; 1 bytes @ 0x1D
  3130                           
  3131  003D                     byte_union_set_bit@bit_nbr:	
  3132                           ; 1 bytes @ 0x1D
  3133                           
  3134                           
  3135                           ; 1 bytes @ 0x1D
  3136  003D                     	ds	1
  3137  003E                     byte_union_get_bit_value@byte_u:	
  3138  003E                     byte_union_get_byte@byte_u:	
  3139                           ; 1 bytes @ 0x1E
  3140                           
  3141  003E                     byte_union_set_bit@byte_u:	
  3142                           ; 1 bytes @ 0x1E
  3143                           
  3144                           
  3145                           ; 1 bytes @ 0x1E
  3146  003E                     	ds	1
  3147  003F                     ?_byte_union_set_byte:	
  3148  003F                     byte_union_set_byte@val:	
  3149                           ; 1 bytes @ 0x1F
  3150                           
  3151  003F                     flag_array_valid@flag_array:	
  3152                           ; 1 bytes @ 0x1F
  3153                           
  3154                           
  3155                           ; 1 bytes @ 0x1F
  3156  003F                     	ds	1
  3157  0040                     ??_byte_union_set_byte:	
  3158  0040                     ?_flag_array_set_flag:	
  3159                           ; 1 bytes @ 0x20
  3160                           
  3161  0040                     ?_flag_array_set_numbers:	
  3162                           ; 1 bytes @ 0x20
  3163                           
  3164  0040                     ?_flag_array_get_flag_state:	
  3165                           ; 1 bytes @ 0x20
  3166                           
  3167  0040                     flag_array_set_flag@state:	
  3168                           ; 1 bytes @ 0x20
  3169                           
  3170  0040                     flag_array_set_numbers@nbr:	
  3171                           ; 1 bytes @ 0x20
  3172                           
  3173  0040                     flag_array_get_flag_state@name:	
  3174                           ; 1 bytes @ 0x20
  3175                           
  3176                           
  3177                           ; 1 bytes @ 0x20
  3178  0040                     	ds	1
  3179  0041                     ??_flag_array_set_numbers:	
  3180  0041                     ??_flag_array_get_flag_state:	
  3181                           ; 1 bytes @ 0x21
  3182                           
  3183  0041                     byte_union_set_byte@ptb:	
  3184                           ; 1 bytes @ 0x21
  3185                           
  3186  0041                     flag_array_set_flag@name:	
  3187                           ; 1 bytes @ 0x21
  3188                           
  3189                           
  3190                           ; 1 bytes @ 0x21
  3191  0041                     	ds	1
  3192  0042                     ??_flag_array_set_flag:	
  3193  0042                     byte_union_set_byte@byte_u:	
  3194                           ; 1 bytes @ 0x22
  3195                           
  3196  0042                     flag_array_set_numbers@flag_array:	
  3197                           ; 1 bytes @ 0x22
  3198                           
  3199                           
  3200                           ; 1 bytes @ 0x22
  3201  0042                     	ds	1
  3202  0043                     byte_union_initialize@byte_u:	
  3203  0043                     flag_array_get_flag_state@val:	
  3204                           ; 1 bytes @ 0x23
  3205                           
  3206                           
  3207                           ; 1 bytes @ 0x23
  3208  0043                     	ds	1
  3209  0044                     flag_array_set_flag@flag_array:	
  3210  0044                     flag_array_initialise@flag_array:	
  3211                           ; 1 bytes @ 0x24
  3212                           
  3213  0044                     flag_array_get_flag_state@flag_array:	
  3214                           ; 1 bytes @ 0x24
  3215                           
  3216                           
  3217                           ; 1 bytes @ 0x24
  3218  0044                     	ds	1
  3219  0045                     ??_test_of_flag_array:	
  3220                           
  3221                           ; 1 bytes @ 0x25
  3222  0045                     	ds	1
  3223  0046                     test_of_flag_array@array:	
  3224                           
  3225                           ; 2 bytes @ 0x26
  3226  0046                     	ds	2
  3227                           
  3228                           	psect	maintext
  3229  0F33                     __pmaintext:	
  3230 ;;
  3231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3232 ;;
  3233 ;; *************** function _main *****************
  3234 ;; Defined at:
  3235 ;;		line 14 in file "main.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  2    4[None  ] int 
  3242 ;; Registers used:
  3243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : B1F/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;Total ram usage:        0 bytes
  3254 ;; Hardware stack levels required when called:   10
  3255 ;; This function calls:
  3256 ;;		_test_function
  3257 ;; This function is called by:
  3258 ;;		Startup code after reset
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           
  3263                           ;psect for function _main
  3264  0F33                     _main:	
  3265                           
  3266                           ;main.c: 16: test_function();
  3267                           
  3268                           ;incstack = 0
  3269                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3270  0F33  318F  2737         	fcall	_test_function
  3271                           
  3272                           ;main.c: 17: return(0);
  3273                           ;	Return value of _main is never used
  3274  0F35  3180  280D         	ljmp	start
  3275  0F37                     __end_of_main:	
  3276                           
  3277                           	psect	text1
  3278  0F37                     __ptext1:	
  3279 ;; *************** function _test_function *****************
  3280 ;; Defined at:
  3281 ;;		line 50 in file "functions_test.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    9
  3302 ;; This function calls:
  3303 ;;		_test_of_flag_array
  3304 ;;		_test_of_time_type
  3305 ;; This function is called by:
  3306 ;;		_main
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function _test_function
  3312  0F37                     _test_function:	
  3313                           
  3314                           ;functions_test.c: 52: test_of_time_type();
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in _test_function: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3318  0F37  3186  262D  318F   	fcall	_test_of_time_type
  3319                           
  3320                           ;functions_test.c: 53: test_of_flag_array();
  3321  0F3A  3184  2494         	fcall	_test_of_flag_array
  3322  0F3C  0008               	return
  3323  0F3D                     __end_of_test_function:	
  3324                           
  3325                           	psect	text2
  3326  062D                     __ptext2:	
  3327 ;; *************** function _test_of_time_type *****************
  3328 ;; Defined at:
  3329 ;;		line 5 in file "functions_test.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  i               2   24[BANK0 ] int 
  3334 ;;  type            1   23[BANK0 ] enum E189
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3345 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3346 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3347 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3348 ;;Total ram usage:        4 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    3
  3351 ;; This function calls:
  3352 ;;		_printf
  3353 ;;		_time_type_valid
  3354 ;; This function is called by:
  3355 ;;		_test_function
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           
  3360                           ;psect for function _test_of_time_type
  3361  062D                     _test_of_time_type:	
  3362                           
  3363                           ;functions_test.c: 7: printf("test of time_type_valid\n");
  3364                           
  3365                           ;incstack = 0
  3366                           ; Regs used in _test_of_time_type: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3367  062D  30DB               	movlw	low (STR_111| (0+32768))
  3368  062E  0020               	movlb	0	; select bank0
  3369  062F  00A2               	movwf	printf@f
  3370  0630  3081               	movlw	high (STR_111| (0+32768))
  3371  0631  00A3               	movwf	printf@f+1
  3372  0632  3183  231D  3186   	fcall	_printf
  3373                           
  3374                           ;functions_test.c: 8: time_type type=second;
  3375  0635  0020               	movlb	0	; select bank0
  3376  0636  01B7               	clrf	test_of_time_type@type
  3377                           
  3378                           ;functions_test.c: 9: if(time_type_valid(type)==0)
  3379  0637  0837               	movf	test_of_time_type@type,w
  3380  0638  318F  2745  3186   	fcall	_time_type_valid
  3381  063B  0871               	movf	?_time_type_valid,w
  3382  063C  0472               	iorwf	?_time_type_valid+1,w
  3383  063D  1D03               	btfss	3,2
  3384  063E  2E47               	goto	l1711
  3385                           
  3386                           ;functions_test.c: 10: printf("second KO\n");
  3387  063F  30B8               	movlw	low (STR_112| (0+32768))
  3388  0640  0020               	movlb	0	; select bank0
  3389  0641  00A2               	movwf	printf@f
  3390  0642  3082               	movlw	high (STR_112| (0+32768))
  3391  0643  00A3               	movwf	printf@f+1
  3392  0644  3183  231D  3186   	fcall	_printf
  3393  0647                     l1711:	
  3394                           
  3395                           ;functions_test.c: 11: type=minute;
  3396  0647  0020               	movlb	0	; select bank0
  3397  0648  01B7               	clrf	test_of_time_type@type
  3398  0649  0AB7               	incf	test_of_time_type@type,f
  3399                           
  3400                           ;functions_test.c: 12: if(time_type_valid(type)==0)
  3401  064A  0837               	movf	test_of_time_type@type,w
  3402  064B  318F  2745  3186   	fcall	_time_type_valid
  3403  064E  0871               	movf	?_time_type_valid,w
  3404  064F  0472               	iorwf	?_time_type_valid+1,w
  3405  0650  1D03               	btfss	3,2
  3406  0651  2E5A               	goto	l1717
  3407                           
  3408                           ;functions_test.c: 13: printf("minute KO\n");
  3409  0652  30C3               	movlw	low (STR_113| (0+32768))
  3410  0653  0020               	movlb	0	; select bank0
  3411  0654  00A2               	movwf	printf@f
  3412  0655  3082               	movlw	high (STR_113| (0+32768))
  3413  0656  00A3               	movwf	printf@f+1
  3414  0657  3183  231D  3186   	fcall	_printf
  3415  065A                     l1717:	
  3416                           
  3417                           ;functions_test.c: 14: type=hour;
  3418  065A  3002               	movlw	2
  3419  065B  0020               	movlb	0	; select bank0
  3420  065C  00B6               	movwf	??_test_of_time_type
  3421  065D  0836               	movf	??_test_of_time_type,w
  3422  065E  00B7               	movwf	test_of_time_type@type
  3423                           
  3424                           ;functions_test.c: 15: if(time_type_valid(type)==0)
  3425  065F  0837               	movf	test_of_time_type@type,w
  3426  0660  318F  2745  3186   	fcall	_time_type_valid
  3427  0663  0871               	movf	?_time_type_valid,w
  3428  0664  0472               	iorwf	?_time_type_valid+1,w
  3429  0665  1D03               	btfss	3,2
  3430  0666  2E6F               	goto	l1723
  3431                           
  3432                           ;functions_test.c: 16: printf("hour KO\n");
  3433  0667  30EE               	movlw	low (STR_114| (0+32768))
  3434  0668  0020               	movlb	0	; select bank0
  3435  0669  00A2               	movwf	printf@f
  3436  066A  3082               	movlw	high (STR_114| (0+32768))
  3437  066B  00A3               	movwf	printf@f+1
  3438  066C  3183  231D  3186   	fcall	_printf
  3439  066F                     l1723:	
  3440                           
  3441                           ;functions_test.c: 17: int i=3;
  3442  066F  3003               	movlw	3
  3443  0670  0020               	movlb	0	; select bank0
  3444  0671  00B8               	movwf	test_of_time_type@i
  3445  0672  3000               	movlw	0
  3446  0673  00B9               	movwf	test_of_time_type@i+1
  3447                           
  3448                           ;functions_test.c: 18: for(i=3;i<20;i++){
  3449  0674  3003               	movlw	3
  3450  0675  00B8               	movwf	test_of_time_type@i
  3451  0676  3000               	movlw	0
  3452  0677  00B9               	movwf	test_of_time_type@i+1
  3453  0678                     L1:	
  3454  0678  0839               	movf	test_of_time_type@i+1,w
  3455  0679  3A80               	xorlw	128
  3456  067A  00B6               	movwf	??_test_of_time_type
  3457  067B  3080               	movlw	128
  3458  067C  0236               	subwf	??_test_of_time_type,w
  3459  067D  1D03               	skipz
  3460  067E  2E81               	goto	u1705
  3461  067F  3014               	movlw	20
  3462  0680  0238               	subwf	test_of_time_type@i,w
  3463  0681                     u1705:	
  3464  0681  1803               	btfsc	3,0
  3465  0682  0008               	return
  3466                           
  3467                           ;functions_test.c: 19: if(time_type_valid(i)==1)
  3468  0683  0020               	movlb	0	; select bank0
  3469  0684  0838               	movf	test_of_time_type@i,w
  3470  0685  318F  2745  3186   	fcall	_time_type_valid
  3471  0688  0371               	decf	?_time_type_valid,w
  3472  0689  0472               	iorwf	?_time_type_valid+1,w
  3473  068A  1D03               	btfss	3,2
  3474  068B  2E98               	goto	l1735
  3475                           
  3476                           ;functions_test.c: 20: printf("%d KO\n",i);
  3477  068C  300F               	movlw	low (STR_115| (0+32768))
  3478  068D  0020               	movlb	0	; select bank0
  3479  068E  00A2               	movwf	printf@f
  3480  068F  3083               	movlw	high (STR_115| (0+32768))
  3481  0690  00A3               	movwf	printf@f+1
  3482  0691  0839               	movf	test_of_time_type@i+1,w
  3483  0692  00A5               	movwf	?_printf+3
  3484  0693  0838               	movf	test_of_time_type@i,w
  3485  0694  00A4               	movwf	?_printf+2
  3486  0695  3183  231D  3186   	fcall	_printf
  3487  0698                     l1735:	
  3488  0698  3001               	movlw	1
  3489  0699  0020               	movlb	0	; select bank0
  3490  069A  07B8               	addwf	test_of_time_type@i,f
  3491  069B  3000               	movlw	0
  3492  069C  3DB9               	addwfc	test_of_time_type@i+1,f
  3493  069D  2E78               	goto	L1
  3494  069E                     __end_of_test_of_time_type:	
  3495                           
  3496                           	psect	text3
  3497  0F45                     __ptext3:	
  3498 ;; *************** function _time_type_valid *****************
  3499 ;; Defined at:
  3500 ;;		line 4 in file "time_type.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;  type            1    wreg     enum E184
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  type            1    4[COMMON] enum E184
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  2    1[COMMON] int 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3514 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3518 ;;Total ram usage:        4 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    1
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_test_of_time_type
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _time_type_valid
  3530  0F45                     _time_type_valid:	
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _time_type_valid: [wreg+status,2]
  3534                           ;time_type_valid@type stored from wreg
  3535  0F45  00F4               	movwf	time_type_valid@type
  3536                           
  3537                           ;time_type.c: 6: if(type<3)
  3538  0F46  3003               	movlw	3
  3539  0F47  0274               	subwf	time_type_valid@type,w
  3540  0F48  1803               	skipnc
  3541  0F49  2F4F               	goto	l1619
  3542                           
  3543                           ;time_type.c: 7: return 1;
  3544  0F4A  3001               	movlw	1
  3545  0F4B  00F1               	movwf	?_time_type_valid
  3546  0F4C  3000               	movlw	0
  3547  0F4D  00F2               	movwf	?_time_type_valid+1
  3548  0F4E  0008               	return
  3549  0F4F                     l1619:	
  3550                           
  3551                           ;time_type.c: 8: return 0;
  3552  0F4F  01F1               	clrf	?_time_type_valid
  3553  0F50  01F2               	clrf	?_time_type_valid+1
  3554  0F51  0008               	return
  3555  0F52                     __end_of_time_type_valid:	
  3556                           
  3557                           	psect	text4
  3558  0494                     __ptext4:	
  3559 ;; *************** function _test_of_flag_array *****************
  3560 ;; Defined at:
  3561 ;;		line 24 in file "functions_test.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  array           2   38[BANK0 ] struct .
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3579 ;;Total ram usage:        3 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    8
  3582 ;; This function calls:
  3583 ;;		_flag_array_get_flag_state
  3584 ;;		_flag_array_initialise
  3585 ;;		_flag_array_set_flag
  3586 ;;		_flag_array_set_numbers
  3587 ;;		_flag_array_valid
  3588 ;;		_printf
  3589 ;; This function is called by:
  3590 ;;		_test_function
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           
  3595                           ;psect for function _test_of_flag_array
  3596  0494                     _test_of_flag_array:	
  3597                           
  3598                           ;functions_test.c: 26: printf("test of flag_array_initialize\n");
  3599                           
  3600                           ;incstack = 0
  3601                           ; Regs used in _test_of_flag_array: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3602  0494  30A5               	movlw	low (STR_116| (0+32768))
  3603  0495  0020               	movlb	0	; select bank0
  3604  0496  00A2               	movwf	printf@f
  3605  0497  3080               	movlw	high (STR_116| (0+32768))
  3606  0498  00A3               	movwf	printf@f+1
  3607  0499  3183  231D  3184   	fcall	_printf
  3608                           
  3609                           ;functions_test.c: 27: flag_array_t array;
  3610                           ;functions_test.c: 28: flag_array_initialise(&array);
  3611  049C  3046               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3612  049D  3187  2785  3184   	fcall	_flag_array_initialise
  3613                           
  3614                           ;functions_test.c: 29: if(flag_array_valid(&array)==0)
  3615  04A0  3046               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3616  04A1  318F  2782  3184   	fcall	_flag_array_valid
  3617  04A4  0020               	movlb	0	; select bank0
  3618  04A5  083C               	movf	?_flag_array_valid,w
  3619  04A6  043D               	iorwf	?_flag_array_valid+1,w
  3620  04A7  1D03               	btfss	3,2
  3621  04A8  2CB0               	goto	l234
  3622                           
  3623                           ;functions_test.c: 30: printf("flag_array_initialize KO\n");
  3624  04A9  30A7               	movlw	low (STR_117| (0+32768))
  3625  04AA  00A2               	movwf	printf@f
  3626  04AB  3081               	movlw	high (STR_117| (0+32768))
  3627  04AC  00A3               	movwf	printf@f+1
  3628  04AD  3183  231D  3184   	fcall	_printf
  3629  04B0                     l234:	
  3630                           
  3631                           ;functions_test.c: 31: printf("test of flag_array_valid\n");
  3632  04B0  30C1               	movlw	low (STR_118| (0+32768))
  3633  04B1  0020               	movlb	0	; select bank0
  3634  04B2  00A2               	movwf	printf@f
  3635  04B3  3081               	movlw	high (STR_118| (0+32768))
  3636  04B4  00A3               	movwf	printf@f+1
  3637  04B5  3183  231D  3184   	fcall	_printf
  3638                           
  3639                           ;functions_test.c: 32: array.flags_number=10;
  3640  04B8  300A               	movlw	10
  3641  04B9  0020               	movlb	0	; select bank0
  3642  04BA  00C5               	movwf	??_test_of_flag_array
  3643  04BB  0845               	movf	??_test_of_flag_array,w
  3644  04BC  00C7               	movwf	test_of_flag_array@array+1
  3645                           
  3646                           ;functions_test.c: 33: if(flag_array_valid(&array)==0)
  3647  04BD  3046               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3648  04BE  318F  2782  3184   	fcall	_flag_array_valid
  3649  04C1  0020               	movlb	0	; select bank0
  3650  04C2  083C               	movf	?_flag_array_valid,w
  3651  04C3  043D               	iorwf	?_flag_array_valid+1,w
  3652  04C4  1D03               	btfss	3,2
  3653  04C5  2CCD               	goto	l235
  3654                           
  3655                           ;functions_test.c: 34: printf("flag_array_valid KO\n");
  3656  04C6  3023               	movlw	low (STR_119| (0+32768))
  3657  04C7  00A2               	movwf	printf@f
  3658  04C8  3082               	movlw	high (STR_119| (0+32768))
  3659  04C9  00A3               	movwf	printf@f+1
  3660  04CA  3183  231D  3184   	fcall	_printf
  3661  04CD                     l235:	
  3662                           
  3663                           ;functions_test.c: 35: printf("test of flag_array_set_numbers\n");
  3664  04CD  3065               	movlw	low (STR_120| (0+32768))
  3665  04CE  0020               	movlb	0	; select bank0
  3666  04CF  00A2               	movwf	printf@f
  3667  04D0  3080               	movlw	high (STR_120| (0+32768))
  3668  04D1  00A3               	movwf	printf@f+1
  3669  04D2  3183  231D  3184   	fcall	_printf
  3670                           
  3671                           ;functions_test.c: 36: flag_array_set_numbers(&array,4);
  3672  04D5  3004               	movlw	4
  3673  04D6  0020               	movlb	0	; select bank0
  3674  04D7  00C5               	movwf	??_test_of_flag_array
  3675  04D8  0845               	movf	??_test_of_flag_array,w
  3676  04D9  00C0               	movwf	flag_array_set_numbers@nbr
  3677  04DA  3046               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3678  04DB  3187  2706  3184   	fcall	_flag_array_set_numbers
  3679                           
  3680                           ;functions_test.c: 37: if(array.flags_number!=4)
  3681  04DE  3004               	movlw	4
  3682  04DF  0020               	movlb	0	; select bank0
  3683  04E0  0647               	xorwf	test_of_flag_array@array+1,w
  3684  04E1  1903               	btfsc	3,2
  3685  04E2  2CEA               	goto	l236
  3686                           
  3687                           ;functions_test.c: 38: printf("flag_array_set_numbers KO\n");
  3688  04E3  3056               	movlw	low (STR_121| (0+32768))
  3689  04E4  00A2               	movwf	printf@f
  3690  04E5  3081               	movlw	high (STR_121| (0+32768))
  3691  04E6  00A3               	movwf	printf@f+1
  3692  04E7  3183  231D  3184   	fcall	_printf
  3693  04EA                     l236:	
  3694                           
  3695                           ;functions_test.c: 39: printf("test of flag_array_set_flag\n");
  3696  04EA  3000               	movlw	low (STR_122| (0+32768))
  3697  04EB  0020               	movlb	0	; select bank0
  3698  04EC  00A2               	movwf	printf@f
  3699  04ED  3081               	movlw	high (STR_122| (0+32768))
  3700  04EE  00A3               	movwf	printf@f+1
  3701  04EF  3183  231D  3184   	fcall	_printf
  3702                           
  3703                           ;functions_test.c: 40: flag_array_set_flag(&array,0,1);
  3704  04F2  0020               	movlb	0	; select bank0
  3705  04F3  01C0               	clrf	flag_array_set_flag@state
  3706  04F4  01C1               	clrf	flag_array_set_flag@name
  3707  04F5  0AC1               	incf	flag_array_set_flag@name,f
  3708  04F6  3046               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3709  04F7  3185  25AD  3184   	fcall	_flag_array_set_flag
  3710                           
  3711                           ;functions_test.c: 41: if(array.flags.b1!=0)
  3712  04FA  0020               	movlb	0	; select bank0
  3713  04FB  1CC6               	btfss	test_of_flag_array@array,1
  3714  04FC  2D04               	goto	l237
  3715                           
  3716                           ;functions_test.c: 42: printf("flag_array_set_flag KO\n");
  3717  04FD  30F4               	movlw	low (STR_123| (0+32768))
  3718  04FE  00A2               	movwf	printf@f
  3719  04FF  3081               	movlw	high (STR_123| (0+32768))
  3720  0500  00A3               	movwf	printf@f+1
  3721  0501  3183  231D  3184   	fcall	_printf
  3722  0504                     l237:	
  3723                           
  3724                           ;functions_test.c: 43: printf("test of flag_array_get_flag_state\n");
  3725  0504  3042               	movlw	low (STR_124| (0+32768))
  3726  0505  0020               	movlb	0	; select bank0
  3727  0506  00A2               	movwf	printf@f
  3728  0507  3080               	movlw	high (STR_124| (0+32768))
  3729  0508  00A3               	movwf	printf@f+1
  3730  0509  3183  231D  3184   	fcall	_printf
  3731                           
  3732                           ;functions_test.c: 44: if(flag_array_get_flag_state(&array,1)!=array.flags.b1)
  3733  050C  0020               	movlb	0	; select bank0
  3734  050D  0C46               	rrf	test_of_flag_array@array,w
  3735  050E  3901               	andlw	1
  3736  050F  00C5               	movwf	??_test_of_flag_array
  3737  0510  01C0               	clrf	flag_array_get_flag_state@name
  3738  0511  0AC0               	incf	flag_array_get_flag_state@name,f
  3739  0512  3046               	movlw	(low (test_of_flag_array@array| 0))& (0+255)
  3740  0513  3186  269E  3184   	fcall	_flag_array_get_flag_state
  3741  0516  0020               	movlb	0	; select bank0
  3742  0517  0645               	xorwf	??_test_of_flag_array,w
  3743  0518  1903               	skipnz
  3744  0519  0008               	return
  3745                           
  3746                           ;functions_test.c: 45: printf("flag_array_get_flag_state KO\n");
  3747  051A  30C4               	movlw	low (STR_125| (0+32768))
  3748  051B  00A2               	movwf	printf@f
  3749  051C  3080               	movlw	high (STR_125| (0+32768))
  3750  051D  00A3               	movwf	printf@f+1
  3751  051E  3183  231D         	fcall	_printf
  3752  0520  0008               	return
  3753  0521                     __end_of_test_of_flag_array:	
  3754                           
  3755                           	psect	text5
  3756  0706                     __ptext5:	
  3757 ;; *************** function _flag_array_set_numbers *****************
  3758 ;; Defined at:
  3759 ;;		line 40 in file "flag_array.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  flag_array      1    wreg     PTR struct .
  3762 ;;		 -> test_of_flag_array@array(2), 
  3763 ;;  nbr             1   32[BANK0 ] unsigned char 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  flag_array      1   34[BANK0 ] PTR struct .
  3766 ;;		 -> test_of_flag_array@array(2), 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3776 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3777 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3778 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3779 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3780 ;;Total ram usage:        3 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    5
  3783 ;; This function calls:
  3784 ;;		__fassert
  3785 ;;		_flag_array_valid
  3786 ;; This function is called by:
  3787 ;;		_test_of_flag_array
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           
  3792                           ;psect for function _flag_array_set_numbers
  3793  0706                     _flag_array_set_numbers:	
  3794                           
  3795                           ;incstack = 0
  3796                           ; Regs used in _flag_array_set_numbers: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3797                           ;flag_array_set_numbers@flag_array stored from wreg
  3798  0706  0020               	movlb	0	; select bank0
  3799  0707  00C2               	movwf	flag_array_set_numbers@flag_array
  3800                           
  3801                           ;flag_array.c: 43: if(!(flag_array!=(0))) {_fassert(43, "flag_array.c", "flag_array!=(0)
      +                          ");};
  3802  0708  0842               	movf	flag_array_set_numbers@flag_array,w
  3803  0709  1D03               	btfss	3,2
  3804  070A  2F1A               	goto	l1655
  3805  070B  302B               	movlw	43
  3806  070C  00B6               	movwf	__fassert@line
  3807  070D  3000               	movlw	0
  3808  070E  00B7               	movwf	__fassert@line+1
  3809  070F  3092               	movlw	low (STR_27| (0+32768))
  3810  0710  00B8               	movwf	__fassert@file
  3811  0711  3082               	movlw	high (STR_27| (0+32768))
  3812  0712  00B9               	movwf	__fassert@file+1
  3813  0713  3082               	movlw	low (STR_28| (0+32768))
  3814  0714  00BA               	movwf	__fassert@exp
  3815  0715  3082               	movlw	high (STR_28| (0+32768))
  3816  0716  00BB               	movwf	__fassert@exp+1
  3817  0717  318F  2752  3187   	fcall	__fassert
  3818  071A                     l1655:	
  3819                           
  3820                           ;flag_array.c: 44: if(!(nbr<=8)) {_fassert(44, "flag_array.c", "nbr<=8");};
  3821  071A  3009               	movlw	9
  3822  071B  0020               	movlb	0	; select bank0
  3823  071C  0240               	subwf	flag_array_set_numbers@nbr,w
  3824  071D  1C03               	skipc
  3825  071E  2F2E               	goto	l1659
  3826  071F  302C               	movlw	44
  3827  0720  00B6               	movwf	__fassert@line
  3828  0721  3000               	movlw	0
  3829  0722  00B7               	movwf	__fassert@line+1
  3830  0723  3092               	movlw	low (STR_27| (0+32768))
  3831  0724  00B8               	movwf	__fassert@file
  3832  0725  3082               	movlw	high (STR_27| (0+32768))
  3833  0726  00B9               	movwf	__fassert@file+1
  3834  0727  3016               	movlw	low (STR_46| (0+32768))
  3835  0728  00BA               	movwf	__fassert@exp
  3836  0729  3083               	movlw	high (STR_46| (0+32768))
  3837  072A  00BB               	movwf	__fassert@exp+1
  3838  072B  318F  2752  3187   	fcall	__fassert
  3839  072E                     l1659:	
  3840                           
  3841                           ;flag_array.c: 46: flag_array->flags_number=nbr;
  3842  072E  0020               	movlb	0	; select bank0
  3843  072F  0840               	movf	flag_array_set_numbers@nbr,w
  3844  0730  00C1               	movwf	??_flag_array_set_numbers
  3845  0731  0A42               	incf	flag_array_set_numbers@flag_array,w
  3846  0732  0086               	movwf	6
  3847  0733  0187               	clrf	7
  3848  0734  0841               	movf	??_flag_array_set_numbers,w
  3849  0735  0081               	movwf	1
  3850                           
  3851                           ;flag_array.c: 48: if(!(flag_array_valid(flag_array)==1)) {_fassert(48, "flag_array.c", 
      +                          "flag_array_valid(flag_array)==1");};
  3852  0736  0842               	movf	flag_array_set_numbers@flag_array,w
  3853  0737  318F  2782  3187   	fcall	_flag_array_valid
  3854  073A  0020               	movlb	0	; select bank0
  3855  073B  033C               	decf	?_flag_array_valid,w
  3856  073C  043D               	iorwf	?_flag_array_valid+1,w
  3857  073D  1903               	btfsc	3,2
  3858  073E  0008               	return
  3859  073F  3030               	movlw	48
  3860  0740  00B6               	movwf	__fassert@line
  3861  0741  3000               	movlw	0
  3862  0742  00B7               	movwf	__fassert@line+1
  3863  0743  3092               	movlw	low (STR_27| (0+32768))
  3864  0744  00B8               	movwf	__fassert@file
  3865  0745  3082               	movlw	high (STR_27| (0+32768))
  3866  0746  00B9               	movwf	__fassert@file+1
  3867  0747  3085               	movlw	low (STR_42| (0+32768))
  3868  0748  00BA               	movwf	__fassert@exp
  3869  0749  3080               	movlw	high (STR_42| (0+32768))
  3870  074A  00BB               	movwf	__fassert@exp+1
  3871  074B  318F  2752         	fcall	__fassert
  3872  074D  0008               	return
  3873  074E                     __end_of_flag_array_set_numbers:	
  3874                           
  3875                           	psect	text6
  3876  05AD                     __ptext6:	
  3877 ;; *************** function _flag_array_set_flag *****************
  3878 ;; Defined at:
  3879 ;;		line 14 in file "flag_array.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  flag_array      1    wreg     PTR struct .
  3882 ;;		 -> test_of_flag_array@array(2), 
  3883 ;;  state           1   32[BANK0 ] unsigned char 
  3884 ;;  name            1   33[BANK0 ] unsigned char 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  flag_array      1   36[BANK0 ] PTR struct .
  3887 ;;		 -> test_of_flag_array@array(2), 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3897 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3899 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3900 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;Total ram usage:        5 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    5
  3904 ;; This function calls:
  3905 ;;		__fassert
  3906 ;;		_byte_union_set_bit
  3907 ;;		_flag_array_valid
  3908 ;; This function is called by:
  3909 ;;		_test_of_flag_array
  3910 ;;		_software_timer_set_enable
  3911 ;;		_software_timer_clear_overflow
  3912 ;;		_software_timer_initialize
  3913 ;;		_software_timer_update
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _flag_array_set_flag
  3919  05AD                     _flag_array_set_flag:	
  3920                           
  3921                           ;incstack = 0
  3922                           ; Regs used in _flag_array_set_flag: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3923                           ;flag_array_set_flag@flag_array stored from wreg
  3924  05AD  0020               	movlb	0	; select bank0
  3925  05AE  00C4               	movwf	flag_array_set_flag@flag_array
  3926                           
  3927                           ;flag_array.c: 17: if(!(flag_array!=(0))) {_fassert(17, "flag_array.c", "flag_array!=(0)
      +                          ");};
  3928  05AF  0844               	movf	flag_array_set_flag@flag_array,w
  3929  05B0  1D03               	btfss	3,2
  3930  05B1  2DC1               	goto	l78
  3931  05B2  3011               	movlw	17
  3932  05B3  00B6               	movwf	__fassert@line
  3933  05B4  3000               	movlw	0
  3934  05B5  00B7               	movwf	__fassert@line+1
  3935  05B6  3092               	movlw	low (STR_27| (0+32768))
  3936  05B7  00B8               	movwf	__fassert@file
  3937  05B8  3082               	movlw	high (STR_27| (0+32768))
  3938  05B9  00B9               	movwf	__fassert@file+1
  3939  05BA  3082               	movlw	low (STR_28| (0+32768))
  3940  05BB  00BA               	movwf	__fassert@exp
  3941  05BC  3082               	movlw	high (STR_28| (0+32768))
  3942  05BD  00BB               	movwf	__fassert@exp+1
  3943  05BE  318F  2752  3185   	fcall	__fassert
  3944  05C1                     l78:	
  3945                           
  3946                           ;flag_array.c: 18: if(!(flag_array_valid(flag_array))) {_fassert(18, "flag_array.c", "fl
      +                          ag_array_valid(flag_array)");};
  3947  05C1  0020               	movlb	0	; select bank0
  3948  05C2  0844               	movf	flag_array_set_flag@flag_array,w
  3949  05C3  318F  2782  3185   	fcall	_flag_array_valid
  3950  05C6  0020               	movlb	0	; select bank0
  3951  05C7  083C               	movf	?_flag_array_valid,w
  3952  05C8  043D               	iorwf	?_flag_array_valid+1,w
  3953  05C9  1D03               	btfss	3,2
  3954  05CA  2DDA               	goto	l1629
  3955  05CB  3012               	movlw	18
  3956  05CC  00B6               	movwf	__fassert@line
  3957  05CD  3000               	movlw	0
  3958  05CE  00B7               	movwf	__fassert@line+1
  3959  05CF  3092               	movlw	low (STR_27| (0+32768))
  3960  05D0  00B8               	movwf	__fassert@file
  3961  05D1  3082               	movlw	high (STR_27| (0+32768))
  3962  05D2  00B9               	movwf	__fassert@file+1
  3963  05D3  301D               	movlw	low (STR_32| (0+32768))
  3964  05D4  00BA               	movwf	__fassert@exp
  3965  05D5  3081               	movlw	high (STR_32| (0+32768))
  3966  05D6  00BB               	movwf	__fassert@exp+1
  3967  05D7  318F  2752  3185   	fcall	__fassert
  3968  05DA                     l1629:	
  3969                           
  3970                           ;flag_array.c: 19: if(!(state==0 || state==1)) {_fassert(19, "flag_array.c", "state==0 |
      +                          | state==1");};
  3971  05DA  0020               	movlb	0	; select bank0
  3972  05DB  0840               	movf	flag_array_set_flag@state,w
  3973  05DC  1903               	btfsc	3,2
  3974  05DD  2DF0               	goto	l1635
  3975  05DE  0340               	decf	flag_array_set_flag@state,w
  3976  05DF  1903               	btfsc	3,2
  3977  05E0  2DF0               	goto	l1635
  3978  05E1  3013               	movlw	19
  3979  05E2  00B6               	movwf	__fassert@line
  3980  05E3  3000               	movlw	0
  3981  05E4  00B7               	movwf	__fassert@line+1
  3982  05E5  3092               	movlw	low (STR_27| (0+32768))
  3983  05E6  00B8               	movwf	__fassert@file
  3984  05E7  3082               	movlw	high (STR_27| (0+32768))
  3985  05E8  00B9               	movwf	__fassert@file+1
  3986  05E9  3038               	movlw	low (STR_22| (0+32768))
  3987  05EA  00BA               	movwf	__fassert@exp
  3988  05EB  3082               	movlw	high (STR_22| (0+32768))
  3989  05EC  00BB               	movwf	__fassert@exp+1
  3990  05ED  318F  2752  3185   	fcall	__fassert
  3991  05F0                     l1635:	
  3992                           
  3993                           ;flag_array.c: 20: if(!(name<flag_array->flags_number)) {_fassert(20, "flag_array.c", "n
      +                          ame<flag_array->flags_number");};
  3994  05F0  0020               	movlb	0	; select bank0
  3995  05F1  0A44               	incf	flag_array_set_flag@flag_array,w
  3996  05F2  0086               	movwf	6
  3997  05F3  0187               	clrf	7
  3998  05F4  0801               	movf	1,w
  3999  05F5  0241               	subwf	flag_array_set_flag@name,w
  4000  05F6  1C03               	skipc
  4001  05F7  2E07               	goto	l81
  4002  05F8  3014               	movlw	20
  4003  05F9  00B6               	movwf	__fassert@line
  4004  05FA  3000               	movlw	0
  4005  05FB  00B7               	movwf	__fassert@line+1
  4006  05FC  3092               	movlw	low (STR_27| (0+32768))
  4007  05FD  00B8               	movwf	__fassert@file
  4008  05FE  3082               	movlw	high (STR_27| (0+32768))
  4009  05FF  00B9               	movwf	__fassert@file+1
  4010  0600  30E2               	movlw	low (STR_36| (0+32768))
  4011  0601  00BA               	movwf	__fassert@exp
  4012  0602  3080               	movlw	high (STR_36| (0+32768))
  4013  0603  00BB               	movwf	__fassert@exp+1
  4014  0604  318F  2752  3185   	fcall	__fassert
  4015  0607                     l81:	
  4016                           
  4017                           ;flag_array.c: 22: byte_union_set_bit(&flag_array->flags,state,name);
  4018  0607  0020               	movlb	0	; select bank0
  4019  0608  0840               	movf	flag_array_set_flag@state,w
  4020  0609  00C2               	movwf	??_flag_array_set_flag
  4021  060A  0842               	movf	??_flag_array_set_flag,w
  4022  060B  00BC               	movwf	byte_union_set_bit@state
  4023  060C  0841               	movf	flag_array_set_flag@name,w
  4024  060D  00C3               	movwf	??_flag_array_set_flag+1
  4025  060E  0843               	movf	??_flag_array_set_flag+1,w
  4026  060F  00BD               	movwf	byte_union_set_bit@bit_nbr
  4027  0610  0844               	movf	flag_array_set_flag@flag_array,w
  4028  0611  3184  2400  3185   	fcall	_byte_union_set_bit
  4029                           
  4030                           ;flag_array.c: 24: if(!(flag_array_valid(flag_array))) {_fassert(24, "flag_array.c", "fl
      +                          ag_array_valid(flag_array)");};
  4031  0614  0020               	movlb	0	; select bank0
  4032  0615  0844               	movf	flag_array_set_flag@flag_array,w
  4033  0616  318F  2782  3185   	fcall	_flag_array_valid
  4034  0619  0020               	movlb	0	; select bank0
  4035  061A  083C               	movf	?_flag_array_valid,w
  4036  061B  043D               	iorwf	?_flag_array_valid+1,w
  4037  061C  1D03               	btfss	3,2
  4038  061D  0008               	return
  4039  061E  3018               	movlw	24
  4040  061F  00B6               	movwf	__fassert@line
  4041  0620  3000               	movlw	0
  4042  0621  00B7               	movwf	__fassert@line+1
  4043  0622  3092               	movlw	low (STR_27| (0+32768))
  4044  0623  00B8               	movwf	__fassert@file
  4045  0624  3082               	movlw	high (STR_27| (0+32768))
  4046  0625  00B9               	movwf	__fassert@file+1
  4047  0626  301D               	movlw	low (STR_32| (0+32768))
  4048  0627  00BA               	movwf	__fassert@exp
  4049  0628  3081               	movlw	high (STR_32| (0+32768))
  4050  0629  00BB               	movwf	__fassert@exp+1
  4051  062A  318F  2752         	fcall	__fassert
  4052  062C  0008               	return
  4053  062D                     __end_of_flag_array_set_flag:	
  4054                           
  4055                           	psect	text7
  4056  0400                     __ptext7:	
  4057 ;; *************** function _byte_union_set_bit *****************
  4058 ;; Defined at:
  4059 ;;		line 80 in file "byte_union.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  byte_u          1    wreg     PTR struct .
  4062 ;;		 -> test_of_flag_array@array(2), 
  4063 ;;  state           1   28[BANK0 ] unsigned char 
  4064 ;;  bit_nbr         1   29[BANK0 ] unsigned char 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  byte_u          1   30[BANK0 ] PTR struct .
  4067 ;;		 -> test_of_flag_array@array(2), 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  1    wreg      void 
  4070 ;; Registers used:
  4071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4077 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;Total ram usage:        3 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:    4
  4084 ;; This function calls:
  4085 ;;		__fassert
  4086 ;; This function is called by:
  4087 ;;		_flag_array_set_flag
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           
  4092                           ;psect for function _byte_union_set_bit
  4093  0400                     _byte_union_set_bit:	
  4094                           
  4095                           ;incstack = 0
  4096                           ; Regs used in _byte_union_set_bit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4097                           ;byte_union_set_bit@byte_u stored from wreg
  4098  0400  0020               	movlb	0	; select bank0
  4099  0401  00BE               	movwf	byte_union_set_bit@byte_u
  4100                           
  4101                           ;byte_union.c: 83: if(!(byte_u!=(0))) {_fassert(83, "byte_union.c", "byte_u!=(0)");};
  4102  0402  083E               	movf	byte_union_set_bit@byte_u,w
  4103  0403  1D03               	btfss	3,2
  4104  0404  2C14               	goto	l1561
  4105  0405  3053               	movlw	83
  4106  0406  00B6               	movwf	__fassert@line
  4107  0407  3000               	movlw	0
  4108  0408  00B7               	movwf	__fassert@line+1
  4109  0409  309F               	movlw	low (STR_1| (0+32768))
  4110  040A  00B8               	movwf	__fassert@file
  4111  040B  3082               	movlw	high (STR_1| (0+32768))
  4112  040C  00B9               	movwf	__fassert@file+1
  4113  040D  30AC               	movlw	low (STR_2| (0+32768))
  4114  040E  00BA               	movwf	__fassert@exp
  4115  040F  3082               	movlw	high (STR_2| (0+32768))
  4116  0410  00BB               	movwf	__fassert@exp+1
  4117  0411  318F  2752  3184   	fcall	__fassert
  4118  0414                     l1561:	
  4119                           
  4120                           ;byte_union.c: 84: if(!(state==0 || state==1)) {_fassert(84, "byte_union.c", "state==0 |
      +                          | state==1");};
  4121  0414  0020               	movlb	0	; select bank0
  4122  0415  083C               	movf	byte_union_set_bit@state,w
  4123  0416  1903               	btfsc	3,2
  4124  0417  2C2A               	goto	l1567
  4125  0418  033C               	decf	byte_union_set_bit@state,w
  4126  0419  1903               	btfsc	3,2
  4127  041A  2C2A               	goto	l1567
  4128  041B  3054               	movlw	84
  4129  041C  00B6               	movwf	__fassert@line
  4130  041D  3000               	movlw	0
  4131  041E  00B7               	movwf	__fassert@line+1
  4132  041F  309F               	movlw	low (STR_1| (0+32768))
  4133  0420  00B8               	movwf	__fassert@file
  4134  0421  3082               	movlw	high (STR_1| (0+32768))
  4135  0422  00B9               	movwf	__fassert@file+1
  4136  0423  3038               	movlw	low (STR_22| (0+32768))
  4137  0424  00BA               	movwf	__fassert@exp
  4138  0425  3082               	movlw	high (STR_22| (0+32768))
  4139  0426  00BB               	movwf	__fassert@exp+1
  4140  0427  318F  2752  3184   	fcall	__fassert
  4141  042A                     l1567:	
  4142                           
  4143                           ;byte_union.c: 85: if(!(bit_nbr<8)) {_fassert(85, "byte_union.c", "bit_nbr<8");};
  4144  042A  3008               	movlw	8
  4145  042B  0020               	movlb	0	; select bank0
  4146  042C  023D               	subwf	byte_union_set_bit@bit_nbr,w
  4147  042D  1C03               	skipc
  4148  042E  2C88               	goto	l1589
  4149  042F  3055               	movlw	85
  4150  0430  00B6               	movwf	__fassert@line
  4151  0431  3000               	movlw	0
  4152  0432  00B7               	movwf	__fassert@line+1
  4153  0433  309F               	movlw	low (STR_1| (0+32768))
  4154  0434  00B8               	movwf	__fassert@file
  4155  0435  3082               	movlw	high (STR_1| (0+32768))
  4156  0436  00B9               	movwf	__fassert@file+1
  4157  0437  30E4               	movlw	low (STR_4| (0+32768))
  4158  0438  00BA               	movwf	__fassert@exp
  4159  0439  3082               	movlw	high (STR_4| (0+32768))
  4160  043A  00BB               	movwf	__fassert@exp+1
  4161  043B  318F  2752  3184   	fcall	__fassert
  4162                           
  4163                           ;byte_union.c: 87: switch(bit_nbr){
  4164  043E  2C88               	goto	l1589
  4165  043F                     l1571:	
  4166                           ;byte_union.c: 88: case 0:
  4167                           
  4168                           
  4169                           ;byte_union.c: 89: byte_u->b0=state;
  4170  043F  0020               	movlb	0	; select bank0
  4171  0440  083E               	movf	byte_union_set_bit@byte_u,w
  4172  0441  0086               	movwf	6
  4173  0442  0187               	clrf	7
  4174  0443  083C               	movf	byte_union_set_bit@state,w
  4175  0444  3901               	andlw	1
  4176  0445  1001               	bcf	1,0
  4177  0446  1D03               	skipz
  4178  0447  1401               	bsf	1,0
  4179                           
  4180                           ;byte_union.c: 90: break;
  4181  0448  0008               	return
  4182  0449                     l1573:	
  4183                           ;byte_union.c: 91: case 1:
  4184                           
  4185                           
  4186                           ;byte_union.c: 92: byte_u->b1=state;
  4187  0449  083E               	movf	byte_union_set_bit@byte_u,w
  4188  044A  0086               	movwf	6
  4189  044B  0187               	clrf	7
  4190  044C  083C               	movf	byte_union_set_bit@state,w
  4191  044D  3901               	andlw	1
  4192  044E  1081               	bcf	1,1
  4193  044F  1D03               	skipz
  4194  0450  1481               	bsf	1,1
  4195                           
  4196                           ;byte_union.c: 93: break;
  4197  0451  0008               	return
  4198  0452                     l1575:	
  4199                           ;byte_union.c: 94: case 2:
  4200                           
  4201                           
  4202                           ;byte_union.c: 95: byte_u->b2=state;
  4203  0452  083E               	movf	byte_union_set_bit@byte_u,w
  4204  0453  0086               	movwf	6
  4205  0454  0187               	clrf	7
  4206  0455  083C               	movf	byte_union_set_bit@state,w
  4207  0456  3901               	andlw	1
  4208  0457  1101               	bcf	1,2
  4209  0458  1D03               	skipz
  4210  0459  1501               	bsf	1,2
  4211                           
  4212                           ;byte_union.c: 96: break;
  4213  045A  0008               	return
  4214  045B                     l1577:	
  4215                           ;byte_union.c: 97: case 3:
  4216                           
  4217                           
  4218                           ;byte_union.c: 98: byte_u->b3=state;
  4219  045B  083E               	movf	byte_union_set_bit@byte_u,w
  4220  045C  0086               	movwf	6
  4221  045D  0187               	clrf	7
  4222  045E  083C               	movf	byte_union_set_bit@state,w
  4223  045F  3901               	andlw	1
  4224  0460  1181               	bcf	1,3
  4225  0461  1D03               	skipz
  4226  0462  1581               	bsf	1,3
  4227                           
  4228                           ;byte_union.c: 99: break;
  4229  0463  0008               	return
  4230  0464                     l1579:	
  4231                           ;byte_union.c: 100: case 4:
  4232                           
  4233                           
  4234                           ;byte_union.c: 101: byte_u->b4=state;
  4235  0464  083E               	movf	byte_union_set_bit@byte_u,w
  4236  0465  0086               	movwf	6
  4237  0466  0187               	clrf	7
  4238  0467  083C               	movf	byte_union_set_bit@state,w
  4239  0468  3901               	andlw	1
  4240  0469  1201               	bcf	1,4
  4241  046A  1D03               	skipz
  4242  046B  1601               	bsf	1,4
  4243                           
  4244                           ;byte_union.c: 102: break;
  4245  046C  0008               	return
  4246  046D                     l1581:	
  4247                           ;byte_union.c: 103: case 5:
  4248                           
  4249                           
  4250                           ;byte_union.c: 104: byte_u->b5=state;
  4251  046D  083E               	movf	byte_union_set_bit@byte_u,w
  4252  046E  0086               	movwf	6
  4253  046F  0187               	clrf	7
  4254  0470  083C               	movf	byte_union_set_bit@state,w
  4255  0471  3901               	andlw	1
  4256  0472  1281               	bcf	1,5
  4257  0473  1D03               	skipz
  4258  0474  1681               	bsf	1,5
  4259                           
  4260                           ;byte_union.c: 105: break;
  4261  0475  0008               	return
  4262  0476                     l1583:	
  4263                           ;byte_union.c: 106: case 6:
  4264                           
  4265                           
  4266                           ;byte_union.c: 107: byte_u->b6=state;
  4267  0476  083E               	movf	byte_union_set_bit@byte_u,w
  4268  0477  0086               	movwf	6
  4269  0478  0187               	clrf	7
  4270  0479  083C               	movf	byte_union_set_bit@state,w
  4271  047A  3901               	andlw	1
  4272  047B  1301               	bcf	1,6
  4273  047C  1D03               	skipz
  4274  047D  1701               	bsf	1,6
  4275                           
  4276                           ;byte_union.c: 108: break;
  4277  047E  0008               	return
  4278  047F                     l1585:	
  4279                           ;byte_union.c: 109: case 7:
  4280                           
  4281                           
  4282                           ;byte_union.c: 110: byte_u->b7=state;
  4283  047F  083E               	movf	byte_union_set_bit@byte_u,w
  4284  0480  0086               	movwf	6
  4285  0481  0187               	clrf	7
  4286  0482  083C               	movf	byte_union_set_bit@state,w
  4287  0483  3901               	andlw	1
  4288  0484  1381               	bcf	1,7
  4289  0485  1D03               	skipz
  4290  0486  1781               	bsf	1,7
  4291                           
  4292                           ;byte_union.c: 112: }
  4293                           
  4294                           ;byte_union.c: 111: break;
  4295  0487  0008               	return
  4296  0488                     l1589:	
  4297  0488  0020               	movlb	0	; select bank0
  4298  0489  083D               	movf	byte_union_set_bit@bit_nbr,w
  4299                           
  4300                           ; Switch size 1, requested type "space"
  4301                           ; Number of cases is 8, Range of values is 0 to 7
  4302                           ; switch strategies available:
  4303                           ; Name         Instructions Cycles
  4304                           ; direct_byte           22     6 (fixed)
  4305                           ; simple_byte           25    13 (average)
  4306                           ; jumptable            260     6 (fixed)
  4307                           ;	Chosen strategy is direct_byte
  4308  048A  0084               	movwf	4
  4309  048B  3008               	movlw	8
  4310  048C  0204               	subwf	4,w
  4311  048D  1803               	skipnc
  4312  048E  0008               	return
  4313  048F  3187               	movlp	high S1945
  4314  0490  3504               	lslf	4,w
  4315  0491  3EEF               	addlw	low S1945
  4316  0492  0082               	movwf	2
  4317  0493  0008               	return
  4318  0494                     __end_of_byte_union_set_bit:	
  4319                           
  4320                           	psect	swtext1
  4321  07EF                     __pswtext1:	
  4322  07EF                     S1945:	
  4323  07EF  3184  2C3F         	ljmp	l1571
  4324  07F1  3184  2C49         	ljmp	l1573
  4325  07F3  3184  2C52         	ljmp	l1575
  4326  07F5  3184  2C5B         	ljmp	l1577
  4327  07F7  3184  2C64         	ljmp	l1579
  4328  07F9  3184  2C6D         	ljmp	l1581
  4329  07FB  3184  2C76         	ljmp	l1583
  4330  07FD  3184  2C7F         	ljmp	l1585
  4331                           
  4332                           	psect	text8
  4333  0785                     __ptext8:	
  4334 ;; *************** function _flag_array_initialise *****************
  4335 ;; Defined at:
  4336 ;;		line 28 in file "flag_array.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  flag_array      1    wreg     PTR struct .
  4339 ;;		 -> test_of_flag_array@array(2), 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  flag_array      1   36[BANK0 ] PTR struct .
  4342 ;;		 -> test_of_flag_array@array(2), 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4356 ;;Total ram usage:        1 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    7
  4359 ;; This function calls:
  4360 ;;		__fassert
  4361 ;;		_byte_union_initialize
  4362 ;;		_flag_array_valid
  4363 ;; This function is called by:
  4364 ;;		_test_of_flag_array
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function _flag_array_initialise
  4370  0785                     _flag_array_initialise:	
  4371                           
  4372                           ;incstack = 0
  4373                           ; Regs used in _flag_array_initialise: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4374                           ;flag_array_initialise@flag_array stored from wreg
  4375  0785  0020               	movlb	0	; select bank0
  4376  0786  00C4               	movwf	flag_array_initialise@flag_array
  4377                           
  4378                           ;flag_array.c: 31: if(!(flag_array!=(0))) {_fassert(31, "flag_array.c", "flag_array!=(0)
      +                          ");};
  4379  0787  0844               	movf	flag_array_initialise@flag_array,w
  4380  0788  1D03               	btfss	3,2
  4381  0789  2F99               	goto	l86
  4382  078A  301F               	movlw	31
  4383  078B  00B6               	movwf	__fassert@line
  4384  078C  3000               	movlw	0
  4385  078D  00B7               	movwf	__fassert@line+1
  4386  078E  3092               	movlw	low (STR_27| (0+32768))
  4387  078F  00B8               	movwf	__fassert@file
  4388  0790  3082               	movlw	high (STR_27| (0+32768))
  4389  0791  00B9               	movwf	__fassert@file+1
  4390  0792  3082               	movlw	low (STR_28| (0+32768))
  4391  0793  00BA               	movwf	__fassert@exp
  4392  0794  3082               	movlw	high (STR_28| (0+32768))
  4393  0795  00BB               	movwf	__fassert@exp+1
  4394  0796  318F  2752  3187   	fcall	__fassert
  4395  0799                     l86:	
  4396                           
  4397                           ;flag_array.c: 33: byte_union_initialize(&flag_array->flags);
  4398  0799  0020               	movlb	0	; select bank0
  4399  079A  0844               	movf	flag_array_initialise@flag_array,w
  4400  079B  318F  2768  3187   	fcall	_byte_union_initialize
  4401                           
  4402                           ;flag_array.c: 34: flag_array->flags_number=0;
  4403  079E  0020               	movlb	0	; select bank0
  4404  079F  0A44               	incf	flag_array_initialise@flag_array,w
  4405  07A0  0086               	movwf	6
  4406  07A1  0187               	clrf	7
  4407  07A2  0181               	clrf	1
  4408                           
  4409                           ;flag_array.c: 36: if(!(flag_array_valid(flag_array)==1)) {_fassert(36, "flag_array.c", 
      +                          "flag_array_valid(flag_array)==1");};
  4410  07A3  0844               	movf	flag_array_initialise@flag_array,w
  4411  07A4  318F  2782  3187   	fcall	_flag_array_valid
  4412  07A7  0020               	movlb	0	; select bank0
  4413  07A8  033C               	decf	?_flag_array_valid,w
  4414  07A9  043D               	iorwf	?_flag_array_valid+1,w
  4415  07AA  1903               	btfsc	3,2
  4416  07AB  0008               	return
  4417  07AC  3024               	movlw	36
  4418  07AD  00B6               	movwf	__fassert@line
  4419  07AE  3000               	movlw	0
  4420  07AF  00B7               	movwf	__fassert@line+1
  4421  07B0  3092               	movlw	low (STR_27| (0+32768))
  4422  07B1  00B8               	movwf	__fassert@file
  4423  07B2  3082               	movlw	high (STR_27| (0+32768))
  4424  07B3  00B9               	movwf	__fassert@file+1
  4425  07B4  3085               	movlw	low (STR_42| (0+32768))
  4426  07B5  00BA               	movwf	__fassert@exp
  4427  07B6  3080               	movlw	high (STR_42| (0+32768))
  4428  07B7  00BB               	movwf	__fassert@exp+1
  4429  07B8  318F  2752         	fcall	__fassert
  4430  07BA  0008               	return
  4431  07BB                     __end_of_flag_array_initialise:	
  4432                           
  4433                           	psect	text9
  4434  0F68                     __ptext9:	
  4435 ;; *************** function _byte_union_initialize *****************
  4436 ;; Defined at:
  4437 ;;		line 115 in file "byte_union.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  byte_u          1    wreg     PTR struct .
  4440 ;;		 -> test_of_flag_array@array(2), 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  byte_u          1   35[BANK0 ] PTR struct .
  4443 ;;		 -> test_of_flag_array@array(2), 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4454 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4456 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;Total ram usage:        1 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    6
  4460 ;; This function calls:
  4461 ;;		__fassert
  4462 ;;		_byte_union_set_byte
  4463 ;; This function is called by:
  4464 ;;		_flag_array_initialise
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           
  4469                           ;psect for function _byte_union_initialize
  4470  0F68                     _byte_union_initialize:	
  4471                           
  4472                           ;incstack = 0
  4473                           ; Regs used in _byte_union_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4474                           ;byte_union_initialize@byte_u stored from wreg
  4475  0F68  0020               	movlb	0	; select bank0
  4476  0F69  00C3               	movwf	byte_union_initialize@byte_u
  4477                           
  4478                           ;byte_union.c: 118: if(!(byte_u!=(0))) {_fassert(118, "byte_union.c", "byte_u!=(0)");};
  4479  0F6A  0843               	movf	byte_union_initialize@byte_u,w
  4480  0F6B  1D03               	btfss	3,2
  4481  0F6C  2F7C               	goto	l61
  4482  0F6D  3076               	movlw	118
  4483  0F6E  00B6               	movwf	__fassert@line
  4484  0F6F  3000               	movlw	0
  4485  0F70  00B7               	movwf	__fassert@line+1
  4486  0F71  309F               	movlw	low (STR_1| (0+32768))
  4487  0F72  00B8               	movwf	__fassert@file
  4488  0F73  3082               	movlw	high (STR_1| (0+32768))
  4489  0F74  00B9               	movwf	__fassert@file+1
  4490  0F75  30AC               	movlw	low (STR_2| (0+32768))
  4491  0F76  00BA               	movwf	__fassert@exp
  4492  0F77  3082               	movlw	high (STR_2| (0+32768))
  4493  0F78  00BB               	movwf	__fassert@exp+1
  4494  0F79  318F  2752  318F   	fcall	__fassert
  4495  0F7C                     l61:	
  4496                           
  4497                           ;byte_union.c: 120: byte_union_set_byte(byte_u,0);
  4498  0F7C  0020               	movlb	0	; select bank0
  4499  0F7D  01BF               	clrf	byte_union_set_byte@val
  4500  0F7E  0843               	movf	byte_union_initialize@byte_u,w
  4501  0F7F  3187  274E         	fcall	_byte_union_set_byte
  4502  0F81  0008               	return
  4503  0F82                     __end_of_byte_union_initialize:	
  4504                           
  4505                           	psect	text10
  4506  074E                     __ptext10:	
  4507 ;; *************** function _byte_union_set_byte *****************
  4508 ;; Defined at:
  4509 ;;		line 68 in file "byte_union.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  byte_u          1    wreg     PTR struct .
  4512 ;;		 -> test_of_flag_array@array(2), 
  4513 ;;  val             1   31[BANK0 ] unsigned char 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  byte_u          1   34[BANK0 ] PTR struct .
  4516 ;;		 -> test_of_flag_array@array(2), 
  4517 ;;  ptb             1   33[BANK0 ] PTR unsigned char 
  4518 ;;		 -> test_of_flag_array@array(2), byte_union_get_byte@byte_u(1), 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4528 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;Total ram usage:        4 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; Hardware stack levels required when called:    5
  4535 ;; This function calls:
  4536 ;;		__fassert
  4537 ;;		_byte_union_get_byte
  4538 ;; This function is called by:
  4539 ;;		_byte_union_initialize
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           
  4544                           ;psect for function _byte_union_set_byte
  4545  074E                     _byte_union_set_byte:	
  4546                           
  4547                           ;incstack = 0
  4548                           ; Regs used in _byte_union_set_byte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4549                           ;byte_union_set_byte@byte_u stored from wreg
  4550  074E  0020               	movlb	0	; select bank0
  4551  074F  00C2               	movwf	byte_union_set_byte@byte_u
  4552                           
  4553                           ;byte_union.c: 71: if(!(byte_u!=(0))) {_fassert(71, "byte_union.c", "byte_u!=(0)");};
  4554  0750  0842               	movf	byte_union_set_byte@byte_u,w
  4555  0751  1D03               	btfss	3,2
  4556  0752  2F62               	goto	l40
  4557  0753  3047               	movlw	71
  4558  0754  00B6               	movwf	__fassert@line
  4559  0755  3000               	movlw	0
  4560  0756  00B7               	movwf	__fassert@line+1
  4561  0757  309F               	movlw	low (STR_1| (0+32768))
  4562  0758  00B8               	movwf	__fassert@file
  4563  0759  3082               	movlw	high (STR_1| (0+32768))
  4564  075A  00B9               	movwf	__fassert@file+1
  4565  075B  30AC               	movlw	low (STR_2| (0+32768))
  4566  075C  00BA               	movwf	__fassert@exp
  4567  075D  3082               	movlw	high (STR_2| (0+32768))
  4568  075E  00BB               	movwf	__fassert@exp+1
  4569  075F  318F  2752  3187   	fcall	__fassert
  4570  0762                     l40:	
  4571                           
  4572                           ;byte_union.c: 73: unsigned char *ptb=byte_union_get_byte(byte_u);
  4573  0762  0020               	movlb	0	; select bank0
  4574  0763  0842               	movf	byte_union_set_byte@byte_u,w
  4575  0764  318F  27D3  3187   	fcall	_byte_union_get_byte
  4576  0767  0020               	movlb	0	; select bank0
  4577  0768  00C0               	movwf	??_byte_union_set_byte
  4578  0769  0840               	movf	??_byte_union_set_byte,w
  4579  076A  00C1               	movwf	byte_union_set_byte@ptb
  4580                           
  4581                           ;byte_union.c: 75: if(!(ptb!=(0))) {_fassert(75, "byte_union.c", "ptb!=(0)");};
  4582  076B  0841               	movf	byte_union_set_byte@ptb,w
  4583  076C  1D03               	btfss	3,2
  4584  076D  2F7C               	goto	l1511
  4585  076E  304B               	movlw	75
  4586  076F  00B6               	movwf	__fassert@line
  4587  0770  3000               	movlw	0
  4588  0771  00B7               	movwf	__fassert@line+1
  4589  0772  309F               	movlw	low (STR_1| (0+32768))
  4590  0773  00B8               	movwf	__fassert@file
  4591  0774  3082               	movlw	high (STR_1| (0+32768))
  4592  0775  00B9               	movwf	__fassert@file+1
  4593  0776  30F7               	movlw	low (STR_10| (0+32768))
  4594  0777  00BA               	movwf	__fassert@exp
  4595  0778  3082               	movlw	high (STR_10| (0+32768))
  4596  0779  00BB               	movwf	__fassert@exp+1
  4597  077A  318F  2752         	fcall	__fassert
  4598  077C                     l1511:	
  4599                           
  4600                           ;byte_union.c: 77: *ptb=val;
  4601  077C  0020               	movlb	0	; select bank0
  4602  077D  083F               	movf	byte_union_set_byte@val,w
  4603  077E  00C0               	movwf	??_byte_union_set_byte
  4604  077F  0841               	movf	byte_union_set_byte@ptb,w
  4605  0780  0086               	movwf	6
  4606  0781  0187               	clrf	7
  4607  0782  0840               	movf	??_byte_union_set_byte,w
  4608  0783  0081               	movwf	1
  4609  0784  0008               	return
  4610  0785                     __end_of_byte_union_set_byte:	
  4611                           
  4612                           	psect	text11
  4613  0FD3                     __ptext11:	
  4614 ;; *************** function _byte_union_get_byte *****************
  4615 ;; Defined at:
  4616 ;;		line 43 in file "byte_union.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  byte_u          1    wreg     PTR struct .
  4619 ;;		 -> test_of_flag_array@array(2), 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  byte_u          1   30[BANK0 ] PTR struct .
  4622 ;;		 -> test_of_flag_array@array(2), 
  4623 ;;  ptb             1   29[BANK0 ] PTR unsigned char 
  4624 ;;		 -> test_of_flag_array@array(2), byte_union_get_byte@byte_u(1), 
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  1    wreg      PTR unsigned char 
  4627 ;; Registers used:
  4628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4635 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4637 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4638 ;;Total ram usage:        3 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    4
  4641 ;; This function calls:
  4642 ;;		__fassert
  4643 ;; This function is called by:
  4644 ;;		_byte_union_set_byte
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           
  4649                           ;psect for function _byte_union_get_byte
  4650  0FD3                     _byte_union_get_byte:	
  4651                           
  4652                           ;incstack = 0
  4653                           ; Regs used in _byte_union_get_byte: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4654                           ;byte_union_get_byte@byte_u stored from wreg
  4655  0FD3  0020               	movlb	0	; select bank0
  4656  0FD4  00BE               	movwf	byte_union_get_byte@byte_u
  4657                           
  4658                           ;byte_union.c: 46: if(!(byte_u!=(0))) {_fassert(46, "byte_union.c", "byte_u!=(0)");};
  4659  0FD5  083E               	movf	byte_union_get_byte@byte_u,w
  4660  0FD6  1D03               	btfss	3,2
  4661  0FD7  2FE7               	goto	l1493
  4662  0FD8  302E               	movlw	46
  4663  0FD9  00B6               	movwf	__fassert@line
  4664  0FDA  3000               	movlw	0
  4665  0FDB  00B7               	movwf	__fassert@line+1
  4666  0FDC  309F               	movlw	low (STR_1| (0+32768))
  4667  0FDD  00B8               	movwf	__fassert@file
  4668  0FDE  3082               	movlw	high (STR_1| (0+32768))
  4669  0FDF  00B9               	movwf	__fassert@file+1
  4670  0FE0  30AC               	movlw	low (STR_2| (0+32768))
  4671  0FE1  00BA               	movwf	__fassert@exp
  4672  0FE2  3082               	movlw	high (STR_2| (0+32768))
  4673  0FE3  00BB               	movwf	__fassert@exp+1
  4674  0FE4  318F  2752  318F   	fcall	__fassert
  4675  0FE7                     l1493:	
  4676                           
  4677                           ;byte_union.c: 48: unsigned char *ptb=&byte_u->byte;
  4678  0FE7  0020               	movlb	0	; select bank0
  4679  0FE8  083E               	movf	byte_union_get_byte@byte_u,w
  4680  0FE9  00BC               	movwf	??_byte_union_get_byte
  4681  0FEA  083C               	movf	??_byte_union_get_byte,w
  4682  0FEB  00BD               	movwf	byte_union_get_byte@ptb
  4683                           
  4684                           ;byte_union.c: 50: if(!(ptb!=(0))) {_fassert(50, "byte_union.c", "ptb!=(0)");};
  4685  0FEC  083D               	movf	byte_union_get_byte@ptb,w
  4686  0FED  1D03               	btfss	3,2
  4687  0FEE  2FFD               	goto	l1499
  4688  0FEF  3032               	movlw	50
  4689  0FF0  00B6               	movwf	__fassert@line
  4690  0FF1  3000               	movlw	0
  4691  0FF2  00B7               	movwf	__fassert@line+1
  4692  0FF3  309F               	movlw	low (STR_1| (0+32768))
  4693  0FF4  00B8               	movwf	__fassert@file
  4694  0FF5  3082               	movlw	high (STR_1| (0+32768))
  4695  0FF6  00B9               	movwf	__fassert@file+1
  4696  0FF7  30F7               	movlw	low (STR_10| (0+32768))
  4697  0FF8  00BA               	movwf	__fassert@exp
  4698  0FF9  3082               	movlw	high (STR_10| (0+32768))
  4699  0FFA  00BB               	movwf	__fassert@exp+1
  4700  0FFB  318F  2752         	fcall	__fassert
  4701  0FFD                     l1499:	
  4702                           
  4703                           ;byte_union.c: 52: return ptb;
  4704  0FFD  0020               	movlb	0	; select bank0
  4705  0FFE  083D               	movf	byte_union_get_byte@ptb,w
  4706  0FFF  0008               	return
  4707  1000                     __end_of_byte_union_get_byte:	
  4708                           
  4709                           	psect	text12
  4710  069E                     __ptext12:	
  4711 ;; *************** function _flag_array_get_flag_state *****************
  4712 ;; Defined at:
  4713 ;;		line 52 in file "flag_array.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  flag_array      1    wreg     PTR const struct .
  4716 ;;		 -> test_of_flag_array@array(2), 
  4717 ;;  name            1   32[BANK0 ] unsigned char 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  flag_array      1   36[BANK0 ] PTR const struct .
  4720 ;;		 -> test_of_flag_array@array(2), 
  4721 ;;  val             1   35[BANK0 ] unsigned char 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      unsigned char 
  4724 ;; Registers used:
  4725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4731 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4733 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4734 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4735 ;;Total ram usage:        5 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    5
  4738 ;; This function calls:
  4739 ;;		__fassert
  4740 ;;		_byte_union_get_bit_value
  4741 ;;		_flag_array_valid
  4742 ;; This function is called by:
  4743 ;;		_test_of_flag_array
  4744 ;;		_software_timer_get_enable_value
  4745 ;;		_software_timer_get_overflow_value
  4746 ;;		_software_timer_update
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function _flag_array_get_flag_state
  4752  069E                     _flag_array_get_flag_state:	
  4753                           
  4754                           ;incstack = 0
  4755                           ; Regs used in _flag_array_get_flag_state: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4756                           ;flag_array_get_flag_state@flag_array stored from wreg
  4757  069E  0020               	movlb	0	; select bank0
  4758  069F  00C4               	movwf	flag_array_get_flag_state@flag_array
  4759                           
  4760                           ;flag_array.c: 55: if(!(flag_array!=(0))) {_fassert(55, "flag_array.c", "flag_array!=(0)
      +                          ");};
  4761  06A0  0844               	movf	flag_array_get_flag_state@flag_array,w
  4762  06A1  1D03               	btfss	3,2
  4763  06A2  2EB2               	goto	l97
  4764  06A3  3037               	movlw	55
  4765  06A4  00B6               	movwf	__fassert@line
  4766  06A5  3000               	movlw	0
  4767  06A6  00B7               	movwf	__fassert@line+1
  4768  06A7  3092               	movlw	low (STR_27| (0+32768))
  4769  06A8  00B8               	movwf	__fassert@file
  4770  06A9  3082               	movlw	high (STR_27| (0+32768))
  4771  06AA  00B9               	movwf	__fassert@file+1
  4772  06AB  3082               	movlw	low (STR_28| (0+32768))
  4773  06AC  00BA               	movwf	__fassert@exp
  4774  06AD  3082               	movlw	high (STR_28| (0+32768))
  4775  06AE  00BB               	movwf	__fassert@exp+1
  4776  06AF  318F  2752  3186   	fcall	__fassert
  4777  06B2                     l97:	
  4778                           
  4779                           ;flag_array.c: 56: if(!(flag_array_valid(flag_array)==1)) {_fassert(56, "flag_array.c", 
      +                          "flag_array_valid(flag_array)==1");};
  4780  06B2  0020               	movlb	0	; select bank0
  4781  06B3  0844               	movf	flag_array_get_flag_state@flag_array,w
  4782  06B4  318F  2782  3186   	fcall	_flag_array_valid
  4783  06B7  0020               	movlb	0	; select bank0
  4784  06B8  033C               	decf	?_flag_array_valid,w
  4785  06B9  043D               	iorwf	?_flag_array_valid+1,w
  4786  06BA  1903               	btfsc	3,2
  4787  06BB  2ECB               	goto	l1671
  4788  06BC  3038               	movlw	56
  4789  06BD  00B6               	movwf	__fassert@line
  4790  06BE  3000               	movlw	0
  4791  06BF  00B7               	movwf	__fassert@line+1
  4792  06C0  3092               	movlw	low (STR_27| (0+32768))
  4793  06C1  00B8               	movwf	__fassert@file
  4794  06C2  3082               	movlw	high (STR_27| (0+32768))
  4795  06C3  00B9               	movwf	__fassert@file+1
  4796  06C4  3085               	movlw	low (STR_42| (0+32768))
  4797  06C5  00BA               	movwf	__fassert@exp
  4798  06C6  3080               	movlw	high (STR_42| (0+32768))
  4799  06C7  00BB               	movwf	__fassert@exp+1
  4800  06C8  318F  2752  3186   	fcall	__fassert
  4801  06CB                     l1671:	
  4802                           
  4803                           ;flag_array.c: 57: if(!(name<flag_array->flags_number)) {_fassert(57, "flag_array.c", "n
      +                          ame<flag_array->flags_number");};
  4804  06CB  0020               	movlb	0	; select bank0
  4805  06CC  0A44               	incf	flag_array_get_flag_state@flag_array,w
  4806  06CD  0086               	movwf	6
  4807  06CE  0187               	clrf	7
  4808  06CF  0801               	movf	1,w
  4809  06D0  0240               	subwf	flag_array_get_flag_state@name,w
  4810  06D1  1C03               	skipc
  4811  06D2  2EE2               	goto	l99
  4812  06D3  3039               	movlw	57
  4813  06D4  00B6               	movwf	__fassert@line
  4814  06D5  3000               	movlw	0
  4815  06D6  00B7               	movwf	__fassert@line+1
  4816  06D7  3092               	movlw	low (STR_27| (0+32768))
  4817  06D8  00B8               	movwf	__fassert@file
  4818  06D9  3082               	movlw	high (STR_27| (0+32768))
  4819  06DA  00B9               	movwf	__fassert@file+1
  4820  06DB  30E2               	movlw	low (STR_36| (0+32768))
  4821  06DC  00BA               	movwf	__fassert@exp
  4822  06DD  3080               	movlw	high (STR_36| (0+32768))
  4823  06DE  00BB               	movwf	__fassert@exp+1
  4824  06DF  318F  2752  3186   	fcall	__fassert
  4825  06E2                     l99:	
  4826                           
  4827                           ;flag_array.c: 59: unsigned char val=byte_union_get_bit_value(&flag_array->flags,name);
  4828  06E2  0020               	movlb	0	; select bank0
  4829  06E3  0840               	movf	flag_array_get_flag_state@name,w
  4830  06E4  00C1               	movwf	??_flag_array_get_flag_state
  4831  06E5  0841               	movf	??_flag_array_get_flag_state,w
  4832  06E6  00BC               	movwf	byte_union_get_bit_value@bit_nbr
  4833  06E7  0844               	movf	flag_array_get_flag_state@flag_array,w
  4834  06E8  3185  2521  3186   	fcall	_byte_union_get_bit_value
  4835  06EB  0020               	movlb	0	; select bank0
  4836  06EC  00C2               	movwf	??_flag_array_get_flag_state+1
  4837  06ED  0842               	movf	??_flag_array_get_flag_state+1,w
  4838  06EE  00C3               	movwf	flag_array_get_flag_state@val
  4839                           
  4840                           ;flag_array.c: 61: if(!(val==0 || val==1)) {_fassert(61, "flag_array.c", "val==0 || val=
      +                          =1");};
  4841  06EF  0843               	movf	flag_array_get_flag_state@val,w
  4842  06F0  1903               	btfsc	3,2
  4843  06F1  2F03               	goto	l1681
  4844  06F2  0343               	decf	flag_array_get_flag_state@val,w
  4845  06F3  1903               	btfsc	3,2
  4846  06F4  2F03               	goto	l1681
  4847  06F5  303D               	movlw	61
  4848  06F6  00B6               	movwf	__fassert@line
  4849  06F7  3000               	movlw	0
  4850  06F8  00B7               	movwf	__fassert@line+1
  4851  06F9  3092               	movlw	low (STR_27| (0+32768))
  4852  06FA  00B8               	movwf	__fassert@file
  4853  06FB  3082               	movlw	high (STR_27| (0+32768))
  4854  06FC  00B9               	movwf	__fassert@file+1
  4855  06FD  3071               	movlw	low (STR_6| (0+32768))
  4856  06FE  00BA               	movwf	__fassert@exp
  4857  06FF  3082               	movlw	high (STR_6| (0+32768))
  4858  0700  00BB               	movwf	__fassert@exp+1
  4859  0701  318F  2752         	fcall	__fassert
  4860  0703                     l1681:	
  4861                           
  4862                           ;flag_array.c: 63: return val;
  4863  0703  0020               	movlb	0	; select bank0
  4864  0704  0843               	movf	flag_array_get_flag_state@val,w
  4865  0705  0008               	return
  4866  0706                     __end_of_flag_array_get_flag_state:	
  4867                           
  4868                           	psect	text13
  4869  0F82                     __ptext13:	
  4870 ;; *************** function _flag_array_valid *****************
  4871 ;; Defined at:
  4872 ;;		line 6 in file "flag_array.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  flag_array      1    wreg     PTR const struct .
  4875 ;;		 -> test_of_flag_array@array(2), 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  flag_array      1   31[BANK0 ] PTR const struct .
  4878 ;;		 -> test_of_flag_array@array(2), 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  2   28[BANK0 ] int 
  4881 ;; Registers used:
  4882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4888 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;Total ram usage:        4 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    4
  4895 ;; This function calls:
  4896 ;;		__fassert
  4897 ;; This function is called by:
  4898 ;;		_flag_array_set_flag
  4899 ;;		_flag_array_initialise
  4900 ;;		_flag_array_set_numbers
  4901 ;;		_flag_array_get_flag_state
  4902 ;;		_test_of_flag_array
  4903 ;;		_software_timer_valid
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           
  4908                           ;psect for function _flag_array_valid
  4909  0F82                     _flag_array_valid:	
  4910                           
  4911                           ;incstack = 0
  4912                           ; Regs used in _flag_array_valid: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4913                           ;flag_array_valid@flag_array stored from wreg
  4914  0F82  0020               	movlb	0	; select bank0
  4915  0F83  00BF               	movwf	flag_array_valid@flag_array
  4916                           
  4917                           ;flag_array.c: 8: if(!(flag_array!=(0))) {_fassert(8, "flag_array.c", "flag_array!=(0)")
      +                          ;};
  4918  0F84  083F               	movf	flag_array_valid@flag_array,w
  4919  0F85  1D03               	btfss	3,2
  4920  0F86  2F96               	goto	l1603
  4921  0F87  3008               	movlw	8
  4922  0F88  00B6               	movwf	__fassert@line
  4923  0F89  3000               	movlw	0
  4924  0F8A  00B7               	movwf	__fassert@line+1
  4925  0F8B  3092               	movlw	low (STR_27| (0+32768))
  4926  0F8C  00B8               	movwf	__fassert@file
  4927  0F8D  3082               	movlw	high (STR_27| (0+32768))
  4928  0F8E  00B9               	movwf	__fassert@file+1
  4929  0F8F  3082               	movlw	low (STR_28| (0+32768))
  4930  0F90  00BA               	movwf	__fassert@exp
  4931  0F91  3082               	movlw	high (STR_28| (0+32768))
  4932  0F92  00BB               	movwf	__fassert@exp+1
  4933  0F93  318F  2752  318F   	fcall	__fassert
  4934  0F96                     l1603:	
  4935                           
  4936                           ;flag_array.c: 9: if(flag_array->flags_number>8)
  4937  0F96  0020               	movlb	0	; select bank0
  4938  0F97  0A3F               	incf	flag_array_valid@flag_array,w
  4939  0F98  0086               	movwf	6
  4940  0F99  0187               	clrf	7
  4941  0F9A  3009               	movlw	9
  4942  0F9B  0201               	subwf	1,w
  4943  0F9C  1C03               	skipc
  4944  0F9D  2FA1               	goto	l1609
  4945                           
  4946                           ;flag_array.c: 10: return 0;
  4947  0F9E  01BC               	clrf	?_flag_array_valid
  4948  0F9F  01BD               	clrf	?_flag_array_valid+1
  4949  0FA0  0008               	return
  4950  0FA1                     l1609:	
  4951                           
  4952                           ;flag_array.c: 11: return 1;
  4953  0FA1  3001               	movlw	1
  4954  0FA2  00BC               	movwf	?_flag_array_valid
  4955  0FA3  3000               	movlw	0
  4956  0FA4  00BD               	movwf	?_flag_array_valid+1
  4957  0FA5  0008               	return
  4958  0FA6                     __end_of_flag_array_valid:	
  4959                           
  4960                           	psect	text14
  4961  0521                     __ptext14:	
  4962 ;; *************** function _byte_union_get_bit_value *****************
  4963 ;; Defined at:
  4964 ;;		line 4 in file "byte_union.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  byte_u          1    wreg     PTR const struct .
  4967 ;;		 -> test_of_flag_array@array(2), 
  4968 ;;  bit_nbr         1   28[BANK0 ] unsigned char 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  byte_u          1   30[BANK0 ] PTR const struct .
  4971 ;;		 -> test_of_flag_array@array(2), 
  4972 ;;  val             1   29[BANK0 ] unsigned char 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      unsigned char 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4982 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4985 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;Total ram usage:        3 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    4
  4989 ;; This function calls:
  4990 ;;		__fassert
  4991 ;; This function is called by:
  4992 ;;		_flag_array_get_flag_state
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           
  4997                           ;psect for function _byte_union_get_bit_value
  4998  0521                     _byte_union_get_bit_value:	
  4999                           
  5000                           ;incstack = 0
  5001                           ; Regs used in _byte_union_get_bit_value: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5002                           ;byte_union_get_bit_value@byte_u stored from wreg
  5003  0521  0020               	movlb	0	; select bank0
  5004  0522  00BE               	movwf	byte_union_get_bit_value@byte_u
  5005                           
  5006                           ;byte_union.c: 7: if(!(byte_u!=(0))) {_fassert(7, "byte_union.c", "byte_u!=(0)");};
  5007  0523  083E               	movf	byte_union_get_bit_value@byte_u,w
  5008  0524  1D03               	btfss	3,2
  5009  0525  2D35               	goto	l1517
  5010  0526  3007               	movlw	7
  5011  0527  00B6               	movwf	__fassert@line
  5012  0528  3000               	movlw	0
  5013  0529  00B7               	movwf	__fassert@line+1
  5014  052A  309F               	movlw	low (STR_1| (0+32768))
  5015  052B  00B8               	movwf	__fassert@file
  5016  052C  3082               	movlw	high (STR_1| (0+32768))
  5017  052D  00B9               	movwf	__fassert@file+1
  5018  052E  30AC               	movlw	low (STR_2| (0+32768))
  5019  052F  00BA               	movwf	__fassert@exp
  5020  0530  3082               	movlw	high (STR_2| (0+32768))
  5021  0531  00BB               	movwf	__fassert@exp+1
  5022  0532  318F  2752  3185   	fcall	__fassert
  5023  0535                     l1517:	
  5024                           
  5025                           ;byte_union.c: 8: if(!(bit_nbr<8)) {_fassert(8, "byte_union.c", "bit_nbr<8");};
  5026  0535  3008               	movlw	8
  5027  0536  0020               	movlb	0	; select bank0
  5028  0537  023C               	subwf	byte_union_get_bit_value@bit_nbr,w
  5029  0538  1C03               	skipc
  5030  0539  2D49               	goto	l1521
  5031  053A  3008               	movlw	8
  5032  053B  00B6               	movwf	__fassert@line
  5033  053C  3000               	movlw	0
  5034  053D  00B7               	movwf	__fassert@line+1
  5035  053E  309F               	movlw	low (STR_1| (0+32768))
  5036  053F  00B8               	movwf	__fassert@file
  5037  0540  3082               	movlw	high (STR_1| (0+32768))
  5038  0541  00B9               	movwf	__fassert@file+1
  5039  0542  30E4               	movlw	low (STR_4| (0+32768))
  5040  0543  00BA               	movwf	__fassert@exp
  5041  0544  3082               	movlw	high (STR_4| (0+32768))
  5042  0545  00BB               	movwf	__fassert@exp+1
  5043  0546  318F  2752  3185   	fcall	__fassert
  5044  0549                     l1521:	
  5045                           
  5046                           ;byte_union.c: 10: unsigned char val=0;
  5047  0549  0020               	movlb	0	; select bank0
  5048  054A  01BD               	clrf	byte_union_get_bit_value@val
  5049                           
  5050                           ;byte_union.c: 11: switch(bit_nbr){
  5051  054B  2D8C               	goto	l1541
  5052  054C                     l1523:	
  5053                           ;byte_union.c: 12: case 0:
  5054                           
  5055                           
  5056                           ;byte_union.c: 13: val=byte_u->b0;
  5057  054C  083E               	movf	byte_union_get_bit_value@byte_u,w
  5058  054D  0086               	movwf	6
  5059  054E  0187               	clrf	7
  5060  054F  3000               	movlw	0
  5061  0550  1801               	btfsc	1,0
  5062  0551  3001               	movlw	1
  5063  0552  00BD               	movwf	byte_union_get_bit_value@val
  5064                           
  5065                           ;byte_union.c: 14: break;
  5066  0553  2D96               	goto	l1543
  5067  0554                     l1525:	
  5068                           ;byte_union.c: 15: case 1:
  5069                           
  5070                           
  5071                           ;byte_union.c: 16: val=byte_u->b1;
  5072  0554  083E               	movf	byte_union_get_bit_value@byte_u,w
  5073  0555  0086               	movwf	6
  5074  0556  0187               	clrf	7
  5075  0557  3000               	movlw	0
  5076  0558  1881               	btfsc	1,1
  5077  0559  3001               	movlw	1
  5078  055A  00BD               	movwf	byte_union_get_bit_value@val
  5079                           
  5080                           ;byte_union.c: 17: break;
  5081  055B  2D96               	goto	l1543
  5082  055C                     l1527:	
  5083                           ;byte_union.c: 18: case 2:
  5084                           
  5085                           
  5086                           ;byte_union.c: 19: val=byte_u->b2;
  5087  055C  083E               	movf	byte_union_get_bit_value@byte_u,w
  5088  055D  0086               	movwf	6
  5089  055E  0187               	clrf	7
  5090  055F  3000               	movlw	0
  5091  0560  1901               	btfsc	1,2
  5092  0561  3001               	movlw	1
  5093  0562  00BD               	movwf	byte_union_get_bit_value@val
  5094                           
  5095                           ;byte_union.c: 20: break;
  5096  0563  2D96               	goto	l1543
  5097  0564                     l1529:	
  5098                           ;byte_union.c: 21: case 3:
  5099                           
  5100                           
  5101                           ;byte_union.c: 22: val=byte_u->b3;
  5102  0564  083E               	movf	byte_union_get_bit_value@byte_u,w
  5103  0565  0086               	movwf	6
  5104  0566  0187               	clrf	7
  5105  0567  3000               	movlw	0
  5106  0568  1981               	btfsc	1,3
  5107  0569  3001               	movlw	1
  5108  056A  00BD               	movwf	byte_union_get_bit_value@val
  5109                           
  5110                           ;byte_union.c: 23: break;
  5111  056B  2D96               	goto	l1543
  5112  056C                     l1531:	
  5113                           ;byte_union.c: 24: case 4:
  5114                           
  5115                           
  5116                           ;byte_union.c: 25: val=byte_u->b4;
  5117  056C  083E               	movf	byte_union_get_bit_value@byte_u,w
  5118  056D  0086               	movwf	6
  5119  056E  0187               	clrf	7
  5120  056F  3000               	movlw	0
  5121  0570  1A01               	btfsc	1,4
  5122  0571  3001               	movlw	1
  5123  0572  00BD               	movwf	byte_union_get_bit_value@val
  5124                           
  5125                           ;byte_union.c: 26: break;
  5126  0573  2D96               	goto	l1543
  5127  0574                     l1533:	
  5128                           ;byte_union.c: 27: case 5:
  5129                           
  5130                           
  5131                           ;byte_union.c: 28: val=byte_u->b5;
  5132  0574  083E               	movf	byte_union_get_bit_value@byte_u,w
  5133  0575  0086               	movwf	6
  5134  0576  0187               	clrf	7
  5135  0577  3000               	movlw	0
  5136  0578  1A81               	btfsc	1,5
  5137  0579  3001               	movlw	1
  5138  057A  00BD               	movwf	byte_union_get_bit_value@val
  5139                           
  5140                           ;byte_union.c: 29: break;
  5141  057B  2D96               	goto	l1543
  5142  057C                     l1535:	
  5143                           ;byte_union.c: 30: case 6:
  5144                           
  5145                           
  5146                           ;byte_union.c: 31: val=byte_u->b6;
  5147  057C  083E               	movf	byte_union_get_bit_value@byte_u,w
  5148  057D  0086               	movwf	6
  5149  057E  0187               	clrf	7
  5150  057F  3000               	movlw	0
  5151  0580  1B01               	btfsc	1,6
  5152  0581  3001               	movlw	1
  5153  0582  00BD               	movwf	byte_union_get_bit_value@val
  5154                           
  5155                           ;byte_union.c: 32: break;
  5156  0583  2D96               	goto	l1543
  5157  0584                     l1537:	
  5158                           ;byte_union.c: 33: case 7:
  5159                           
  5160                           
  5161                           ;byte_union.c: 34: val=byte_u->b7;
  5162  0584  083E               	movf	byte_union_get_bit_value@byte_u,w
  5163  0585  0086               	movwf	6
  5164  0586  0187               	clrf	7
  5165  0587  3000               	movlw	0
  5166  0588  1B81               	btfsc	1,7
  5167  0589  3001               	movlw	1
  5168  058A  00BD               	movwf	byte_union_get_bit_value@val
  5169                           
  5170                           ;byte_union.c: 36: }
  5171                           
  5172                           ;byte_union.c: 35: break;
  5173  058B  2D96               	goto	l1543
  5174  058C                     l1541:	
  5175  058C  083C               	movf	byte_union_get_bit_value@bit_nbr,w
  5176                           
  5177                           ; Switch size 1, requested type "space"
  5178                           ; Number of cases is 8, Range of values is 0 to 7
  5179                           ; switch strategies available:
  5180                           ; Name         Instructions Cycles
  5181                           ; direct_byte           22     6 (fixed)
  5182                           ; simple_byte           25    13 (average)
  5183                           ; jumptable            260     6 (fixed)
  5184                           ;	Chosen strategy is direct_byte
  5185  058D  0084               	movwf	4
  5186  058E  3008               	movlw	8
  5187  058F  0204               	subwf	4,w
  5188  0590  1803               	skipnc
  5189  0591  2D96               	goto	l1543
  5190  0592  3188               	movlp	high S1947
  5191  0593  3504               	lslf	4,w
  5192  0594  3E00               	addlw	low S1947
  5193  0595  0082               	movwf	2
  5194  0596                     l1543:	
  5195                           
  5196                           ;byte_union.c: 38: if(!(val==0 || val==1)) {_fassert(38, "byte_union.c", "val==0 || val=
      +                          =1");};
  5197  0596  083D               	movf	byte_union_get_bit_value@val,w
  5198  0597  1903               	btfsc	3,2
  5199  0598  2DAA               	goto	l1549
  5200  0599  033D               	decf	byte_union_get_bit_value@val,w
  5201  059A  1903               	btfsc	3,2
  5202  059B  2DAA               	goto	l1549
  5203  059C  3026               	movlw	38
  5204  059D  00B6               	movwf	__fassert@line
  5205  059E  3000               	movlw	0
  5206  059F  00B7               	movwf	__fassert@line+1
  5207  05A0  309F               	movlw	low (STR_1| (0+32768))
  5208  05A1  00B8               	movwf	__fassert@file
  5209  05A2  3082               	movlw	high (STR_1| (0+32768))
  5210  05A3  00B9               	movwf	__fassert@file+1
  5211  05A4  3071               	movlw	low (STR_6| (0+32768))
  5212  05A5  00BA               	movwf	__fassert@exp
  5213  05A6  3082               	movlw	high (STR_6| (0+32768))
  5214  05A7  00BB               	movwf	__fassert@exp+1
  5215  05A8  318F  2752         	fcall	__fassert
  5216  05AA                     l1549:	
  5217                           
  5218                           ;byte_union.c: 40: return val;
  5219  05AA  0020               	movlb	0	; select bank0
  5220  05AB  083D               	movf	byte_union_get_bit_value@val,w
  5221  05AC  0008               	return
  5222  05AD                     __end_of_byte_union_get_bit_value:	
  5223                           
  5224                           	psect	swtext2
  5225  0800                     __pswtext2:	
  5226  0800                     S1947:	
  5227  0800  3185  2D4C         	ljmp	l1523
  5228  0802  3185  2D54         	ljmp	l1525
  5229  0804  3185  2D5C         	ljmp	l1527
  5230  0806  3185  2D64         	ljmp	l1529
  5231  0808  3185  2D6C         	ljmp	l1531
  5232  080A  3185  2D74         	ljmp	l1533
  5233  080C  3185  2D7C         	ljmp	l1535
  5234  080E  3185  2D84         	ljmp	l1537
  5235                           
  5236                           	psect	text15
  5237  0F52                     __ptext15:	
  5238 ;; *************** function __fassert *****************
  5239 ;; Defined at:
  5240 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\assert.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  line            2   22[BANK0 ] int 
  5243 ;;  file            2   24[BANK0 ] PTR const unsigned char 
  5244 ;;		 -> STR_109(17), STR_107(17), STR_105(17), STR_103(17), 
  5245 ;;		 -> STR_101(17), STR_99(17), STR_97(17), STR_95(17), 
  5246 ;;		 -> STR_93(17), STR_91(17), STR_89(17), STR_87(17), 
  5247 ;;		 -> STR_85(17), STR_83(17), STR_81(17), STR_79(17), 
  5248 ;;		 -> STR_77(17), STR_75(17), STR_73(17), STR_71(17), 
  5249 ;;		 -> STR_69(17), STR_67(17), STR_65(17), STR_63(8), 
  5250 ;;		 -> STR_61(8), STR_59(8), STR_57(8), STR_55(13), 
  5251 ;;		 -> STR_53(13), STR_51(13), STR_49(13), STR_47(13), 
  5252 ;;		 -> STR_45(13), STR_43(13), STR_41(13), STR_39(13), 
  5253 ;;		 -> STR_37(13), STR_35(13), STR_33(13), STR_31(13), 
  5254 ;;		 -> STR_29(13), STR_27(13), STR_25(13), STR_23(13), 
  5255 ;;		 -> STR_21(13), STR_19(13), STR_17(13), STR_15(13), 
  5256 ;;		 -> STR_13(13), STR_11(13), STR_9(13), STR_7(13), 
  5257 ;;		 -> STR_5(13), STR_3(13), STR_1(13), 
  5258 ;;  exp             2   26[BANK0 ] PTR const unsigned char 
  5259 ;;		 -> STR_110(28), STR_108(27), STR_106(28), STR_104(11), 
  5260 ;;		 -> STR_102(28), STR_100(27), STR_98(28), STR_96(11), 
  5261 ;;		 -> STR_94(28), STR_92(23), STR_90(28), STR_88(11), 
  5262 ;;		 -> STR_86(28), STR_84(11), STR_82(28), STR_80(28), 
  5263 ;;		 -> STR_78(11), STR_76(28), STR_74(28), STR_72(11), 
  5264 ;;		 -> STR_70(28), STR_68(11), STR_66(11), STR_64(19), 
  5265 ;;		 -> STR_62(11), STR_60(19), STR_58(11), STR_56(17), 
  5266 ;;		 -> STR_54(30), STR_52(32), STR_50(16), STR_48(32), 
  5267 ;;		 -> STR_46(7), STR_44(16), STR_42(32), STR_40(16), 
  5268 ;;		 -> STR_38(29), STR_36(30), STR_34(21), STR_32(29), 
  5269 ;;		 -> STR_30(16), STR_28(16), STR_26(12), STR_24(10), 
  5270 ;;		 -> STR_22(21), STR_20(12), STR_18(9), STR_16(12), 
  5271 ;;		 -> STR_14(9), STR_12(12), STR_10(9), STR_8(12), 
  5272 ;;		 -> STR_6(17), STR_4(10), STR_2(12), 
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5284 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5288 ;;Total ram usage:        6 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    3
  5291 ;; This function calls:
  5292 ;;		_printf
  5293 ;; This function is called by:
  5294 ;;		_byte_union_get_bit_value
  5295 ;;		_byte_union_get_byte
  5296 ;;		_byte_union_set_byte
  5297 ;;		_byte_union_set_bit
  5298 ;;		_byte_union_initialize
  5299 ;;		_flag_array_valid
  5300 ;;		_flag_array_set_flag
  5301 ;;		_flag_array_initialise
  5302 ;;		_flag_array_set_numbers
  5303 ;;		_flag_array_get_flag_state
  5304 ;;		_byte_union_get_byte_info
  5305 ;;		_input_initialize
  5306 ;;		_input_update
  5307 ;;		_software_timer_valid
  5308 ;;		_software_timer_set_preset
  5309 ;;		_software_timer_set_enable
  5310 ;;		_software_timer_clear_overflow
  5311 ;;		_software_timer_initialize
  5312 ;;		_software_timer_get_enable_value
  5313 ;;		_software_timer_get_overflow_value
  5314 ;;		_software_timer_update
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           
  5319                           ;psect for function __fassert
  5320  0F52                     __fassert:	
  5321                           
  5322                           ;incstack = 0
  5323                           ; Regs used in __fassert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5324  0F52  301E               	movlw	low (STR_127| (0+32768))
  5325  0F53  0020               	movlb	0	; select bank0
  5326  0F54  00A2               	movwf	printf@f
  5327  0F55  3080               	movlw	high (STR_127| (0+32768))
  5328  0F56  00A3               	movwf	printf@f+1
  5329  0F57  0839               	movf	__fassert@file+1,w
  5330  0F58  00A5               	movwf	(low ((?_printf| 0+2))+1)
  5331  0F59  0838               	movf	__fassert@file,w
  5332  0F5A  00A4               	movwf	low ((?_printf| 0+2))
  5333  0F5B  0837               	movf	__fassert@line+1,w
  5334  0F5C  00A7               	movwf	?_printf+5
  5335  0F5D  0836               	movf	__fassert@line,w
  5336  0F5E  00A6               	movwf	?_printf+4
  5337  0F5F  083B               	movf	__fassert@exp+1,w
  5338  0F60  00A9               	movwf	(low ((?_printf| 0+6))+1)
  5339  0F61  083A               	movf	__fassert@exp,w
  5340  0F62  00A8               	movwf	low ((?_printf| 0+6))
  5341  0F63  3183  231D         	fcall	_printf
  5342  0F65  318F  2F52         	ljmp	$	;# 
  5343  0F67  0008               	return
  5344  0F68                     __end_of__fassert:	
  5345                           
  5346                           	psect	text16
  5347  031D                     __ptext16:	
  5348 ;; *************** function _printf *****************
  5349 ;; Defined at:
  5350 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  5353 ;;		 -> STR_127(36), STR_125(30), STR_124(35), STR_123(24), 
  5354 ;;		 -> STR_122(29), STR_121(27), STR_120(32), STR_119(21), 
  5355 ;;		 -> STR_118(26), STR_117(26), STR_116(31), STR_115(7), 
  5356 ;;		 -> STR_114(9), STR_113(11), STR_112(11), STR_111(25), 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  tmpval          4    0        struct .
  5359 ;;  val             2   19[BANK0 ] unsigned int 
  5360 ;;  cp              2   17[BANK0 ] PTR const unsigned char 
  5361 ;;		 -> STR_126(7), STR_110(28), STR_109(17), STR_108(27), 
  5362 ;;		 -> STR_107(17), STR_106(28), STR_105(17), STR_104(11), 
  5363 ;;		 -> STR_103(17), STR_102(28), STR_101(17), STR_100(27), 
  5364 ;;		 -> STR_99(17), STR_98(28), STR_97(17), STR_96(11), 
  5365 ;;		 -> STR_95(17), STR_94(28), STR_93(17), STR_92(23), 
  5366 ;;		 -> STR_91(17), STR_90(28), STR_89(17), STR_88(11), 
  5367 ;;		 -> STR_87(17), STR_86(28), STR_85(17), STR_84(11), 
  5368 ;;		 -> STR_83(17), STR_82(28), STR_81(17), STR_80(28), 
  5369 ;;		 -> STR_79(17), STR_78(11), STR_77(17), STR_76(28), 
  5370 ;;		 -> STR_75(17), STR_74(28), STR_73(17), STR_72(11), 
  5371 ;;		 -> STR_71(17), STR_70(28), STR_69(17), STR_68(11), 
  5372 ;;		 -> STR_67(17), STR_66(11), STR_65(17), STR_64(19), 
  5373 ;;		 -> STR_63(8), STR_62(11), STR_61(8), STR_60(19), 
  5374 ;;		 -> STR_59(8), STR_58(11), STR_57(8), STR_56(17), 
  5375 ;;		 -> STR_55(13), STR_54(30), STR_53(13), STR_52(32), 
  5376 ;;		 -> STR_51(13), STR_50(16), STR_49(13), STR_48(32), 
  5377 ;;		 -> STR_47(13), STR_46(7), STR_45(13), STR_44(16), 
  5378 ;;		 -> STR_43(13), STR_42(32), STR_41(13), STR_40(16), 
  5379 ;;		 -> STR_39(13), STR_38(29), STR_37(13), STR_36(30), 
  5380 ;;		 -> STR_35(13), STR_34(21), STR_33(13), STR_32(29), 
  5381 ;;		 -> STR_31(13), STR_30(16), STR_29(13), STR_28(16), 
  5382 ;;		 -> STR_27(13), STR_26(12), STR_25(13), STR_24(10), 
  5383 ;;		 -> STR_23(13), STR_22(21), STR_21(13), STR_20(12), 
  5384 ;;		 -> STR_19(13), STR_18(9), STR_17(13), STR_16(12), 
  5385 ;;		 -> STR_15(13), STR_14(9), STR_13(13), STR_12(12), 
  5386 ;;		 -> STR_11(13), STR_10(9), STR_9(13), STR_8(12), 
  5387 ;;		 -> STR_7(13), STR_6(17), STR_5(13), STR_4(10), 
  5388 ;;		 -> STR_3(13), STR_2(12), STR_1(13), 
  5389 ;;  len             2    0        unsigned int 
  5390 ;;  c               1   21[BANK0 ] char 
  5391 ;;  ap              1   16[BANK0 ] PTR void [1]
  5392 ;;		 -> ?_printf(2), 
  5393 ;;  prec            1   15[BANK0 ] char 
  5394 ;;  flag            1   14[BANK0 ] unsigned char 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  2    2[BANK0 ] int 
  5397 ;; Registers used:
  5398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5404 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5405 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5406 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5407 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5408 ;;Total ram usage:       20 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; Hardware stack levels required when called:    2
  5411 ;; This function calls:
  5412 ;;		___lwdiv
  5413 ;;		___lwmod
  5414 ;;		_putch
  5415 ;; This function is called by:
  5416 ;;		_test_of_time_type
  5417 ;;		_test_of_flag_array
  5418 ;;		__fassert
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           
  5423                           ;psect for function _printf
  5424  031D                     _printf:	
  5425                           
  5426                           ;doprnt.c: 466: va_list ap;
  5427                           ;doprnt.c: 499: signed char c;
  5428                           ;doprnt.c: 506: signed char prec;
  5429                           ;doprnt.c: 508: unsigned char flag;
  5430                           ;doprnt.c: 523: union {
  5431                           ;doprnt.c: 524: unsigned long vd;
  5432                           ;doprnt.c: 525: double integ;
  5433                           ;doprnt.c: 526: } tmpval;
  5434                           ;doprnt.c: 528: unsigned int val;
  5435                           ;doprnt.c: 529: unsigned len;
  5436                           ;doprnt.c: 530: const char * cp;
  5437                           ;doprnt.c: 533: *ap = __va_start();
  5438                           
  5439                           ;incstack = 0
  5440                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5441  031D  3024               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5442  031E  0020               	movlb	0	; select bank0
  5443  031F  00AA               	movwf	??_printf
  5444  0320  082A               	movf	??_printf,w
  5445  0321  00B0               	movwf	printf@ap
  5446  0322                     l1485:	
  5447                           ;doprnt.c: 536: while(c = *f++) {
  5448                           
  5449  0322  0020               	movlb	0	; select bank0
  5450  0323  0823               	movf	printf@f+1,w
  5451  0324  00AB               	movwf	??_printf+1
  5452  0325  0822               	movf	printf@f,w
  5453  0326  00AA               	movwf	??_printf
  5454  0327  0AA2               	incf	printf@f,f
  5455  0328  1903               	skipnz
  5456  0329  0AA3               	incf	printf@f+1,f
  5457  032A  082A               	movf	??_printf,w
  5458  032B  0084               	movwf	4
  5459  032C  082B               	movf	??_printf+1,w
  5460  032D  0085               	movwf	5
  5461  032E  0800               	movf	0,w	;code access
  5462  032F  00AC               	movwf	??_printf+2
  5463  0330  082C               	movf	??_printf+2,w
  5464  0331  00B5               	movwf	printf@c
  5465  0332  0835               	movf	printf@c,w
  5466  0333  1903               	btfsc	3,2
  5467  0334  0008               	return
  5468                           
  5469                           ;doprnt.c: 538: if(c != '%')
  5470  0335  3025               	movlw	37
  5471  0336  0635               	xorwf	printf@c,w
  5472  0337  1903               	btfsc	3,2
  5473  0338  2B3E               	goto	l1431
  5474                           
  5475                           ;doprnt.c: 540: {
  5476                           ;doprnt.c: 541: (putch(c) );
  5477  0339  0835               	movf	printf@c,w
  5478  033A  318F  273D  3183   	fcall	_putch
  5479                           
  5480                           ;doprnt.c: 542: continue;
  5481  033D  2B22               	goto	l1485
  5482  033E                     l1431:	
  5483                           
  5484                           ;doprnt.c: 543: }
  5485                           ;doprnt.c: 548: flag = 0;
  5486  033E  0020               	movlb	0	; select bank0
  5487  033F  01AE               	clrf	printf@flag
  5488                           
  5489                           ;doprnt.c: 635: switch(c = *f++) {
  5490  0340  2B69               	goto	l1449
  5491  0341                     l1433:	
  5492                           ;doprnt.c: 728: case 's':
  5493                           
  5494                           ;doprnt.c: 698: case 'i':
  5495                           ;doprnt.c: 699: break;
  5496                           
  5497                           ;doprnt.c: 697: case 'd':
  5498                           
  5499                           ;doprnt.c: 638: goto alldone;
  5500                           
  5501                           ;doprnt.c: 637: case 0:
  5502                           
  5503                           
  5504                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5505  0341  0830               	movf	printf@ap,w
  5506  0342  0086               	movwf	6
  5507  0343  0187               	clrf	7
  5508  0344  3F40               	moviw [0]fsr1
  5509  0345  00B1               	movwf	printf@cp
  5510  0346  3F41               	moviw [1]fsr1
  5511  0347  00B2               	movwf	printf@cp+1
  5512  0348  3002               	movlw	2
  5513  0349  00AA               	movwf	??_printf
  5514  034A  082A               	movf	??_printf,w
  5515  034B  07B0               	addwf	printf@ap,f
  5516                           
  5517                           ;doprnt.c: 740: if(!cp)
  5518  034C  0831               	movf	printf@cp,w
  5519  034D  0432               	iorwf	printf@cp+1,w
  5520  034E  1D03               	btfss	3,2
  5521  034F  2B54               	goto	l1445
  5522                           
  5523                           ;doprnt.c: 741: cp = "(null)";
  5524  0350  3008               	movlw	low (STR_126| (0+32768))
  5525  0351  00B1               	movwf	printf@cp
  5526  0352  3083               	movlw	high (STR_126| (0+32768))
  5527  0353  00B2               	movwf	printf@cp+1
  5528  0354                     l1445:	
  5529                           ;doprnt.c: 777: while(*cp)
  5530                           
  5531  0354  0831               	movf	printf@cp,w
  5532  0355  0084               	movwf	4
  5533  0356  0832               	movf	printf@cp+1,w
  5534  0357  0085               	movwf	5
  5535  0358  0012               	moviw fsr0++
  5536  0359  1903               	btfsc	3,2
  5537  035A  2B22               	goto	l1485
  5538                           
  5539                           ;doprnt.c: 778: (putch(*cp++) );
  5540  035B  0831               	movf	printf@cp,w
  5541  035C  0084               	movwf	4
  5542  035D  0832               	movf	printf@cp+1,w
  5543  035E  0085               	movwf	5
  5544  035F  0800               	movf	0,w	;code access
  5545  0360  318F  273D  3183   	fcall	_putch
  5546  0363  3001               	movlw	1
  5547  0364  0020               	movlb	0	; select bank0
  5548  0365  07B1               	addwf	printf@cp,f
  5549  0366  3000               	movlw	0
  5550  0367  3DB2               	addwfc	printf@cp+1,f
  5551  0368  2B54               	goto	l1445
  5552  0369                     l1449:	
  5553                           ;doprnt.c: 822: }
  5554                           
  5555                           ;doprnt.c: 813: continue;
  5556                           
  5557                           ;doprnt.c: 802: default:
  5558                           
  5559                           ;doprnt.c: 779: continue;
  5560                           
  5561  0369  0823               	movf	printf@f+1,w
  5562  036A  00AB               	movwf	??_printf+1
  5563  036B  0822               	movf	printf@f,w
  5564  036C  00AA               	movwf	??_printf
  5565  036D  0AA2               	incf	printf@f,f
  5566  036E  1903               	skipnz
  5567  036F  0AA3               	incf	printf@f+1,f
  5568  0370  082A               	movf	??_printf,w
  5569  0371  0084               	movwf	4
  5570  0372  082B               	movf	??_printf+1,w
  5571  0373  0085               	movwf	5
  5572  0374  0800               	movf	0,w	;code access
  5573  0375  00B5               	movwf	printf@c
  5574                           
  5575                           ; Switch size 1, requested type "space"
  5576                           ; Number of cases is 4, Range of values is 0 to 115
  5577                           ; switch strategies available:
  5578                           ; Name         Instructions Cycles
  5579                           ; simple_byte           13     7 (average)
  5580                           ; direct_byte          238     6 (fixed)
  5581                           ; jumptable            260     6 (fixed)
  5582                           ;	Chosen strategy is simple_byte
  5583  0376  3A00               	xorlw	0	; case 0
  5584  0377  1903               	skipnz
  5585  0378  2BFF               	goto	l308
  5586  0379  3A64               	xorlw	100	; case 100
  5587  037A  1903               	skipnz
  5588  037B  2B83               	goto	l1451
  5589  037C  3A0D               	xorlw	13	; case 105
  5590  037D  1903               	skipnz
  5591  037E  2B83               	goto	l1451
  5592  037F  3A1A               	xorlw	26	; case 115
  5593  0380  1903               	skipnz
  5594  0381  2B41               	goto	l1433
  5595  0382  2B22               	goto	l1485
  5596  0383                     l1451:	
  5597                           
  5598                           ;doprnt.c: 1253: {
  5599                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5600  0383  0830               	movf	printf@ap,w
  5601  0384  0086               	movwf	6
  5602  0385  0187               	clrf	7
  5603  0386  3F40               	moviw [0]fsr1
  5604  0387  00B3               	movwf	printf@val
  5605  0388  3F41               	moviw [1]fsr1
  5606  0389  00B4               	movwf	printf@val+1
  5607  038A  3002               	movlw	2
  5608  038B  00AA               	movwf	??_printf
  5609  038C  082A               	movf	??_printf,w
  5610  038D  07B0               	addwf	printf@ap,f
  5611                           
  5612                           ;doprnt.c: 1261: if((int)val < 0) {
  5613  038E  1FB4               	btfss	printf@val+1,7
  5614  038F  2B99               	goto	l1461
  5615                           
  5616                           ;doprnt.c: 1262: flag |= 0x03;
  5617  0390  3003               	movlw	3
  5618  0391  00AA               	movwf	??_printf
  5619  0392  082A               	movf	??_printf,w
  5620  0393  04AE               	iorwf	printf@flag,f
  5621                           
  5622                           ;doprnt.c: 1263: val = -val;
  5623  0394  09B3               	comf	printf@val,f
  5624  0395  09B4               	comf	printf@val+1,f
  5625  0396  0AB3               	incf	printf@val,f
  5626  0397  1903               	skipnz
  5627  0398  0AB4               	incf	printf@val+1,f
  5628  0399                     l1461:	
  5629                           
  5630                           ;doprnt.c: 1264: }
  5631                           ;doprnt.c: 1266: }
  5632                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5633  0399  01B5               	clrf	printf@c
  5634  039A  0AB5               	incf	printf@c,f
  5635  039B  3005               	movlw	5
  5636  039C  0635               	xorwf	printf@c,w
  5637  039D  1903               	btfsc	3,2
  5638  039E  2BBE               	goto	l1473
  5639  039F                     l1467:	
  5640                           
  5641                           ;doprnt.c: 1306: if(val < dpowers[c])
  5642  039F  0835               	movf	printf@c,w
  5643  03A0  00AA               	movwf	??_printf
  5644  03A1  01AB               	clrf	??_printf+1
  5645  03A2  35AA               	lslf	??_printf,f
  5646  03A3  0DAB               	rlf	??_printf+1,f
  5647  03A4  3014               	movlw	low (_dpowers| (0+32768))
  5648  03A5  072A               	addwf	??_printf,w
  5649  03A6  0084               	movwf	4
  5650  03A7  3080               	movlw	high (_dpowers| (0+32768))
  5651  03A8  3D2B               	addwfc	??_printf+1,w
  5652  03A9  0085               	movwf	5
  5653  03AA  3F00               	moviw [0]fsr0
  5654  03AB  00AC               	movwf	??_printf+2
  5655  03AC  3F01               	moviw [1]fsr0
  5656  03AD  00AD               	movwf	??_printf+3
  5657  03AE  082D               	movf	??_printf+3,w
  5658  03AF  0234               	subwf	printf@val+1,w
  5659  03B0  1D03               	skipz
  5660  03B1  2BB4               	goto	u1275
  5661  03B2  082C               	movf	??_printf+2,w
  5662  03B3  0233               	subwf	printf@val,w
  5663  03B4                     u1275:	
  5664  03B4  1C03               	btfss	3,0
  5665  03B5  2BBE               	goto	l1473
  5666                           
  5667                           ;doprnt.c: 1307: break;
  5668  03B6  3001               	movlw	1
  5669  03B7  00AA               	movwf	??_printf
  5670  03B8  082A               	movf	??_printf,w
  5671  03B9  07B5               	addwf	printf@c,f
  5672  03BA  3005               	movlw	5
  5673  03BB  0635               	xorwf	printf@c,w
  5674  03BC  1D03               	btfss	3,2
  5675  03BD  2B9F               	goto	l1467
  5676  03BE                     l1473:	
  5677                           
  5678                           ;doprnt.c: 1422: {
  5679                           ;doprnt.c: 1438: if(flag & 0x03)
  5680  03BE  082E               	movf	printf@flag,w
  5681  03BF  3903               	andlw	3
  5682  03C0  1903               	btfsc	3,2
  5683  03C1  2BC6               	goto	l1477
  5684                           
  5685                           ;doprnt.c: 1439: (putch('-') );
  5686  03C2  302D               	movlw	45
  5687  03C3  318F  273D  3183   	fcall	_putch
  5688  03C6                     l1477:	
  5689                           
  5690                           ;doprnt.c: 1469: }
  5691                           ;doprnt.c: 1472: prec = c;
  5692  03C6  0020               	movlb	0	; select bank0
  5693  03C7  0835               	movf	printf@c,w
  5694  03C8  00AA               	movwf	??_printf
  5695  03C9  082A               	movf	??_printf,w
  5696  03CA  00AF               	movwf	printf@prec
  5697  03CB                     l1483:	
  5698                           ;doprnt.c: 1474: while(prec--) {
  5699                           
  5700  03CB  30FF               	movlw	255
  5701  03CC  0020               	movlb	0	; select bank0
  5702  03CD  00AA               	movwf	??_printf
  5703  03CE  082A               	movf	??_printf,w
  5704  03CF  07AF               	addwf	printf@prec,f
  5705  03D0  0A2F               	incf	printf@prec,w
  5706  03D1  1903               	btfsc	3,2
  5707  03D2  2B22               	goto	l1485
  5708                           
  5709                           ;doprnt.c: 1478: {
  5710                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5711  03D3  300A               	movlw	10
  5712  03D4  00F9               	movwf	___lwmod@divisor
  5713  03D5  3000               	movlw	0
  5714  03D6  00FA               	movwf	___lwmod@divisor+1
  5715  03D7  082F               	movf	printf@prec,w
  5716  03D8  00AA               	movwf	??_printf
  5717  03D9  01AB               	clrf	??_printf+1
  5718  03DA  35AA               	lslf	??_printf,f
  5719  03DB  0DAB               	rlf	??_printf+1,f
  5720  03DC  3014               	movlw	low (_dpowers| (0+32768))
  5721  03DD  072A               	addwf	??_printf,w
  5722  03DE  0084               	movwf	4
  5723  03DF  3080               	movlw	high (_dpowers| (0+32768))
  5724  03E0  3D2B               	addwfc	??_printf+1,w
  5725  03E1  0085               	movwf	5
  5726  03E2  3F00               	moviw [0]fsr0
  5727  03E3  00F1               	movwf	___lwdiv@divisor
  5728  03E4  3F01               	moviw [1]fsr0
  5729  03E5  00F2               	movwf	___lwdiv@divisor+1
  5730  03E6  0834               	movf	printf@val+1,w
  5731  03E7  00F4               	movwf	___lwdiv@dividend+1
  5732  03E8  0833               	movf	printf@val,w
  5733  03E9  00F3               	movwf	___lwdiv@dividend
  5734  03EA  3187  27BB  3183   	fcall	___lwdiv
  5735  03ED  0872               	movf	?___lwdiv+1,w
  5736  03EE  00FC               	movwf	___lwmod@dividend+1
  5737  03EF  0871               	movf	?___lwdiv,w
  5738  03F0  00FB               	movwf	___lwmod@dividend
  5739  03F1  318F  27A6  3183   	fcall	___lwmod
  5740  03F4  0879               	movf	?___lwmod,w
  5741  03F5  3E30               	addlw	48
  5742  03F6  0020               	movlb	0	; select bank0
  5743  03F7  00AC               	movwf	??_printf+2
  5744  03F8  082C               	movf	??_printf+2,w
  5745  03F9  00B5               	movwf	printf@c
  5746                           
  5747                           ;doprnt.c: 1523: }
  5748                           ;doprnt.c: 1524: (putch(c) );
  5749  03FA  0835               	movf	printf@c,w
  5750  03FB  318F  273D  3183   	fcall	_putch
  5751  03FE  2BCB               	goto	l1483
  5752  03FF                     l308:	
  5753                           ;doprnt.c: 1540: return 0;
  5754                           ;	Return value of _printf is never used
  5755                           
  5756                           ;doprnt.c: 1525: }
  5757                           ;doprnt.c: 1533: }
  5758                           ;doprnt.c: 1535: alldone:
  5759                           
  5760  03FF  0008               	return
  5761  0400                     __end_of_printf:	
  5762                           
  5763                           	psect	text17
  5764  0F3D                     __ptext17:	
  5765 ;; *************** function _putch *****************
  5766 ;; Defined at:
  5767 ;;		line 3 in file "hardware_config.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  data            1    wreg     unsigned char 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  data            1    1[COMMON] unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1    wreg      void 
  5774 ;; Registers used:
  5775 ;;		wreg
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5785 ;;Total ram usage:        1 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; Hardware stack levels required when called:    1
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_printf
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           
  5796                           ;psect for function _putch
  5797  0F3D                     _putch:	
  5798                           
  5799                           ;incstack = 0
  5800                           ; Regs used in _putch: [wreg]
  5801                           ;putch@data stored from wreg
  5802  0F3D  00F1               	movwf	putch@data
  5803  0F3E                     l261:	
  5804                           ;hardware_config.c: 5: continue;
  5805                           
  5806                           ;hardware_config.c: 4: while( ! TXIF)
  5807                           
  5808  0F3E  0020               	movlb	0	; select bank0
  5809  0F3F  1E11               	btfss	17,4	;volatile
  5810  0F40  2F3E               	goto	l261
  5811                           
  5812                           ;hardware_config.c: 6: TXREG = data;
  5813  0F41  0871               	movf	putch@data,w
  5814  0F42  0023               	movlb	3	; select bank3
  5815  0F43  009A               	movwf	26	;volatile
  5816  0F44  0008               	return
  5817  0F45                     __end_of_putch:	
  5818                           
  5819                           	psect	text18
  5820  0FA6                     __ptext18:	
  5821 ;; *************** function ___lwmod *****************
  5822 ;; Defined at:
  5823 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;  divisor         2    9[COMMON] unsigned int 
  5826 ;;  dividend        2   11[COMMON] unsigned int 
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;  counter         1    1[BANK0 ] unsigned char 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  2    9[COMMON] unsigned int 
  5831 ;; Registers used:
  5832 ;;		wreg, status,2, status,0
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5838 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5839 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5840 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5841 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5842 ;;Total ram usage:        6 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    1
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_printf
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           
  5853                           ;psect for function ___lwmod
  5854  0FA6                     ___lwmod:	
  5855                           
  5856                           ;incstack = 0
  5857                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5858  0FA6  0879               	movf	___lwmod@divisor,w
  5859  0FA7  047A               	iorwf	___lwmod@divisor+1,w
  5860  0FA8  1903               	btfsc	3,2
  5861  0FA9  2FCE               	goto	l1421
  5862  0FAA  0020               	movlb	0	; select bank0
  5863  0FAB  01A1               	clrf	___lwmod@counter
  5864  0FAC  0AA1               	incf	___lwmod@counter,f
  5865  0FAD                     l1411:	
  5866  0FAD  1BFA               	btfsc	___lwmod@divisor+1,7
  5867  0FAE  2FB9               	goto	l1413
  5868  0FAF  3001               	movlw	1
  5869  0FB0                     u1175:	
  5870  0FB0  35F9               	lslf	___lwmod@divisor,f
  5871  0FB1  0DFA               	rlf	___lwmod@divisor+1,f
  5872  0FB2  0B89               	decfsz	9,f
  5873  0FB3  2FB0               	goto	u1175
  5874  0FB4  3001               	movlw	1
  5875  0FB5  00A0               	movwf	??___lwmod
  5876  0FB6  0820               	movf	??___lwmod,w
  5877  0FB7  07A1               	addwf	___lwmod@counter,f
  5878  0FB8  2FAD               	goto	l1411
  5879  0FB9                     l1413:	
  5880  0FB9  087A               	movf	___lwmod@divisor+1,w
  5881  0FBA  027C               	subwf	___lwmod@dividend+1,w
  5882  0FBB  1D03               	skipz
  5883  0FBC  2FBF               	goto	u1195
  5884  0FBD  0879               	movf	___lwmod@divisor,w
  5885  0FBE  027B               	subwf	___lwmod@dividend,w
  5886  0FBF                     u1195:	
  5887  0FBF  1C03               	skipc
  5888  0FC0  2FC5               	goto	l1417
  5889  0FC1  0879               	movf	___lwmod@divisor,w
  5890  0FC2  02FB               	subwf	___lwmod@dividend,f
  5891  0FC3  087A               	movf	___lwmod@divisor+1,w
  5892  0FC4  3BFC               	subwfb	___lwmod@dividend+1,f
  5893  0FC5                     l1417:	
  5894  0FC5  3001               	movlw	1
  5895  0FC6                     u1205:	
  5896  0FC6  36FA               	lsrf	___lwmod@divisor+1,f
  5897  0FC7  0CF9               	rrf	___lwmod@divisor,f
  5898  0FC8  0B89               	decfsz	9,f
  5899  0FC9  2FC6               	goto	u1205
  5900  0FCA  3001               	movlw	1
  5901  0FCB  02A1               	subwf	___lwmod@counter,f
  5902  0FCC  1D03               	btfss	3,2
  5903  0FCD  2FB9               	goto	l1413
  5904  0FCE                     l1421:	
  5905  0FCE  087C               	movf	___lwmod@dividend+1,w
  5906  0FCF  00FA               	movwf	?___lwmod+1
  5907  0FD0  087B               	movf	___lwmod@dividend,w
  5908  0FD1  00F9               	movwf	?___lwmod
  5909  0FD2  0008               	return
  5910  0FD3                     __end_of___lwmod:	
  5911                           
  5912                           	psect	text19
  5913  07BB                     __ptext19:	
  5914 ;; *************** function ___lwdiv *****************
  5915 ;; Defined at:
  5916 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  divisor         2    1[COMMON] unsigned int 
  5919 ;;  dividend        2    3[COMMON] unsigned int 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  quotient        2    6[COMMON] unsigned int 
  5922 ;;  counter         1    8[COMMON] unsigned char 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  2    1[COMMON] unsigned int 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5932 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;Total ram usage:        8 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    1
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_printf
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           
  5947                           ;psect for function ___lwdiv
  5948  07BB                     ___lwdiv:	
  5949                           
  5950                           ;incstack = 0
  5951                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5952  07BB  01F6               	clrf	___lwdiv@quotient
  5953  07BC  01F7               	clrf	___lwdiv@quotient+1
  5954  07BD  0871               	movf	___lwdiv@divisor,w
  5955  07BE  0472               	iorwf	___lwdiv@divisor+1,w
  5956  07BF  1903               	btfsc	3,2
  5957  07C0  2FEA               	goto	l1399
  5958  07C1  01F8               	clrf	___lwdiv@counter
  5959  07C2  0AF8               	incf	___lwdiv@counter,f
  5960  07C3                     l1387:	
  5961  07C3  1BF2               	btfsc	___lwdiv@divisor+1,7
  5962  07C4  2FCF               	goto	l1389
  5963  07C5  3001               	movlw	1
  5964  07C6                     u1105:	
  5965  07C6  35F1               	lslf	___lwdiv@divisor,f
  5966  07C7  0DF2               	rlf	___lwdiv@divisor+1,f
  5967  07C8  0B89               	decfsz	9,f
  5968  07C9  2FC6               	goto	u1105
  5969  07CA  3001               	movlw	1
  5970  07CB  00F5               	movwf	??___lwdiv
  5971  07CC  0875               	movf	??___lwdiv,w
  5972  07CD  07F8               	addwf	___lwdiv@counter,f
  5973  07CE  2FC3               	goto	l1387
  5974  07CF                     l1389:	
  5975  07CF  3001               	movlw	1
  5976  07D0                     u1125:	
  5977  07D0  35F6               	lslf	___lwdiv@quotient,f
  5978  07D1  0DF7               	rlf	___lwdiv@quotient+1,f
  5979  07D2  0B89               	decfsz	9,f
  5980  07D3  2FD0               	goto	u1125
  5981  07D4  0872               	movf	___lwdiv@divisor+1,w
  5982  07D5  0274               	subwf	___lwdiv@dividend+1,w
  5983  07D6  1D03               	skipz
  5984  07D7  2FDA               	goto	u1135
  5985  07D8  0871               	movf	___lwdiv@divisor,w
  5986  07D9  0273               	subwf	___lwdiv@dividend,w
  5987  07DA                     u1135:	
  5988  07DA  1C03               	skipc
  5989  07DB  2FE1               	goto	l1395
  5990  07DC  0871               	movf	___lwdiv@divisor,w
  5991  07DD  02F3               	subwf	___lwdiv@dividend,f
  5992  07DE  0872               	movf	___lwdiv@divisor+1,w
  5993  07DF  3BF4               	subwfb	___lwdiv@dividend+1,f
  5994  07E0  1476               	bsf	___lwdiv@quotient,0
  5995  07E1                     l1395:	
  5996  07E1  3001               	movlw	1
  5997  07E2                     u1145:	
  5998  07E2  36F2               	lsrf	___lwdiv@divisor+1,f
  5999  07E3  0CF1               	rrf	___lwdiv@divisor,f
  6000  07E4  0B89               	decfsz	9,f
  6001  07E5  2FE2               	goto	u1145
  6002  07E6  3001               	movlw	1
  6003  07E7  02F8               	subwf	___lwdiv@counter,f
  6004  07E8  1D03               	btfss	3,2
  6005  07E9  2FCF               	goto	l1389
  6006  07EA                     l1399:	
  6007  07EA  0877               	movf	___lwdiv@quotient+1,w
  6008  07EB  00F2               	movwf	?___lwdiv+1
  6009  07EC  0876               	movf	___lwdiv@quotient,w
  6010  07ED  00F1               	movwf	?___lwdiv
  6011  07EE  0008               	return
  6012  07EF                     __end_of___lwdiv:	
  6013                           
  6014                           	psect	intentry
  6015  0004                     __pintentry:	
  6016 ;; *************** function _input_interrupt_function *****************
  6017 ;; Defined at:
  6018 ;;		line 67 in file "input.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		None
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;Total ram usage:        1 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; This function calls:
  6039 ;;		Nothing
  6040 ;; This function is called by:
  6041 ;;		Interrupt level 1
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045  0004                     _input_interrupt_function:	
  6046                           
  6047                           ;incstack = 0
  6048                           ; Regs used in _input_interrupt_function: []
  6049  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6050  0005  3180               	pagesel	$
  6051  0006  0020               	movlb	0	; select bank0
  6052  0007  087F               	movf	127,w
  6053  0008  00F0               	movwf	??_input_interrupt_function
  6054  0009  0870               	movf	??_input_interrupt_function,w
  6055  000A  00FF               	movwf	127
  6056  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6057  000C  0009               	retfie
  6058  000D                     __end_of_input_interrupt_function:	
  6059  007E                     btemp	set	126	;btemp
  6060  007E                     int$flags	set	126
  6061  007E                     wtemp	set	126
  6062  007E                     wtemp0	set	126
  6063  0080                     wtemp1	set	128
  6064  0082                     wtemp2	set	130
  6065  0084                     wtemp3	set	132
  6066  0086                     wtemp4	set	134
  6067  0088                     wtemp5	set	136
  6068  007F                     wtemp6	set	127
  6069  007E                     ttemp	set	126
  6070  007E                     ttemp0	set	126
  6071  0081                     ttemp1	set	129
  6072  0084                     ttemp2	set	132
  6073  0087                     ttemp3	set	135
  6074  007F                     ttemp4	set	127
  6075  007E                     ltemp	set	126
  6076  007E                     ltemp0	set	126
  6077  0082                     ltemp1	set	130
  6078  0086                     ltemp2	set	134
  6079  0080                     ltemp3	set	128


Data Sizes:
    Strings     767
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     40      41
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    software_timer_clear$0	PTR struct . size(1) Largest target is 0

    input_valid$0	PTR struct . size(1) Largest target is 0

    _fassert@exp	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_110(CODE[28]), STR_108(CODE[27]), STR_106(CODE[28]), STR_104(CODE[11]), 
		 -> STR_102(CODE[28]), STR_100(CODE[27]), STR_98(CODE[28]), STR_96(CODE[11]), 
		 -> STR_94(CODE[28]), STR_92(CODE[23]), STR_90(CODE[28]), STR_88(CODE[11]), 
		 -> STR_86(CODE[28]), STR_84(CODE[11]), STR_82(CODE[28]), STR_80(CODE[28]), 
		 -> STR_78(CODE[11]), STR_76(CODE[28]), STR_74(CODE[28]), STR_72(CODE[11]), 
		 -> STR_70(CODE[28]), STR_68(CODE[11]), STR_66(CODE[11]), STR_64(CODE[19]), 
		 -> STR_62(CODE[11]), STR_60(CODE[19]), STR_58(CODE[11]), STR_56(CODE[17]), 
		 -> STR_54(CODE[30]), STR_52(CODE[32]), STR_50(CODE[16]), STR_48(CODE[32]), 
		 -> STR_46(CODE[7]), STR_44(CODE[16]), STR_42(CODE[32]), STR_40(CODE[16]), 
		 -> STR_38(CODE[29]), STR_36(CODE[30]), STR_34(CODE[21]), STR_32(CODE[29]), 
		 -> STR_30(CODE[16]), STR_28(CODE[16]), STR_26(CODE[12]), STR_24(CODE[10]), 
		 -> STR_22(CODE[21]), STR_20(CODE[12]), STR_18(CODE[9]), STR_16(CODE[12]), 
		 -> STR_14(CODE[9]), STR_12(CODE[12]), STR_10(CODE[9]), STR_8(CODE[12]), 
		 -> STR_6(CODE[17]), STR_4(CODE[10]), STR_2(CODE[12]), 

    _fassert@file	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_109(CODE[17]), STR_107(CODE[17]), STR_105(CODE[17]), STR_103(CODE[17]), 
		 -> STR_101(CODE[17]), STR_99(CODE[17]), STR_97(CODE[17]), STR_95(CODE[17]), 
		 -> STR_93(CODE[17]), STR_91(CODE[17]), STR_89(CODE[17]), STR_87(CODE[17]), 
		 -> STR_85(CODE[17]), STR_83(CODE[17]), STR_81(CODE[17]), STR_79(CODE[17]), 
		 -> STR_77(CODE[17]), STR_75(CODE[17]), STR_73(CODE[17]), STR_71(CODE[17]), 
		 -> STR_69(CODE[17]), STR_67(CODE[17]), STR_65(CODE[17]), STR_63(CODE[8]), 
		 -> STR_61(CODE[8]), STR_59(CODE[8]), STR_57(CODE[8]), STR_55(CODE[13]), 
		 -> STR_53(CODE[13]), STR_51(CODE[13]), STR_49(CODE[13]), STR_47(CODE[13]), 
		 -> STR_45(CODE[13]), STR_43(CODE[13]), STR_41(CODE[13]), STR_39(CODE[13]), 
		 -> STR_37(CODE[13]), STR_35(CODE[13]), STR_33(CODE[13]), STR_31(CODE[13]), 
		 -> STR_29(CODE[13]), STR_27(CODE[13]), STR_25(CODE[13]), STR_23(CODE[13]), 
		 -> STR_21(CODE[13]), STR_19(CODE[13]), STR_17(CODE[13]), STR_15(CODE[13]), 
		 -> STR_13(CODE[13]), STR_11(CODE[13]), STR_9(CODE[13]), STR_7(CODE[13]), 
		 -> STR_5(CODE[13]), STR_3(CODE[13]), STR_1(CODE[13]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_127(CODE[36]), STR_125(CODE[30]), STR_124(CODE[35]), STR_123(CODE[24]), 
		 -> STR_122(CODE[29]), STR_121(CODE[27]), STR_120(CODE[32]), STR_119(CODE[21]), 
		 -> STR_118(CODE[26]), STR_117(CODE[26]), STR_116(CODE[31]), STR_115(CODE[7]), 
		 -> STR_114(CODE[9]), STR_113(CODE[11]), STR_112(CODE[11]), STR_111(CODE[25]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_126(CODE[7]), STR_110(CODE[28]), STR_109(CODE[17]), STR_108(CODE[27]), 
		 -> STR_107(CODE[17]), STR_106(CODE[28]), STR_105(CODE[17]), STR_104(CODE[11]), 
		 -> STR_103(CODE[17]), STR_102(CODE[28]), STR_101(CODE[17]), STR_100(CODE[27]), 
		 -> STR_99(CODE[17]), STR_98(CODE[28]), STR_97(CODE[17]), STR_96(CODE[11]), 
		 -> STR_95(CODE[17]), STR_94(CODE[28]), STR_93(CODE[17]), STR_92(CODE[23]), 
		 -> STR_91(CODE[17]), STR_90(CODE[28]), STR_89(CODE[17]), STR_88(CODE[11]), 
		 -> STR_87(CODE[17]), STR_86(CODE[28]), STR_85(CODE[17]), STR_84(CODE[11]), 
		 -> STR_83(CODE[17]), STR_82(CODE[28]), STR_81(CODE[17]), STR_80(CODE[28]), 
		 -> STR_79(CODE[17]), STR_78(CODE[11]), STR_77(CODE[17]), STR_76(CODE[28]), 
		 -> STR_75(CODE[17]), STR_74(CODE[28]), STR_73(CODE[17]), STR_72(CODE[11]), 
		 -> STR_71(CODE[17]), STR_70(CODE[28]), STR_69(CODE[17]), STR_68(CODE[11]), 
		 -> STR_67(CODE[17]), STR_66(CODE[11]), STR_65(CODE[17]), STR_64(CODE[19]), 
		 -> STR_63(CODE[8]), STR_62(CODE[11]), STR_61(CODE[8]), STR_60(CODE[19]), 
		 -> STR_59(CODE[8]), STR_58(CODE[11]), STR_57(CODE[8]), STR_56(CODE[17]), 
		 -> STR_55(CODE[13]), STR_54(CODE[30]), STR_53(CODE[13]), STR_52(CODE[32]), 
		 -> STR_51(CODE[13]), STR_50(CODE[16]), STR_49(CODE[13]), STR_48(CODE[32]), 
		 -> STR_47(CODE[13]), STR_46(CODE[7]), STR_45(CODE[13]), STR_44(CODE[16]), 
		 -> STR_43(CODE[13]), STR_42(CODE[32]), STR_41(CODE[13]), STR_40(CODE[16]), 
		 -> STR_39(CODE[13]), STR_38(CODE[29]), STR_37(CODE[13]), STR_36(CODE[30]), 
		 -> STR_35(CODE[13]), STR_34(CODE[21]), STR_33(CODE[13]), STR_32(CODE[29]), 
		 -> STR_31(CODE[13]), STR_30(CODE[16]), STR_29(CODE[13]), STR_28(CODE[16]), 
		 -> STR_27(CODE[13]), STR_26(CODE[12]), STR_25(CODE[13]), STR_24(CODE[10]), 
		 -> STR_23(CODE[13]), STR_22(CODE[21]), STR_21(CODE[13]), STR_20(CODE[12]), 
		 -> STR_19(CODE[13]), STR_18(CODE[9]), STR_17(CODE[13]), STR_16(CODE[12]), 
		 -> STR_15(CODE[13]), STR_14(CODE[9]), STR_13(CODE[13]), STR_12(CODE[12]), 
		 -> STR_11(CODE[13]), STR_10(CODE[9]), STR_9(CODE[13]), STR_8(CODE[12]), 
		 -> STR_7(CODE[13]), STR_6(CODE[17]), STR_5(CODE[13]), STR_4(CODE[10]), 
		 -> STR_3(CODE[13]), STR_2(CODE[12]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    flag_array_get_flag_state@flag_array	PTR const struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    flag_array_set_numbers@flag_array	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    flag_array_initialise@flag_array	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    flag_array_set_flag@flag_array	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    flag_array_valid@flag_array	PTR const struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    byte_union_initialize@byte_u	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    byte_union_set_bit@byte_u	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    byte_union_set_byte@ptb	PTR unsigned char  size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), byte_union_get_byte@byte_u(BANK0[1]), 

    byte_union_set_byte@byte_u	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    sp__byte_union_get_byte_info	PTR const unsigned char  size(1) Largest target is 2
		 -> byte_union_get_byte_info@byte_u(COMMON[1]), 

    sp__byte_union_get_byte	PTR unsigned char  size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), byte_union_get_byte@byte_u(BANK0[1]), 

    byte_union_get_byte@ptb	PTR unsigned char  size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), byte_union_get_byte@byte_u(BANK0[1]), 

    byte_union_get_byte@byte_u	PTR struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 

    byte_union_get_bit_value@byte_u	PTR const struct . size(1) Largest target is 2
		 -> test_of_flag_array@array(BANK0[2]), 


Critical Paths under _main in COMMON

    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _input_interrupt_function in COMMON

    None.

Critical Paths under _main in BANK0

    _test_function->_test_of_flag_array
    _test_of_time_type->_printf
    _test_of_flag_array->_flag_array_get_flag_state
    _test_of_flag_array->_flag_array_initialise
    _test_of_flag_array->_flag_array_set_flag
    _flag_array_set_numbers->_flag_array_valid
    _flag_array_set_flag->_flag_array_valid
    _byte_union_set_bit->__fassert
    _flag_array_initialise->_byte_union_initialize
    _byte_union_initialize->_byte_union_set_byte
    _byte_union_set_byte->_byte_union_get_byte
    _byte_union_get_byte->__fassert
    _flag_array_get_flag_state->_flag_array_valid
    _flag_array_valid->__fassert
    _byte_union_get_bit_value->__fassert
    __fassert->_printf
    _printf->___lwmod

Critical Paths under _input_interrupt_function in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _input_interrupt_function in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _input_interrupt_function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _input_interrupt_function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _input_interrupt_function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _input_interrupt_function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _input_interrupt_function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _input_interrupt_function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _input_interrupt_function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _input_interrupt_function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _input_interrupt_function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _input_interrupt_function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _input_interrupt_function in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  254343
                      _test_function
 ---------------------------------------------------------------------------------
 (1) _test_function                                        0     0      0  254343
                 _test_of_flag_array
                  _test_of_time_type
 ---------------------------------------------------------------------------------
 (2) _test_of_time_type                                    4     4      0    2783
                                             22 BANK0      4     4      0
                             _printf
                    _time_type_valid
 ---------------------------------------------------------------------------------
 (3) _time_type_valid                                      4     1      3      22
                                              1 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _test_of_flag_array                                   3     3      0  251560
                                             37 BANK0      3     3      0
          _flag_array_get_flag_state
              _flag_array_initialise
                _flag_array_set_flag
             _flag_array_set_numbers
                   _flag_array_valid
                             _printf
 ---------------------------------------------------------------------------------
 (3) _flag_array_set_numbers                               3     2      1   35271
                                             32 BANK0      3     2      1
                           __fassert
                   _flag_array_valid
 ---------------------------------------------------------------------------------
 (3) _flag_array_set_flag                                  5     3      2   54568
                                             32 BANK0      5     3      2
                           __fassert
                 _byte_union_set_bit
                   _flag_array_valid
 ---------------------------------------------------------------------------------
 (4) _byte_union_set_bit                                   3     1      2   18028
                                             28 BANK0      3     1      2
                           __fassert
 ---------------------------------------------------------------------------------
 (3) _flag_array_initialise                                1     1      0   87659
                                             36 BANK0      1     1      0
                           __fassert
              _byte_union_initialize
                   _flag_array_valid
 ---------------------------------------------------------------------------------
 (4) _byte_union_initialize                                1     1      0   52499
                                             35 BANK0      1     1      0
                           __fassert
                _byte_union_set_byte
 ---------------------------------------------------------------------------------
 (5) _byte_union_set_byte                                  4     3      1   35067
                                             31 BANK0      4     3      1
                           __fassert
                _byte_union_get_byte
 ---------------------------------------------------------------------------------
 (6) _byte_union_get_byte                                  3     3      0   17479
                                             28 BANK0      3     3      0
                           __fassert
 ---------------------------------------------------------------------------------
 (3) _flag_array_get_flag_state                            5     4      1   53529
                                             32 BANK0      5     4      1
                           __fassert
           _byte_union_get_bit_value
                   _flag_array_valid
 ---------------------------------------------------------------------------------
 (3) _flag_array_valid                                     4     1      3   17684
                                             28 BANK0      4     1      3
                           __fassert
 ---------------------------------------------------------------------------------
 (4) _byte_union_get_bit_value                             3     2      1   17794
                                             28 BANK0      3     2      1
                           __fassert
 ---------------------------------------------------------------------------------
 (4) __fassert                                             6     0      6   17352
                                             22 BANK0      6     0      6
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              26    18      8    2601
                                              2 BANK0     20    12      8
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     337
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     340
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _input_interrupt_function                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _test_function
     _test_of_flag_array
       _flag_array_get_flag_state
         __fassert
           _printf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _putch
         _byte_union_get_bit_value
           __fassert
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
         _flag_array_valid
           __fassert
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
       _flag_array_initialise
         __fassert
           _printf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _putch
         _byte_union_initialize
           __fassert
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
           _byte_union_set_byte
             __fassert
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 _putch
             _byte_union_get_byte
               __fassert
                 _printf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   _putch
         _flag_array_valid
           __fassert
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
       _flag_array_set_flag
         __fassert
           _printf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _putch
         _byte_union_set_bit
           __fassert
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
         _flag_array_valid
           __fassert
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
       _flag_array_set_numbers
         __fassert
           _printf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _putch
         _flag_array_valid
           __fassert
             _printf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _putch
       _flag_array_valid
         __fassert
           _printf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             _putch
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
     _test_of_time_type
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         _putch
       _time_type_valid

 _input_interrupt_function (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      29       5       51.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      36      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      36      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Feb 21 16:56:05 2016

                                  pc 0002                          __CFG_CP$OFF 0000  
                                 l40 0762                                   l61 0F7C  
                                 l81 0607                                   l86 0799  
                                 l78 05C1                                   l97 06B2  
                                 l99 06E2              flag_array_set_flag@name 0041  
             ?_flag_array_initialise 0070                          __CFG_LVP$ON 0000  
                                l234 04B0                                  l235 04CD  
                                l308 03FF                                  l236 04EA  
                                l261 0F3E                                  l237 0504  
                                _RB6 006E                         __CFG_CPD$OFF 0000  
           flag_array_set_flag@state 0040                                  wreg 0009  
                               S1945 07EF                                 S1947 0800  
         __end_of_test_of_flag_array 0521                                 l1411 0FAD  
                               l1413 0FB9                                 l1421 0FCE  
                               l1431 033E                                 l1511 077C  
                               l1417 0FC5                                 l1433 0341  
                               l1521 0549                                 l1451 0383  
                               l1531 056C                                 l1523 054C  
                               l1603 0F96                                 l1461 0399  
                               l1445 0354                                 l1533 0574  
                               l1525 0554                                 l1541 058C  
                               l1517 0535                                 l1535 057C  
                               l1527 055C                                 l1543 0596  
                               l1711 0647                                 l1473 03BE  
                               l1449 0369                                 l1537 0584  
                               l1529 0564                                 l1609 0FA1  
                               l1561 0414                                 l1395 07E1  
                               l1387 07C3                                 l1483 03CB  
                               l1467 039F                                 l1571 043F  
                               l1635 05F0                                 l1619 0F4F  
                               l1723 066F                                 l1389 07CF  
                               l1477 03C6                                 l1485 0322  
                               l1549 05AA                                 l1493 0FE7  
                               l1581 046D                                 l1573 0449  
                               l1629 05DA                                 l1717 065A  
                               l1399 07EA                                 l1671 06CB  
                               l1583 0476                                 l1575 0452  
                               l1567 042A                                 l1655 071A  
                               l1735 0698                                 l1681 0703  
                               l1585 047F                                 l1577 045B  
                               l1499 0FFD                                 l1579 0464  
                               l1659 072E                                 l1589 0488  
                               STR_1 029F                                 STR_2 02AC  
                               STR_3 029F                                 STR_4 02E4  
                               STR_5 029F                                 STR_6 0271  
                               STR_7 029F                                 STR_8 02AC  
                               STR_9 029F                                 u1105 07C6  
                               u1125 07D0                                 u1205 0FC6  
                               u1135 07DA                                 u1145 07E2  
                               u1175 0FB0                                 u1195 0FBF  
                               u1275 03B4                                 u1705 0681  
                               _SPEN 0CEF                                 _TXEN 0CF5  
                               _TXIF 008C                                 _SYNC 0CF4  
                       __CFG_WRT$OFF 0000                                 _main 0F33  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E             __size_of_time_type_valid 000D  
                               ltemp 007E                        __CFG_BORV$LOW 0000  
                               start 000D                                 ttemp 007E  
                               wtemp 007E                        __CFG_MCLRE$ON 0000  
          __size_of_flag_array_valid 0024                                ?_main 0070  
                              STR_10 02F7                                STR_20 02AC  
                              STR_21 029F                                STR_30 0282  
                              STR_22 0238                                STR_23 029F  
                              STR_15 029F                                STR_31 0292  
                              STR_16 02AC                                STR_40 0282  
                              STR_24 02E4                                STR_32 011D  
                              STR_25 029F                                STR_17 029F  
                              STR_41 0292                                STR_33 0292  
                      __CFG_WDTE$OFF 0000                                STR_18 02F7  
                              STR_26 02AC                                STR_50 0282  
                              STR_34 0238                                STR_42 0085  
                              STR_19 029F                                STR_51 0292  
                              STR_43 0292                                STR_35 0292  
                              STR_27 0292                                STR_44 0282  
                              STR_52 0085                                STR_28 0282  
                              STR_60 024D                                STR_36 00E2  
                              STR_53 0292                                STR_45 0292  
                              STR_37 0292                                STR_29 0292  
                              STR_38 011D                                STR_54 00E2  
                              STR_46 0316                                STR_70 013A  
                              STR_55 0292                                STR_47 0292  
                              STR_39 0292                                STR_48 0085  
                              STR_56 0271                                STR_49 0292  
                              STR_57 0300                                STR_65 0260  
                              STR_58 02D9                                STR_66 02CE  
                              STR_92 020C                       __CFG_DEBUG$OFF 0000  
                    __end_of___lwdiv 07EF                      __end_of___lwmod 0FD3  
                              _PORTA 000C                                _PORTB 000D  
                              _PORTC 000E      flag_array_initialise@flag_array 0044  
                              _TXREG 019A                       __CFG_FCMEN$OFF 0000  
           byte_union_set_bit@byte_u 003E                      __end_of_dpowers 001E  
 __size_of_flag_array_get_flag_state 0068                                _putch 0F3D  
                    ??_test_function 007D                       __CFG_BOREN$OFF 0000  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F           __end_of_byte_union_set_bit 0494  
                     __CFG_CSWEN$OFF 0000                      __initialization 000F  
            ?_flag_array_set_numbers 0040                         __end_of_main 0F37  
                       __fassert@exp 003A                               ??_main 007D  
                             STR_100 0171                               STR_111 01DB  
                             STR_112 02B8                               STR_120 0065  
                             STR_113 02C3                               STR_121 0156  
                             STR_114 02EE                               STR_122 0100  
                             STR_115 030F                               STR_123 01F4  
                             STR_108 018C                               STR_116 00A5  
                             STR_124 0042                               STR_117 01A7  
                             STR_125 00C4                               STR_126 0308  
                             STR_118 01C1                               STR_119 0223  
                             STR_127 001E                               ?_putch 0070  
  __end_of_flag_array_get_flag_state 0706                     __end_of__fassert 0F68  
                     __CFG_PWRTE$OFF 0000             _byte_union_get_bit_value 0521  
     __end_of_flag_array_set_numbers 074E                    ??_time_type_valid 0074  
                     __CFG_STVREN$ON 0000        flag_array_get_flag_state@name 0040  
                          ??___lwdiv 0075                            ??___lwmod 0020  
                             _printf 031D                  _flag_array_set_flag 05AD  
        __end_of_byte_union_get_byte 1000              __end_of__initialization 0010  
                    __CFG_FEXTOSC$LP 0000       byte_union_get_bit_value@byte_u 003E  
        __end_of_byte_union_set_byte 0785                 ?_flag_array_set_flag 0040  
flag_array_get_flag_state@flag_array 0044              ??_flag_array_initialise 007D  
                     __pcstackCOMMON 0070                     _flag_array_valid 0F82  
                      __end_of_putch 0F45                        __fassert@file 0038  
                      __fassert@line 0036                              ??_putch 0071  
                         __pbssBANK0 0048           flag_array_valid@flag_array 003F  
              ??_flag_array_set_flag 0042                _byte_union_initialize 0F68  
                 _test_of_flag_array 0494                           __pmaintext 0F33  
                    __CFG_PPS1WAY$ON 0000                           __pintentry 0004  
                ?_test_of_flag_array 0070                              ?_printf 0022  
           _input_interrupt_function 0004                            ?__fassert 0036  
               ??_test_of_flag_array 0045               byte_union_get_byte@ptb 003D  
                            ___lwdiv 07BB                   _interrupt_variable 0048  
                            ___lwmod 0FA6                              __ptext1 0F37  
                            __ptext2 062D                              __ptext3 0F45  
                            __ptext4 0494                              __ptext5 0706  
                            __ptext6 05AD                              __ptext7 0400  
                            __ptext8 0785                              __ptext9 0F68  
                    __size_of_printf 00E3                           ??__fassert 007D  
                 _byte_union_set_bit 0400                              _dpowers 0014  
                ?_byte_union_set_bit 003C           ??_byte_union_get_bit_value 007D  
               end_of_initialization 0010                      _time_type_valid 0F45  
              __end_of_test_function 0F3D               ?_byte_union_initialize 0070  
                            printf@c 0035                              printf@f 0022  
               ??_byte_union_set_bit 007D                         __pstringtext 0014  
    byte_union_get_bit_value@bit_nbr 003C             __end_of_flag_array_valid 0FA6  
         ?_flag_array_get_flag_state 0040        flag_array_set_flag@flag_array 0044  
     __size_of_flag_array_initialise 0036        __end_of_flag_array_initialise 07BB  
            byte_union_set_bit@state 003C                       __end_of_printf 0400  
                start_initialization 000F              __end_of_time_type_valid 0F52  
                 test_of_time_type@i 0038         __size_of_byte_union_get_byte 002D  
                   __CFG_LPBOREN$OFF 0000           ??_input_interrupt_function 0070  
              test_of_time_type@type 0037         __size_of_byte_union_set_byte 0037  
                           ??_printf 002A                            ___latbits 0002  
                  __size_of__fassert 0016                        __pcstackBANK0 0020  
   __end_of_byte_union_get_bit_value 05AD          __end_of_flag_array_set_flag 062D  
           ??_flag_array_set_numbers 0041          byte_union_get_bit_value@val 003D  
                   ___lwdiv@dividend 0073                             ?___lwdiv 0071  
                           ?___lwmod 0079                            __pswtext1 07EF  
                          __pswtext2 0800                  time_type_valid@type 0074  
        byte_union_initialize@byte_u 0043                     ?_time_type_valid 0071  
                   ___lwdiv@quotient 0076                       __size_of_putch 0008  
            ??_byte_union_initialize 007D          __size_of_test_of_flag_array 008D  
          byte_union_get_byte@byte_u 003E                    _test_of_time_type 062D  
                 ?_test_of_time_type 0070                  ??_test_of_time_type 0036  
                         printf@flag 002E                           printf@prec 002F  
                  ?_flag_array_valid 003C      __size_of_flag_array_set_numbers 0048  
        ??_flag_array_get_flag_state 0041            byte_union_set_bit@bit_nbr 003D  
                 ??_flag_array_valid 007D            __end_of_test_of_time_type 069E  
   __end_of_input_interrupt_function 000D                     __CFG_RSTOSC$SOSC 0000  
             byte_union_set_byte@val 003F               byte_union_set_byte@ptb 0041  
        __size_of_byte_union_set_bit 0094    __size_of_byte_union_get_bit_value 008C  
          ?_byte_union_get_bit_value 003C         flag_array_get_flag_state@val 0043  
                   __size_of___lwdiv 0034                     __size_of___lwmod 002D  
                _byte_union_get_byte 0FD3              test_of_flag_array@array 0046  
                           __fassert 0F52               __size_of_test_function 0006  
                    ___lwdiv@divisor 0071                      ___lwdiv@counter 0078  
                           __ptext10 074E                             __ptext11 0FD3  
                           __ptext12 069E                             __ptext13 0F82  
                           __ptext14 0521                             __ptext15 0F52  
                           __ptext16 031D                             __ptext17 0F3D  
                           __ptext18 0FA6                             __ptext19 07BB  
                _byte_union_set_byte 074E                 ?_byte_union_get_byte 0070  
                      __size_of_main 0004                             int$flags 007E  
               ?_byte_union_set_byte 003F                            printf@val 0033  
             _flag_array_set_numbers 0706            _flag_array_get_flag_state 069E  
              _flag_array_initialise 0785                            putch@data 0071  
                           intlevel1 0000                ??_byte_union_get_byte 003C  
                   ___lwmod@dividend 007B                        _test_function 0F37  
                  __CFG_CLKOUTEN$OFF 0000           __size_of_test_of_time_type 0071  
          flag_array_set_numbers@nbr 0040                             printf@ap 0030  
                           printf@cp 0031                ??_byte_union_set_byte 0040  
                    ___lwmod@divisor 0079    __size_of_input_interrupt_function 0009  
                    ___lwmod@counter 0021            ?_input_interrupt_function 0070  
          byte_union_set_byte@byte_u 0042                       ?_test_function 0070  
   flag_array_set_numbers@flag_array 0042       __size_of_byte_union_initialize 001A  
      __end_of_byte_union_initialize 0F82         __size_of_flag_array_set_flag 0080  
