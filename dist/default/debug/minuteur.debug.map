Microchip MPLAB XC8 Compiler V1.36 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.36\dat\en_msgs.txt -cs \
  -h+dist/default/debug\minuteur.debug.sym \
  --cmf=dist/default/debug\minuteur.debug.cmf -z -Q16F18345 \
  -oC:\Users\Michel\AppData\Local\Temp\s6h4.2 \
  -Mdist/default/debug/minuteur.debug.map -E1 -ver=XC8 \
  -ASTACK=02029h-023efh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh -ABANK3=01A0h-01EFh \
  -ABANK4=0220h-026Fh -ABANK5=02A0h-02EFh -ABANK6=0320h-036Fh \
  -ABANK7=03A0h-03EFh -ABANK8=0420h-046Fh -ABANK9=04A0h-04EFh \
  -ABANK10=0520h-056Fh -ABANK11=05A0h-05EFh -ABANK12=0620h-064Fh \
  -ABIGRAM=02000h-023EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh,01A0h-01EFh,0220h-026Fh,02A0h-02EFh,0320h-036Fh,03A0h-03EFh,0420h-046Fh,04A0h-04EFh,0520h-056Fh,05A0h-05EFh,0620h-064Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh,01A0h-01EFh,0220h-026Fh,02A0h-02EFh,0320h-036Fh,03A0h-03EFh,0420h-046Fh,04A0h-04EFh,0520h-056Fh,05A0h-05EFh,0620h-064Fh \
  -ASFR0=00h-01Fh -ASFR1=080h-09Fh -ASFR2=0100h-011Fh -ASFR3=0180h-019Fh \
  -ASFR4=0200h-021Fh -ASFR5=0280h-029Fh -ASFR6=0300h-031Fh \
  -ASFR7=0380h-039Fh -ASFR8=0400h-041Fh -ASFR9=0480h-049Fh \
  -ASFR10=0500h-051Fh -ASFR11=0580h-059Fh -ASFR12=0600h-061Fh \
  -ASFR13=0680h-06EFh -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh \
  -ASFR16=0800h-086Fh -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh \
  -ASFR19=0980h-09EFh -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh \
  -ASFR22=0B00h-0B6Fh -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh \
  -ASFR25=0C80h-0CEFh -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh \
  -ASFR28=0E00h-0E6Fh -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh \
  -ASFR31=0F80h-0FEFh -preset_vec=00h,intentry=04h,init,end_init \
  -ppowerup=CODE -pcinit=CODE -pfunctab=CODE -ACONFIG=08007h-0800Ah \
  -pconfig=CONFIG -DCONFIG=2 -AIDLOC=08000h-08003h -pidloc=IDLOC -DIDLOC=2 \
  -AEEDATA=00h-0FFh/0F000h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\Michel\AppData\Local\Temp\s6h4.obj \
  dist/default/debug\minuteur.debug.obj 

Object code version is 3.11

Machine type is 16F18345



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Michel\AppData\Local\Temp\s6h4.obj
                end_init                              D        D        2        8       0
                reset_vec                             0        0        2        0       0
                config                             8007     8007        4    1000E       0
dist/default/debug\minuteur.debug.obj
                cinit                                 F        F        5        8       0
                intentry                              4        4        9        8       0
                text19                              7BB      7BB       34      63A       0
                text18                              FA6      FA6       2D     1F4C       0
                text17                              F3D      F3D        8     1E7A       0
                text16                              31D      31D       E3      63A       0
                text15                              F52      F52       16     1EA4       0
                swtext2                             800      800       10     1000       0
                text14                              521      521       8C      63A       0
                text13                              F82      F82       24     1F04       0
                text12                              69E      69E       68      63A       0
                text11                              FD3      FD3       2D     1FA6       0
                text10                              74E      74E       37      63A       0
                text9                               F68      F68       1A     1ED0       0
                text8                               785      785       36      63A       0
                swtext1                             7EF      7EF       10      FDE       0
                text7                               400      400       94      63A       0
                text6                               5AD      5AD       80      63A       0
                text5                               706      706       48      63A       0
                text4                               494      494       8D      63A       0
                text3                               F45      F45        D     1E8A       0
                text2                               62D      62D       71      63A       0
                text1                               F37      F37        6     1E6E       0
                maintext                            F33      F33        4     1E66       0
                cstackBANK0                          20       20       28       20       1
                cstackCOMMON                         70       70        D       70       1
                bssBANK0                             48       48        1       20       1
                stringtext                           14       14      309       28       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              D        D        2         0
                cinit                                 F        F        5         0
                intentry                              4        4        9         0
                reset_vec                             0        0        2         0
                text19                              7BB      7BB       34         0
                text18                              FA6      FA6       2D         0
                text17                              F3D      F3D        8         0
                text16                              31D      31D       E3         0
                text15                              F52      F52       16         0
                text14                              521      521       8C         0
                text13                              F82      F82       24         0
                text12                              69E      69E       68         0
                text11                              FD3      FD3       2D         0
                text10                              74E      74E       37         0
                text9                               F68      F68       1A         0
                text8                               785      785       36         0
                text7                               400      400       94         0
                text6                               5AD      5AD       80         0
                text5                               706      706       48         0
                text4                               494      494       8D         0
                text3                               F45      F45        D         0
                text2                               62D      62D       71         0
                text1                               F37      F37        6         0
                maintext                            F33      F33        4         0

        CLASS   STRCODE        
                stringtext                           14       14      309         0

        CLASS   STRING         

        CLASS   CONST          
                swtext2                             800      800       10         0
                swtext1                             7EF      7EF       10         0

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        D         1

        CLASS   BANK0          
                cstackBANK0                          20       20       28         1
                bssBANK0                             48       48        1         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   BANK8          

        CLASS   BANK9          

        CLASS   BANK10         

        CLASS   BANK11         

        CLASS   BANK12         

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        4         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                intentry                       000004  000010  000014         8       0  CODE        2
                cstackBANK0                    000020  000029  000049        20       1  BANK0       1
                stringtext                     000014  000309  00031D        28       0  STRCODE     2
                cstackCOMMON                   000070  00000D  00007D        70       1  COMMON      1
                text16                         00031D  0004D2  0007EF       63A       0  CODE        2
                swtext1                        0007EF  000010  0007FF       FDE       0  CONST       2
                swtext2                        000800  000010  000810      1000       0  CONST       2
                maintext                       000F33  000004  000F37      1E66       0  CODE        2
                text1                          000F37  000006  000F3D      1E6E       0  CODE        2
                text17                         000F3D  000008  000F45      1E7A       0  CODE        2
                text3                          000F45  00000D  000F52      1E8A       0  CODE        2
                text15                         000F52  000016  000F68      1EA4       0  CODE        2
                text9                          000F68  00001A  000F82      1ED0       0  CODE        2
                text13                         000F82  000024  000FA6      1F04       0  CODE        2
                text18                         000FA6  00002D  000FD3      1F4C       0  CODE        2
                text11                         000FD3  00002D  001000      1FA6       0  CODE        2
                config                         008007  000004  00800B     1000E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            00049-0006F              27           1
        BANK1            000A0-000EF              50           1
        BANK10           00520-0056F              50           1
        BANK11           005A0-005EF              50           1
        BANK12           00620-0064F              30           1
        BANK2            00120-0016F              50           1
        BANK3            001A0-001EF              50           1
        BANK4            00220-0026F              50           1
        BANK5            002A0-002EF              50           1
        BANK6            00320-0036F              50           1
        BANK7            003A0-003EF              50           1
        BANK8            00420-0046F              50           1
        BANK9            004A0-004EF              50           1
        BIGRAM           02000-023EF             3F0           1
        CODE             00002-00003               2           2
                         007FF-007FF               1
                         00810-00F32             723
                         01000-01FFF             800
        COMMON           0007D-0007D               1           1
        CONST            00002-00003               2           2
                         007FF-007FF               1
                         00810-00F32             100
                         01000-01FFF             100
        EEDATA           0F000-0F0FF             100           2
        ENTRY            00002-00003               2           2
                         007FF-007FF               1
                         00810-00F32             100
                         01000-01FFF             100
        IDLOC            08000-08003               4           2
        RAM              00049-0006F              27           1
                         000A0-000EF              50
                         00120-0016F              50
                         001A0-001EF              50
                         00220-0026F              50
                         002A0-002EF              50
                         00320-0036F              50
                         003A0-003EF              50
                         00420-0046F              50
                         004A0-004EF              50
                         00520-0056F              50
                         005A0-005EF              50
                         00620-0064F              30
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0051F              20           1
        SFR11            00580-0059F              20           1
        SFR12            00600-0061F              20           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0011F              20           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-0019F              20           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0021F              20           1
        SFR5             00280-0029F              20           1
        SFR6             00300-0031F              20           1
        SFR7             00380-0039F              20           1
        SFR8             00400-0041F              20           1
        SFR9             00480-0049F              20           1
        STACK            02029-023EF             3C7           1
        STRCODE          00002-00003               2           2
                         007FF-007FF               1
                         00810-00F32             723
                         01000-01FFF            1000
        STRING           00002-00003               2           2
                         007FF-007FF               1
                         00810-00F32             100
                         01000-01FFF             100

                                  Symbol Table

?___lwdiv                            cstackCOMMON 00071
?___lwmod                            cstackCOMMON 00079
?_flag_array_valid                   cstackBANK0  0003C
?_printf                             cstackBANK0  00022
?_time_type_valid                    cstackCOMMON 00071
_PORTA                               (abs)        0000C
_PORTB                               (abs)        0000D
_PORTC                               (abs)        0000E
_RB6                                 (abs)        0006E
_SPEN                                (abs)        00CEF
_SYNC                                (abs)        00CF4
_TXEN                                (abs)        00CF5
_TXIF                                (abs)        0008C
_TXREG                               (abs)        0019A
__CFG_BOREN$OFF                      (abs)        00000
__CFG_BORV$LOW                       (abs)        00000
__CFG_CLKOUTEN$OFF                   (abs)        00000
__CFG_CP$OFF                         (abs)        00000
__CFG_CPD$OFF                        (abs)        00000
__CFG_CSWEN$OFF                      (abs)        00000
__CFG_DEBUG$OFF                      (abs)        00000
__CFG_FCMEN$OFF                      (abs)        00000
__CFG_FEXTOSC$LP                     (abs)        00000
__CFG_LPBOREN$OFF                    (abs)        00000
__CFG_LVP$ON                         (abs)        00000
__CFG_MCLRE$ON                       (abs)        00000
__CFG_PPS1WAY$ON                     (abs)        00000
__CFG_PWRTE$OFF                      (abs)        00000
__CFG_RSTOSC$SOSC                    (abs)        00000
__CFG_STVREN$ON                      (abs)        00000
__CFG_WDTE$OFF                       (abs)        00000
__CFG_WRT$OFF                        (abs)        00000
__Habs1                              abs1         00000
__Hbank0                             bank0        00000
__Hbank1                             bank1        00000
__Hbank10                            bank10       00000
__Hbank11                            bank11       00000
__Hbank12                            bank12       00000
__Hbank13                            bank13       00000
__Hbank14                            bank14       00000
__Hbank15                            bank15       00000
__Hbank16                            bank16       00000
__Hbank17                            bank17       00000
__Hbank18                            bank18       00000
__Hbank19                            bank19       00000
__Hbank2                             bank2        00000
__Hbank20                            bank20       00000
__Hbank21                            bank21       00000
__Hbank22                            bank22       00000
__Hbank23                            bank23       00000
__Hbank24                            bank24       00000
__Hbank25                            bank25       00000
__Hbank26                            bank26       00000
__Hbank27                            bank27       00000
__Hbank28                            bank28       00000
__Hbank29                            bank29       00000
__Hbank3                             bank3        00000
__Hbank30                            bank30       00000
__Hbank31                            bank31       00000
__Hbank4                             bank4        00000
__Hbank5                             bank5        00000
__Hbank6                             bank6        00000
__Hbank7                             bank7        00000
__Hbank8                             bank8        00000
__Hbank9                             bank9        00000
__Hbigram                            bigram       00000
__HbssBANK0                          bssBANK0     00000
__Hcinit                             cinit        00014
__Hclrtext                           clrtext      00000
__Hcode                              code         00000
__Hcommon                            common       00000
__Hconfig                            config       0800B
__HcstackBANK0                       cstackBANK0  00000
__HcstackCOMMON                      cstackCOMMON 00000
__Heeprom_data                       eeprom_data  00000
__Hend_init                          end_init     0000F
__Hfunctab                           functab      00000
__Hidloc                             idloc        00000
__Hinit                              init         0000D
__Hintentry                          intentry     0000D
__Hmaintext                          maintext     00000
__Hpowerup                           powerup      00000
__Hram                               ram          00000
__Hreset_vec                         reset_vec    00002
__Hsfr0                              sfr0         00000
__Hsfr1                              sfr1         00000
__Hsfr10                             sfr10        00000
__Hsfr11                             sfr11        00000
__Hsfr12                             sfr12        00000
__Hsfr13                             sfr13        00000
__Hsfr14                             sfr14        00000
__Hsfr15                             sfr15        00000
__Hsfr16                             sfr16        00000
__Hsfr17                             sfr17        00000
__Hsfr18                             sfr18        00000
__Hsfr19                             sfr19        00000
__Hsfr2                              sfr2         00000
__Hsfr20                             sfr20        00000
__Hsfr21                             sfr21        00000
__Hsfr22                             sfr22        00000
__Hsfr23                             sfr23        00000
__Hsfr24                             sfr24        00000
__Hsfr25                             sfr25        00000
__Hsfr26                             sfr26        00000
__Hsfr27                             sfr27        00000
__Hsfr28                             sfr28        00000
__Hsfr29                             sfr29        00000
__Hsfr3                              sfr3         00000
__Hsfr30                             sfr30        00000
__Hsfr31                             sfr31        00000
__Hsfr4                              sfr4         00000
__Hsfr5                              sfr5         00000
__Hsfr6                              sfr6         00000
__Hsfr7                              sfr7         00000
__Hsfr8                              sfr8         00000
__Hsfr9                              sfr9         00000
__Hspace_0                           (abs)        0800B
__Hspace_1                           (abs)        0007D
__Hspace_2                           (abs)        00000
__Hspace_3                           (abs)        00000
__Hstack                             stack        00000
__Hstrings                           strings      00000
__Hstringtext                        stringtext   00000
__Htext                              text         00000
__Labs1                              abs1         00000
__Lbank0                             bank0        00000
__Lbank1                             bank1        00000
__Lbank10                            bank10       00000
__Lbank11                            bank11       00000
__Lbank12                            bank12       00000
__Lbank13                            bank13       00000
__Lbank14                            bank14       00000
__Lbank15                            bank15       00000
__Lbank16                            bank16       00000
__Lbank17                            bank17       00000
__Lbank18                            bank18       00000
__Lbank19                            bank19       00000
__Lbank2                             bank2        00000
__Lbank20                            bank20       00000
__Lbank21                            bank21       00000
__Lbank22                            bank22       00000
__Lbank23                            bank23       00000
__Lbank24                            bank24       00000
__Lbank25                            bank25       00000
__Lbank26                            bank26       00000
__Lbank27                            bank27       00000
__Lbank28                            bank28       00000
__Lbank29                            bank29       00000
__Lbank3                             bank3        00000
__Lbank30                            bank30       00000
__Lbank31                            bank31       00000
__Lbank4                             bank4        00000
__Lbank5                             bank5        00000
__Lbank6                             bank6        00000
__Lbank7                             bank7        00000
__Lbank8                             bank8        00000
__Lbank9                             bank9        00000
__Lbigram                            bigram       00000
__LbssBANK0                          bssBANK0     00000
__Lcinit                             cinit        0000F
__Lclrtext                           clrtext      00000
__Lcode                              code         00000
__Lcommon                            common       00000
__Lconfig                            config       08007
__LcstackBANK0                       cstackBANK0  00000
__LcstackCOMMON                      cstackCOMMON 00000
__Leeprom_data                       eeprom_data  00000
__Lend_init                          end_init     0000D
__Lfunctab                           functab      00000
__Lidloc                             idloc        00000
__Linit                              init         0000D
__Lintentry                          intentry     00004
__Lmaintext                          maintext     00000
__Lpowerup                           powerup      00000
__Lram                               ram          00000
__Lreset_vec                         reset_vec    00000
__Lsfr0                              sfr0         00000
__Lsfr1                              sfr1         00000
__Lsfr10                             sfr10        00000
__Lsfr11                             sfr11        00000
__Lsfr12                             sfr12        00000
__Lsfr13                             sfr13        00000
__Lsfr14                             sfr14        00000
__Lsfr15                             sfr15        00000
__Lsfr16                             sfr16        00000
__Lsfr17                             sfr17        00000
__Lsfr18                             sfr18        00000
__Lsfr19                             sfr19        00000
__Lsfr2                              sfr2         00000
__Lsfr20                             sfr20        00000
__Lsfr21                             sfr21        00000
__Lsfr22                             sfr22        00000
__Lsfr23                             sfr23        00000
__Lsfr24                             sfr24        00000
__Lsfr25                             sfr25        00000
__Lsfr26                             sfr26        00000
__Lsfr27                             sfr27        00000
__Lsfr28                             sfr28        00000
__Lsfr29                             sfr29        00000
__Lsfr3                              sfr3         00000
__Lsfr30                             sfr30        00000
__Lsfr31                             sfr31        00000
__Lsfr4                              sfr4         00000
__Lsfr5                              sfr5         00000
__Lsfr6                              sfr6         00000
__Lsfr7                              sfr7         00000
__Lsfr8                              sfr8         00000
__Lsfr9                              sfr9         00000
__Lspace_0                           (abs)        00000
__Lspace_1                           (abs)        00000
__Lspace_2                           (abs)        00000
__Lspace_3                           (abs)        00000
__Lstack                             stack        00000
__Lstrings                           strings      00000
__Lstringtext                        stringtext   00000
__Ltext                              text         00000
__S0                                 (abs)        0800B
__S1                                 (abs)        0007D
__S2                                 (abs)        00000
__S3                                 (abs)        00000
___int_sp                            stack        00000
___latbits                           (abs)        00002
___lwdiv                             text19       007BB
___lwdiv@counter                     cstackCOMMON 00078
___lwdiv@dividend                    cstackCOMMON 00073
___lwdiv@divisor                     cstackCOMMON 00071
___lwdiv@quotient                    cstackCOMMON 00076
___lwmod                             text18       00FA6
___lwmod@counter                     cstackBANK0  00021
___lwmod@dividend                    cstackCOMMON 0007B
___lwmod@divisor                     cstackCOMMON 00079
___sp                                stack        00000
__end_of___lwdiv                     text19       007EF
__end_of___lwmod                     text18       00FD3
__end_of__fassert                    text15       00F68
__end_of__initialization             cinit        00010
__end_of_byte_union_get_bit_value    text14       005AD
__end_of_byte_union_get_byte         text11       01000
__end_of_byte_union_initialize       text9        00F82
__end_of_byte_union_set_bit          text7        00494
__end_of_byte_union_set_byte         text10       00785
__end_of_dpowers                     stringtext   0001E
__end_of_flag_array_get_flag_state   text12       00706
__end_of_flag_array_initialise       text8        007BB
__end_of_flag_array_set_flag         text6        0062D
__end_of_flag_array_set_numbers      text5        0074E
__end_of_flag_array_valid            text13       00FA6
__end_of_input_interrupt_function    intentry     0000D
__end_of_main                        maintext     00F37
__end_of_printf                      text16       00400
__end_of_putch                       text17       00F45
__end_of_test_function               text1        00F3D
__end_of_test_of_flag_array          text4        00521
__end_of_test_of_time_type           text2        0069E
__end_of_time_type_valid             text3        00F52
__fassert                            text15       00F52
__fassert@exp                        cstackBANK0  0003A
__fassert@file                       cstackBANK0  00038
__fassert@line                       cstackBANK0  00036
__initialization                     cinit        0000F
__pbssBANK0                          bssBANK0     00048
__pcstackBANK0                       cstackBANK0  00020
__pcstackCOMMON                      cstackCOMMON 00070
__pintentry                          intentry     00004
__pmaintext                          maintext     00F33
__pstringtext                        stringtext   00014
__pswtext1                           swtext1      007EF
__pswtext2                           swtext2      00800
__ptext1                             text1        00F37
__ptext10                            text10       0074E
__ptext11                            text11       00FD3
__ptext12                            text12       0069E
__ptext13                            text13       00F82
__ptext14                            text14       00521
__ptext15                            text15       00F52
__ptext16                            text16       0031D
__ptext17                            text17       00F3D
__ptext18                            text18       00FA6
__ptext19                            text19       007BB
__ptext2                             text2        0062D
__ptext3                             text3        00F45
__ptext4                             text4        00494
__ptext5                             text5        00706
__ptext6                             text6        005AD
__ptext7                             text7        00400
__ptext8                             text8        00785
__ptext9                             text9        00F68
__size_of___lwdiv                    (abs)        00000
__size_of___lwmod                    (abs)        00000
__size_of__fassert                   (abs)        00000
__size_of_byte_union_get_bit_value   (abs)        00000
__size_of_byte_union_get_byte        (abs)        00000
__size_of_byte_union_initialize      (abs)        00000
__size_of_byte_union_set_bit         (abs)        00000
__size_of_byte_union_set_byte        (abs)        00000
__size_of_flag_array_get_flag_state  (abs)        00000
__size_of_flag_array_initialise      (abs)        00000
__size_of_flag_array_set_flag        (abs)        00000
__size_of_flag_array_set_numbers     (abs)        00000
__size_of_flag_array_valid           (abs)        00000
__size_of_input_interrupt_function   (abs)        00000
__size_of_main                       (abs)        00000
__size_of_printf                     (abs)        00000
__size_of_putch                      (abs)        00000
__size_of_test_function              (abs)        00000
__size_of_test_of_flag_array         (abs)        00000
__size_of_test_of_time_type          (abs)        00000
__size_of_time_type_valid            (abs)        00000
_byte_union_get_bit_value            text14       00521
_byte_union_get_byte                 text11       00FD3
_byte_union_initialize               text9        00F68
_byte_union_set_bit                  text7        00400
_byte_union_set_byte                 text10       0074E
_dpowers                             stringtext   00014
_flag_array_get_flag_state           text12       0069E
_flag_array_initialise               text8        00785
_flag_array_set_flag                 text6        005AD
_flag_array_set_numbers              text5        00706
_flag_array_valid                    text13       00F82
_input_interrupt_function            intentry     00004
_interrupt_variable                  bssBANK0     00048
_main                                maintext     00F33
_printf                              text16       0031D
_putch                               text17       00F3D
_test_function                       text1        00F37
_test_of_flag_array                  text4        00494
_test_of_time_type                   text2        0062D
_time_type_valid                     text3        00F45
btemp                                (abs)        0007E
byte_union_get_bit_value@bit_nbr     cstackBANK0  0003C
byte_union_get_bit_value@byte_u      cstackBANK0  0003E
byte_union_get_bit_value@val         cstackBANK0  0003D
byte_union_get_byte@byte_u           cstackBANK0  0003E
byte_union_get_byte@ptb              cstackBANK0  0003D
byte_union_initialize@byte_u         cstackBANK0  00043
byte_union_set_bit@bit_nbr           cstackBANK0  0003D
byte_union_set_bit@byte_u            cstackBANK0  0003E
byte_union_set_bit@state             cstackBANK0  0003C
byte_union_set_byte@byte_u           cstackBANK0  00042
byte_union_set_byte@ptb              cstackBANK0  00041
byte_union_set_byte@val              cstackBANK0  0003F
end_of_initialization                cinit        00010
flag_array_get_flag_state@flag_array cstackBANK0  00044
flag_array_get_flag_state@name       cstackBANK0  00040
flag_array_get_flag_state@val        cstackBANK0  00043
flag_array_initialise@flag_array     cstackBANK0  00044
flag_array_set_flag@flag_array       cstackBANK0  00044
flag_array_set_flag@name             cstackBANK0  00041
flag_array_set_flag@state            cstackBANK0  00040
flag_array_set_numbers@flag_array    cstackBANK0  00042
flag_array_set_numbers@nbr           cstackBANK0  00040
flag_array_valid@flag_array          cstackBANK0  0003F
int$flags                            (abs)        0007E
intlevel0                            functab      00000
intlevel1                            functab      00000
intlevel2                            functab      00000
intlevel3                            functab      00000
intlevel4                            functab      00000
intlevel5                            functab      00000
ltemp                                (abs)        0007E
ltemp0                               (abs)        0007E
ltemp1                               (abs)        00082
ltemp2                               (abs)        00086
ltemp3                               (abs)        00080
printf@ap                            cstackBANK0  00030
printf@c                             cstackBANK0  00035
printf@cp                            cstackBANK0  00031
printf@f                             cstackBANK0  00022
printf@flag                          cstackBANK0  0002E
printf@prec                          cstackBANK0  0002F
printf@val                           cstackBANK0  00033
putch@data                           cstackCOMMON 00071
reset_vec                            reset_vec    00000
stackhi                              (abs)        023EF
stacklo                              (abs)        02029
start                                init         0000D
start_initialization                 cinit        0000F
test_of_flag_array@array             cstackBANK0  00046
test_of_time_type@i                  cstackBANK0  00038
test_of_time_type@type               cstackBANK0  00037
time_type_valid@type                 cstackCOMMON 00074
ttemp                                (abs)        0007E
ttemp0                               (abs)        0007E
ttemp1                               (abs)        00081
ttemp2                               (abs)        00084
ttemp3                               (abs)        00087
ttemp4                               (abs)        0007F
wtemp                                (abs)        0007E
wtemp0                               (abs)        0007E
wtemp1                               (abs)        00080
wtemp2                               (abs)        00082
wtemp3                               (abs)        00084
wtemp4                               (abs)        00086
wtemp5                               (abs)        00088
wtemp6                               (abs)        0007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 14 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    4[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:   10
 This function calls:
		_test_function
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _test_function *****************
 Defined at:
		line 50 in file "functions_test.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_test_of_flag_array
		_test_of_time_type
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _test_of_time_type *****************
 Defined at:
		line 5 in file "functions_test.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   24[BANK0 ] int 
  type            1   23[BANK0 ] enum E189
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_printf
		_time_type_valid
 This function is called by:
		_test_function
 This function uses a non-reentrant model


 *************** function _time_type_valid *****************
 Defined at:
		line 4 in file "time_type.c"
 Parameters:    Size  Location     Type
  type            1    wreg     enum E184
 Auto vars:     Size  Location     Type
  type            1    4[COMMON] enum E184
 Return value:  Size  Location     Type
                  2    1[COMMON] int 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         3       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_test_of_time_type
 This function uses a non-reentrant model


 *************** function _test_of_flag_array *****************
 Defined at:
		line 24 in file "functions_test.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  array           2   38[BANK0 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_flag_array_get_flag_state
		_flag_array_initialise
		_flag_array_set_flag
		_flag_array_set_numbers
		_flag_array_valid
		_printf
 This function is called by:
		_test_function
 This function uses a non-reentrant model


 *************** function _flag_array_set_numbers *****************
 Defined at:
		line 40 in file "flag_array.c"
 Parameters:    Size  Location     Type
  flag_array      1    wreg     PTR struct .
		 -> test_of_flag_array@array(2), 
  nbr             1   32[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  flag_array      1   34[BANK0 ] PTR struct .
		 -> test_of_flag_array@array(2), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		__fassert
		_flag_array_valid
 This function is called by:
		_test_of_flag_array
 This function uses a non-reentrant model


 *************** function _flag_array_set_flag *****************
 Defined at:
		line 14 in file "flag_array.c"
 Parameters:    Size  Location     Type
  flag_array      1    wreg     PTR struct .
		 -> test_of_flag_array@array(2), 
  state           1   32[BANK0 ] unsigned char 
  name            1   33[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  flag_array      1   36[BANK0 ] PTR struct .
		 -> test_of_flag_array@array(2), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		__fassert
		_byte_union_set_bit
		_flag_array_valid
 This function is called by:
		_test_of_flag_array
		_software_timer_set_enable
		_software_timer_clear_overflow
		_software_timer_initialize
		_software_timer_update
 This function uses a non-reentrant model


 *************** function _byte_union_set_bit *****************
 Defined at:
		line 80 in file "byte_union.c"
 Parameters:    Size  Location     Type
  byte_u          1    wreg     PTR struct .
		 -> test_of_flag_array@array(2), 
  state           1   28[BANK0 ] unsigned char 
  bit_nbr         1   29[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  byte_u          1   30[BANK0 ] PTR struct .
		 -> test_of_flag_array@array(2), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		__fassert
 This function is called by:
		_flag_array_set_flag
 This function uses a non-reentrant model


 *************** function _flag_array_initialise *****************
 Defined at:
		line 28 in file "flag_array.c"
 Parameters:    Size  Location     Type
  flag_array      1    wreg     PTR struct .
		 -> test_of_flag_array@array(2), 
 Auto vars:     Size  Location     Type
  flag_array      1   36[BANK0 ] PTR struct .
		 -> test_of_flag_array@array(2), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		__fassert
		_byte_union_initialize
		_flag_array_valid
 This function is called by:
		_test_of_flag_array
 This function uses a non-reentrant model


 *************** function _byte_union_initialize *****************
 Defined at:
		line 115 in file "byte_union.c"
 Parameters:    Size  Location     Type
  byte_u          1    wreg     PTR struct .
		 -> test_of_flag_array@array(2), 
 Auto vars:     Size  Location     Type
  byte_u          1   35[BANK0 ] PTR struct .
		 -> test_of_flag_array@array(2), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		__fassert
		_byte_union_set_byte
 This function is called by:
		_flag_array_initialise
 This function uses a non-reentrant model


 *************** function _byte_union_set_byte *****************
 Defined at:
		line 68 in file "byte_union.c"
 Parameters:    Size  Location     Type
  byte_u          1    wreg     PTR struct .
		 -> test_of_flag_array@array(2), 
  val             1   31[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  byte_u          1   34[BANK0 ] PTR struct .
		 -> test_of_flag_array@array(2), 
  ptb             1   33[BANK0 ] PTR unsigned char 
		 -> test_of_flag_array@array(2), byte_union_get_byte@byte_u(1), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		__fassert
		_byte_union_get_byte
 This function is called by:
		_byte_union_initialize
 This function uses a non-reentrant model


 *************** function _byte_union_get_byte *****************
 Defined at:
		line 43 in file "byte_union.c"
 Parameters:    Size  Location     Type
  byte_u          1    wreg     PTR struct .
		 -> test_of_flag_array@array(2), 
 Auto vars:     Size  Location     Type
  byte_u          1   30[BANK0 ] PTR struct .
		 -> test_of_flag_array@array(2), 
  ptb             1   29[BANK0 ] PTR unsigned char 
		 -> test_of_flag_array@array(2), byte_union_get_byte@byte_u(1), 
 Return value:  Size  Location     Type
                  1    wreg      PTR unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		__fassert
 This function is called by:
		_byte_union_set_byte
 This function uses a non-reentrant model


 *************** function _flag_array_get_flag_state *****************
 Defined at:
		line 52 in file "flag_array.c"
 Parameters:    Size  Location     Type
  flag_array      1    wreg     PTR const struct .
		 -> test_of_flag_array@array(2), 
  name            1   32[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  flag_array      1   36[BANK0 ] PTR const struct .
		 -> test_of_flag_array@array(2), 
  val             1   35[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		__fassert
		_byte_union_get_bit_value
		_flag_array_valid
 This function is called by:
		_test_of_flag_array
		_software_timer_get_enable_value
		_software_timer_get_overflow_value
		_software_timer_update
 This function uses a non-reentrant model


 *************** function _flag_array_valid *****************
 Defined at:
		line 6 in file "flag_array.c"
 Parameters:    Size  Location     Type
  flag_array      1    wreg     PTR const struct .
		 -> test_of_flag_array@array(2), 
 Auto vars:     Size  Location     Type
  flag_array      1   31[BANK0 ] PTR const struct .
		 -> test_of_flag_array@array(2), 
 Return value:  Size  Location     Type
                  2   28[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		__fassert
 This function is called by:
		_flag_array_set_flag
		_flag_array_initialise
		_flag_array_set_numbers
		_flag_array_get_flag_state
		_test_of_flag_array
		_software_timer_valid
 This function uses a non-reentrant model


 *************** function _byte_union_get_bit_value *****************
 Defined at:
		line 4 in file "byte_union.c"
 Parameters:    Size  Location     Type
  byte_u          1    wreg     PTR const struct .
		 -> test_of_flag_array@array(2), 
  bit_nbr         1   28[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  byte_u          1   30[BANK0 ] PTR const struct .
		 -> test_of_flag_array@array(2), 
  val             1   29[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		__fassert
 This function is called by:
		_flag_array_get_flag_state
 This function uses a non-reentrant model


 *************** function __fassert *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\assert.c"
 Parameters:    Size  Location     Type
  line            2   22[BANK0 ] int 
  file            2   24[BANK0 ] PTR const unsigned char 
		 -> STR_109(17), STR_107(17), STR_105(17), STR_103(17), 
		 -> STR_101(17), STR_99(17), STR_97(17), STR_95(17), 
		 -> STR_93(17), STR_91(17), STR_89(17), STR_87(17), 
		 -> STR_85(17), STR_83(17), STR_81(17), STR_79(17), 
		 -> STR_77(17), STR_75(17), STR_73(17), STR_71(17), 
		 -> STR_69(17), STR_67(17), STR_65(17), STR_63(8), 
		 -> STR_61(8), STR_59(8), STR_57(8), STR_55(13), 
		 -> STR_53(13), STR_51(13), STR_49(13), STR_47(13), 
		 -> STR_45(13), STR_43(13), STR_41(13), STR_39(13), 
		 -> STR_37(13), STR_35(13), STR_33(13), STR_31(13), 
		 -> STR_29(13), STR_27(13), STR_25(13), STR_23(13), 
		 -> STR_21(13), STR_19(13), STR_17(13), STR_15(13), 
		 -> STR_13(13), STR_11(13), STR_9(13), STR_7(13), 
		 -> STR_5(13), STR_3(13), STR_1(13), 
  exp             2   26[BANK0 ] PTR const unsigned char 
		 -> STR_110(28), STR_108(27), STR_106(28), STR_104(11), 
		 -> STR_102(28), STR_100(27), STR_98(28), STR_96(11), 
		 -> STR_94(28), STR_92(23), STR_90(28), STR_88(11), 
		 -> STR_86(28), STR_84(11), STR_82(28), STR_80(28), 
		 -> STR_78(11), STR_76(28), STR_74(28), STR_72(11), 
		 -> STR_70(28), STR_68(11), STR_66(11), STR_64(19), 
		 -> STR_62(11), STR_60(19), STR_58(11), STR_56(17), 
		 -> STR_54(30), STR_52(32), STR_50(16), STR_48(32), 
		 -> STR_46(7), STR_44(16), STR_42(32), STR_40(16), 
		 -> STR_38(29), STR_36(30), STR_34(21), STR_32(29), 
		 -> STR_30(16), STR_28(16), STR_26(12), STR_24(10), 
		 -> STR_22(21), STR_20(12), STR_18(9), STR_16(12), 
		 -> STR_14(9), STR_12(12), STR_10(9), STR_8(12), 
		 -> STR_6(17), STR_4(10), STR_2(12), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_printf
 This function is called by:
		_byte_union_get_bit_value
		_byte_union_get_byte
		_byte_union_set_byte
		_byte_union_set_bit
		_byte_union_initialize
		_flag_array_valid
		_flag_array_set_flag
		_flag_array_initialise
		_flag_array_set_numbers
		_flag_array_get_flag_state
		_byte_union_get_byte_info
		_input_initialize
		_input_update
		_software_timer_valid
		_software_timer_set_preset
		_software_timer_set_enable
		_software_timer_clear_overflow
		_software_timer_initialize
		_software_timer_get_enable_value
		_software_timer_get_overflow_value
		_software_timer_update
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  f               2    2[BANK0 ] PTR const unsigned char 
		 -> STR_127(36), STR_125(30), STR_124(35), STR_123(24), 
		 -> STR_122(29), STR_121(27), STR_120(32), STR_119(21), 
		 -> STR_118(26), STR_117(26), STR_116(31), STR_115(7), 
		 -> STR_114(9), STR_113(11), STR_112(11), STR_111(25), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  val             2   19[BANK0 ] unsigned int 
  cp              2   17[BANK0 ] PTR const unsigned char 
		 -> STR_126(7), STR_110(28), STR_109(17), STR_108(27), 
		 -> STR_107(17), STR_106(28), STR_105(17), STR_104(11), 
		 -> STR_103(17), STR_102(28), STR_101(17), STR_100(27), 
		 -> STR_99(17), STR_98(28), STR_97(17), STR_96(11), 
		 -> STR_95(17), STR_94(28), STR_93(17), STR_92(23), 
		 -> STR_91(17), STR_90(28), STR_89(17), STR_88(11), 
		 -> STR_87(17), STR_86(28), STR_85(17), STR_84(11), 
		 -> STR_83(17), STR_82(28), STR_81(17), STR_80(28), 
		 -> STR_79(17), STR_78(11), STR_77(17), STR_76(28), 
		 -> STR_75(17), STR_74(28), STR_73(17), STR_72(11), 
		 -> STR_71(17), STR_70(28), STR_69(17), STR_68(11), 
		 -> STR_67(17), STR_66(11), STR_65(17), STR_64(19), 
		 -> STR_63(8), STR_62(11), STR_61(8), STR_60(19), 
		 -> STR_59(8), STR_58(11), STR_57(8), STR_56(17), 
		 -> STR_55(13), STR_54(30), STR_53(13), STR_52(32), 
		 -> STR_51(13), STR_50(16), STR_49(13), STR_48(32), 
		 -> STR_47(13), STR_46(7), STR_45(13), STR_44(16), 
		 -> STR_43(13), STR_42(32), STR_41(13), STR_40(16), 
		 -> STR_39(13), STR_38(29), STR_37(13), STR_36(30), 
		 -> STR_35(13), STR_34(21), STR_33(13), STR_32(29), 
		 -> STR_31(13), STR_30(16), STR_29(13), STR_28(16), 
		 -> STR_27(13), STR_26(12), STR_25(13), STR_24(10), 
		 -> STR_23(13), STR_22(21), STR_21(13), STR_20(12), 
		 -> STR_19(13), STR_18(9), STR_17(13), STR_16(12), 
		 -> STR_15(13), STR_14(9), STR_13(13), STR_12(12), 
		 -> STR_11(13), STR_10(9), STR_9(13), STR_8(12), 
		 -> STR_7(13), STR_6(17), STR_5(13), STR_4(10), 
		 -> STR_3(13), STR_2(12), STR_1(13), 
  len             2    0        unsigned int 
  c               1   21[BANK0 ] char 
  ap              1   16[BANK0 ] PTR void [1]
		 -> ?_printf(2), 
  prec            1   15[BANK0 ] char 
  flag            1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    2[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       8       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:       20 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___lwdiv
		___lwmod
		_putch
 This function is called by:
		_test_of_time_type
		_test_of_flag_array
		__fassert
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 3 in file "hardware_config.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    9[COMMON] unsigned int 
  dividend        2   11[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    9[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         4       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    1[COMMON] unsigned int 
  dividend        2    3[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    6[COMMON] unsigned int 
  counter         1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    1[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         4       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _input_interrupt_function *****************
 Defined at:
		line 67 in file "input.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
      Params:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
byte_union.c
		_byte_union_set_bit		CODE           	0400	0000	149
		_byte_union_initialize		CODE           	0F68	0000	27
		_byte_union_get_byte		CODE           	0FD3	0000	46
		_byte_union_set_byte		CODE           	074E	0000	56
		_byte_union_get_bit_value		CODE           	0521	0000	141

byte_union.c estimated size: 419

input.c
		_input_interrupt_function		CODE           	0004	0000	10

input.c estimated size: 10

flag_array.c
		_flag_array_get_flag_state		CODE           	069E	0000	105
		_flag_array_set_flag		CODE           	05AD	0000	129
		_flag_array_set_numbers		CODE           	0706	0000	73
		_flag_array_valid		CODE           	0F82	0000	37
		_flag_array_initialise		CODE           	0785	0000	55

flag_array.c estimated size: 399

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c
		_printf        		CODE           	031D	0000	228

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c estimated size: 228

hardware_config.c
		_putch         		CODE           	0F3D	0000	9

hardware_config.c estimated size: 9

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c
		___lwmod       		CODE           	0FA6	0000	46

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c estimated size: 46

shared
		_dpowers       		STRCODE        	0014	0000	11
		__initialization		CODE           	000F	0000	2

shared estimated size: 13

functions_test.c
		_test_of_time_type		CODE           	062D	0000	114
		_test_function 		CODE           	0F37	0000	7
		_test_of_flag_array		CODE           	0494	0000	142

functions_test.c estimated size: 263

time_type.c
		_time_type_valid		CODE           	0F45	0000	14

time_type.c estimated size: 14

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\assert.c
		__fassert      		CODE           	0F52	0000	23

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\assert.c estimated size: 23

main.c
		_main          		CODE           	0F33	0000	5

main.c estimated size: 5

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c
		___lwdiv       		CODE           	07BB	0000	53

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c estimated size: 53

